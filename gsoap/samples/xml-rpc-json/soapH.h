/* soapH.h
   Generated by gSOAP 2.8.20 from xml-rpc.h

Copyright(C) 2000-2014, Robert van Engelen, Genivia Inc. All Rights Reserved.
The generated code is released under one of the following licenses:
GPL or Genivia's license for commercial use.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
*/

#ifndef soapH_H
#define soapH_H
#include "soapStub.h"
#ifdef __cplusplus
extern "C" {
#endif
#ifndef WITH_NOIDREF
SOAP_FMAC3 void SOAP_FMAC4 soap_markelement(struct soap*, const void*, int);
SOAP_FMAC3 int SOAP_FMAC4 soap_putindependent(struct soap*);
SOAP_FMAC3 int SOAP_FMAC4 soap_getindependent(struct soap*);
#endif
SOAP_FMAC3 void *SOAP_FMAC4 soap_getelement(struct soap*, int*);
SOAP_FMAC3 int SOAP_FMAC4 soap_putelement(struct soap*, const void*, const char*, int, int);
SOAP_FMAC3 int SOAP_FMAC4 soap_ignore_element(struct soap*);

SOAP_FMAC3 const char ** SOAP_FMAC4 soap_faultcode(struct soap *soap);

/* _boolean is a typedef element/attribute synonym for byte */

#ifndef SOAP_TYPE__boolean
#define SOAP_TYPE__boolean (11)
#endif

#define soap_default__boolean(soap, a) soap_default_byte(soap, a)


#define soap_out__boolean soap_out_byte


#define soap_in__boolean soap_in_byte


#define soap_put__boolean soap_put_byte


#define soap_get__boolean soap_get_byte


#ifndef SOAP_TYPE_byte
#define SOAP_TYPE_byte (3)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_byte(struct soap*, char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_byte(struct soap*, const char*, int, const char *, const char*);
SOAP_FMAC3 char * SOAP_FMAC4 soap_in_byte(struct soap*, const char*, char *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_byte(struct soap*, const char *, const char*, const char*);

#ifndef soap_write_byte
#define soap_write_byte(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_byte(soap, data),0) || soap_put_byte(soap, data, "byte", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 char * SOAP_FMAC4 soap_get_byte(struct soap*, char *, const char*, const char*);

#ifndef soap_read_byte
#define soap_read_byte(soap, data) ( soap_begin_recv(soap) || !soap_get_byte(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


/* _int is a typedef element/attribute synonym for int */

#ifndef SOAP_TYPE__int
#define SOAP_TYPE__int (15)
#endif

#define soap_default__int(soap, a) soap_default_int(soap, a)


#define soap_out__int soap_out_int


#define soap_in__int soap_in_int


#define soap_put__int soap_put_int


#define soap_get__int soap_get_int


/* _i4 is a typedef element/attribute synonym for int */

#ifndef SOAP_TYPE__i4
#define SOAP_TYPE__i4 (14)
#endif

#define soap_default__i4(soap, a) soap_default_int(soap, a)


#define soap_out__i4 soap_out_int


#define soap_in__i4 soap_in_int


#define soap_put__i4 soap_put_int


#define soap_get__i4 soap_get_int


#ifndef SOAP_TYPE_int
#define SOAP_TYPE_int (1)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_int(struct soap*, int *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_int(struct soap*, const char*, int, const int *, const char*);
SOAP_FMAC3 int * SOAP_FMAC4 soap_in_int(struct soap*, const char*, int *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_int(struct soap*, const int *, const char*, const char*);

#ifndef soap_write_int
#define soap_write_int(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_int(soap, data),0) || soap_put_int(soap, data, "int", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 int * SOAP_FMAC4 soap_get_int(struct soap*, int *, const char*, const char*);

#ifndef soap_read_int
#define soap_read_int(soap, data) ( soap_begin_recv(soap) || !soap_get_int(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


/* _double is a typedef element/attribute synonym for double */

#ifndef SOAP_TYPE__double
#define SOAP_TYPE__double (13)
#endif

#define soap_default__double(soap, a) soap_default_double(soap, a)


#define soap_out__double soap_out_double


#define soap_in__double soap_in_double


#define soap_put__double soap_put_double


#define soap_get__double soap_get_double


#ifndef SOAP_TYPE_double
#define SOAP_TYPE_double (12)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_double(struct soap*, double *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_double(struct soap*, const char*, int, const double *, const char*);
SOAP_FMAC3 double * SOAP_FMAC4 soap_in_double(struct soap*, const char*, double *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_double(struct soap*, const double *, const char*, const char*);

#ifndef soap_write_double
#define soap_write_double(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_double(soap, data),0) || soap_put_double(soap, data, "double", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 double * SOAP_FMAC4 soap_get_double(struct soap*, double *, const char*, const char*);

#ifndef soap_read_double
#define soap_read_double(soap, data) ( soap_begin_recv(soap) || !soap_get_double(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_unsignedByte
#define SOAP_TYPE_unsignedByte (29)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_unsignedByte(struct soap*, unsigned char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_unsignedByte(struct soap*, const char*, int, const unsigned char *, const char*);
SOAP_FMAC3 unsigned char * SOAP_FMAC4 soap_in_unsignedByte(struct soap*, const char*, unsigned char *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_unsignedByte(struct soap*, const unsigned char *, const char*, const char*);

#ifndef soap_write_unsignedByte
#define soap_write_unsignedByte(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_unsignedByte(soap, data),0) || soap_put_unsignedByte(soap, data, "unsignedByte", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 unsigned char * SOAP_FMAC4 soap_get_unsignedByte(struct soap*, unsigned char *, const char*, const char*);

#ifndef soap_read_unsignedByte
#define soap_read_unsignedByte(soap, data) ( soap_begin_recv(soap) || !soap_get_unsignedByte(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_unsignedInt
#define SOAP_TYPE_unsignedInt (28)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_unsignedInt(struct soap*, unsigned int *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_unsignedInt(struct soap*, const char*, int, const unsigned int *, const char*);
SOAP_FMAC3 unsigned int * SOAP_FMAC4 soap_in_unsignedInt(struct soap*, const char*, unsigned int *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_unsignedInt(struct soap*, const unsigned int *, const char*, const char*);

#ifndef soap_write_unsignedInt
#define soap_write_unsignedInt(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_unsignedInt(soap, data),0) || soap_put_unsignedInt(soap, data, "unsignedInt", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 unsigned int * SOAP_FMAC4 soap_get_unsignedInt(struct soap*, unsigned int *, const char*, const char*);

#ifndef soap_read_unsignedInt
#define soap_read_unsignedInt(soap, data) ( soap_begin_recv(soap) || !soap_get_unsignedInt(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_time
#define SOAP_TYPE_time (95)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_time(struct soap*, time_t *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_time(struct soap*, const char*, int, const time_t *, const char*);
SOAP_FMAC3 time_t * SOAP_FMAC4 soap_in_time(struct soap*, const char*, time_t *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_time(struct soap*, const time_t *, const char*, const char*);

#ifndef soap_write_time
#define soap_write_time(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_time(soap, data),0) || soap_put_time(soap, data, "dateTime", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 time_t * SOAP_FMAC4 soap_get_time(struct soap*, time_t *, const char*, const char*);

#ifndef soap_read_time
#define soap_read_time(soap, data) ( soap_begin_recv(soap) || !soap_get_time(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Fault
#define SOAP_TYPE_SOAP_ENV__Fault (179)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Fault(struct soap*, struct SOAP_ENV__Fault *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Fault(struct soap*, const struct SOAP_ENV__Fault *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Fault(struct soap*, const char*, int, const struct SOAP_ENV__Fault *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Fault * SOAP_FMAC4 soap_in_SOAP_ENV__Fault(struct soap*, const char*, struct SOAP_ENV__Fault *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Fault(struct soap*, const struct SOAP_ENV__Fault *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Fault
#define soap_write_SOAP_ENV__Fault(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Fault(soap, data),0) || soap_put_SOAP_ENV__Fault(soap, data, "SOAP-ENV:Fault", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Fault * SOAP_FMAC4 soap_get_SOAP_ENV__Fault(struct soap*, struct SOAP_ENV__Fault *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Fault
#define soap_read_SOAP_ENV__Fault(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Fault(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Reason
#define SOAP_TYPE_SOAP_ENV__Reason (178)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Reason(struct soap*, const struct SOAP_ENV__Reason *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Reason(struct soap*, const char*, int, const struct SOAP_ENV__Reason *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Reason * SOAP_FMAC4 soap_in_SOAP_ENV__Reason(struct soap*, const char*, struct SOAP_ENV__Reason *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Reason(struct soap*, const struct SOAP_ENV__Reason *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Reason
#define soap_write_SOAP_ENV__Reason(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Reason(soap, data),0) || soap_put_SOAP_ENV__Reason(soap, data, "SOAP-ENV:Reason", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Reason * SOAP_FMAC4 soap_get_SOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Reason
#define soap_read_SOAP_ENV__Reason(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Reason(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Detail
#define SOAP_TYPE_SOAP_ENV__Detail (177)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Detail(struct soap*, const struct SOAP_ENV__Detail *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Detail(struct soap*, const char*, int, const struct SOAP_ENV__Detail *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Detail * SOAP_FMAC4 soap_in_SOAP_ENV__Detail(struct soap*, const char*, struct SOAP_ENV__Detail *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Detail(struct soap*, const struct SOAP_ENV__Detail *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Detail
#define soap_write_SOAP_ENV__Detail(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Detail(soap, data),0) || soap_put_SOAP_ENV__Detail(soap, data, "SOAP-ENV:Detail", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Detail * SOAP_FMAC4 soap_get_SOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Detail
#define soap_read_SOAP_ENV__Detail(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Detail(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Code
#define SOAP_TYPE_SOAP_ENV__Code (175)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Code(struct soap*, const struct SOAP_ENV__Code *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Code(struct soap*, const char*, int, const struct SOAP_ENV__Code *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Code * SOAP_FMAC4 soap_in_SOAP_ENV__Code(struct soap*, const char*, struct SOAP_ENV__Code *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Code(struct soap*, const struct SOAP_ENV__Code *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Code
#define soap_write_SOAP_ENV__Code(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Code(soap, data),0) || soap_put_SOAP_ENV__Code(soap, data, "SOAP-ENV:Code", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Code * SOAP_FMAC4 soap_get_SOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Code
#define soap_read_SOAP_ENV__Code(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Code(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Header
#define SOAP_TYPE_SOAP_ENV__Header (174)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Header(struct soap*, struct SOAP_ENV__Header *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Header(struct soap*, const struct SOAP_ENV__Header *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Header(struct soap*, const char*, int, const struct SOAP_ENV__Header *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Header * SOAP_FMAC4 soap_in_SOAP_ENV__Header(struct soap*, const char*, struct SOAP_ENV__Header *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Header(struct soap*, const struct SOAP_ENV__Header *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Header
#define soap_write_SOAP_ENV__Header(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Header(soap, data),0) || soap_put_SOAP_ENV__Header(soap, data, "SOAP-ENV:Header", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Header * SOAP_FMAC4 soap_get_SOAP_ENV__Header(struct soap*, struct SOAP_ENV__Header *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Header
#define soap_read_SOAP_ENV__Header(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Header(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#endif

#ifndef SOAP_TYPE_methodCall
#define SOAP_TYPE_methodCall (158)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_methodCall(struct soap*, struct methodCall *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_methodCall(struct soap*, const struct methodCall *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_methodCall(struct soap*, const char*, int, const struct methodCall *, const char*);
SOAP_FMAC3 struct methodCall * SOAP_FMAC4 soap_in_methodCall(struct soap*, const char*, struct methodCall *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_methodCall(struct soap*, const struct methodCall *, const char*, const char*);

#ifndef soap_write_methodCall
#define soap_write_methodCall(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_methodCall(soap, data),0) || soap_put_methodCall(soap, data, "methodCall", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct methodCall * SOAP_FMAC4 soap_get_methodCall(struct soap*, struct methodCall *, const char*, const char*);

#ifndef soap_read_methodCall
#define soap_read_methodCall(soap, data) ( soap_begin_recv(soap) || !soap_get_methodCall(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_fault
#define SOAP_TYPE_fault (156)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_fault(struct soap*, struct fault *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_fault(struct soap*, const struct fault *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_fault(struct soap*, const char*, int, const struct fault *, const char*);
SOAP_FMAC3 struct fault * SOAP_FMAC4 soap_in_fault(struct soap*, const char*, struct fault *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_fault(struct soap*, const struct fault *, const char*, const char*);

#ifndef soap_write_fault
#define soap_write_fault(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_fault(soap, data),0) || soap_put_fault(soap, data, "fault", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct fault * SOAP_FMAC4 soap_get_fault(struct soap*, struct fault *, const char*, const char*);

#ifndef soap_read_fault
#define soap_read_fault(soap, data) ( soap_begin_recv(soap) || !soap_get_fault(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_methodResponse
#define SOAP_TYPE_methodResponse (145)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_methodResponse(struct soap*, struct methodResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_methodResponse(struct soap*, const struct methodResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_methodResponse(struct soap*, const char*, int, const struct methodResponse *, const char*);
SOAP_FMAC3 struct methodResponse * SOAP_FMAC4 soap_in_methodResponse(struct soap*, const char*, struct methodResponse *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_methodResponse(struct soap*, const struct methodResponse *, const char*, const char*);

#ifndef soap_write_methodResponse
#define soap_write_methodResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_methodResponse(soap, data),0) || soap_put_methodResponse(soap, data, "methodResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct methodResponse * SOAP_FMAC4 soap_get_methodResponse(struct soap*, struct methodResponse *, const char*, const char*);

#ifndef soap_read_methodResponse
#define soap_read_methodResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_methodResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_param
#define SOAP_TYPE_param (143)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_param(struct soap*, struct param *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_param(struct soap*, const struct param *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_param(struct soap*, const char*, int, const struct param *, const char*);
SOAP_FMAC3 struct param * SOAP_FMAC4 soap_in_param(struct soap*, const char*, struct param *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_param(struct soap*, const struct param *, const char*, const char*);

#ifndef soap_write_param
#define soap_write_param(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_param(soap, data),0) || soap_put_param(soap, data, "param", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct param * SOAP_FMAC4 soap_get_param(struct soap*, struct param *, const char*, const char*);

#ifndef soap_read_param
#define soap_read_param(soap, data) ( soap_begin_recv(soap) || !soap_get_param(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_params
#define SOAP_TYPE_params (134)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_params(struct soap*, struct params *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_params(struct soap*, const struct params *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_params(struct soap*, const char*, int, const struct params *, const char*);
SOAP_FMAC3 struct params * SOAP_FMAC4 soap_in_params(struct soap*, const char*, struct params *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_params(struct soap*, const struct params *, const char*, const char*);

#ifndef soap_write_params
#define soap_write_params(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_params(soap, data),0) || soap_put_params(soap, data, "params", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct params * SOAP_FMAC4 soap_get_params(struct soap*, struct params *, const char*, const char*);

#ifndef soap_read_params
#define soap_read_params(soap, data) ( soap_begin_recv(soap) || !soap_get_params(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__array
#define SOAP_TYPE__array (54)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default__array(struct soap*, struct _array *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__array(struct soap*, const struct _array *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__array(struct soap*, const char*, int, const struct _array *, const char*);
SOAP_FMAC3 struct _array * SOAP_FMAC4 soap_in__array(struct soap*, const char*, struct _array *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put__array(struct soap*, const struct _array *, const char*, const char*);

#ifndef soap_write__array
#define soap_write__array(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__array(soap, data),0) || soap_put__array(soap, data, "array", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _array * SOAP_FMAC4 soap_get__array(struct soap*, struct _array *, const char*, const char*);

#ifndef soap_read__array
#define soap_read__array(soap, data) ( soap_begin_recv(soap) || !soap_get__array(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_data
#define SOAP_TYPE_data (52)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_data(struct soap*, struct data *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_data(struct soap*, const struct data *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_data(struct soap*, const char*, int, const struct data *, const char*);
SOAP_FMAC3 struct data * SOAP_FMAC4 soap_in_data(struct soap*, const char*, struct data *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_data(struct soap*, const struct data *, const char*, const char*);

#ifndef soap_write_data
#define soap_write_data(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_data(soap, data),0) || soap_put_data(soap, data, "data", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct data * SOAP_FMAC4 soap_get_data(struct soap*, struct data *, const char*, const char*);

#ifndef soap_read_data
#define soap_read_data(soap, data) ( soap_begin_recv(soap) || !soap_get_data(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_member
#define SOAP_TYPE_member (48)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_member(struct soap*, struct member *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_member(struct soap*, const struct member *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_member(struct soap*, const char*, int, const struct member *, const char*);
SOAP_FMAC3 struct member * SOAP_FMAC4 soap_in_member(struct soap*, const char*, struct member *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_member(struct soap*, const struct member *, const char*, const char*);

#ifndef soap_write_member
#define soap_write_member(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_member(soap, data),0) || soap_put_member(soap, data, "member", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct member * SOAP_FMAC4 soap_get_member(struct soap*, struct member *, const char*, const char*);

#ifndef soap_read_member
#define soap_read_member(soap, data) ( soap_begin_recv(soap) || !soap_get_member(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_value
#define SOAP_TYPE_value (42)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_value(struct soap*, struct value *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_value(struct soap*, const struct value *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_value(struct soap*, const char*, int, const struct value *, const char*);
SOAP_FMAC3 struct value * SOAP_FMAC4 soap_in_value(struct soap*, const char*, struct value *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_value(struct soap*, const struct value *, const char*, const char*);

#ifndef soap_write_value
#define soap_write_value(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_value(soap, data),0) || soap_put_value(soap, data, "value", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct value * SOAP_FMAC4 soap_get_value(struct soap*, struct value *, const char*, const char*);

#ifndef soap_read_value
#define soap_read_value(soap, data) ( soap_begin_recv(soap) || !soap_get_value(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__struct
#define SOAP_TYPE__struct (35)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default__struct(struct soap*, struct _struct *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__struct(struct soap*, const struct _struct *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__struct(struct soap*, const char*, int, const struct _struct *, const char*);
SOAP_FMAC3 struct _struct * SOAP_FMAC4 soap_in__struct(struct soap*, const char*, struct _struct *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put__struct(struct soap*, const struct _struct *, const char*, const char*);

#ifndef soap_write__struct
#define soap_write__struct(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__struct(soap, data),0) || soap_put__struct(soap, data, "struct", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _struct * SOAP_FMAC4 soap_get__struct(struct soap*, struct _struct *, const char*, const char*);

#ifndef soap_read__struct
#define soap_read__struct(soap, data) ( soap_begin_recv(soap) || !soap_get__struct(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE__base64
#define SOAP_TYPE__base64 (18)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default__base64(struct soap*, struct _base64 *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__base64(struct soap*, struct _base64 const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__base64(struct soap*, const char*, int, const struct _base64 *, const char*);
SOAP_FMAC3 struct _base64 * SOAP_FMAC4 soap_in__base64(struct soap*, const char*, struct _base64 *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put__base64(struct soap*, const struct _base64 *, const char*, const char*);

#ifndef soap_write__base64
#define soap_write__base64(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__base64(soap, data),0) || soap_put__base64(soap, data, "base64", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct _base64 * SOAP_FMAC4 soap_get__base64(struct soap*, struct _base64 *, const char*, const char*);

#ifndef soap_read__base64
#define soap_read__base64(soap, data) ( soap_begin_recv(soap) || !soap_get__base64(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Reason
#define SOAP_TYPE_PointerToSOAP_ENV__Reason (181)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Reason(struct soap*, const char *, int, struct SOAP_ENV__Reason *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Reason ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Reason(struct soap*, const char*, struct SOAP_ENV__Reason **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *const*, const char*, const char*);

#ifndef soap_write_PointerToSOAP_ENV__Reason
#define soap_write_PointerToSOAP_ENV__Reason(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerToSOAP_ENV__Reason(soap, data),0) || soap_put_PointerToSOAP_ENV__Reason(soap, data, "SOAP-ENV:Reason", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Reason ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason **, const char*, const char*);

#ifndef soap_read_PointerToSOAP_ENV__Reason
#define soap_read_PointerToSOAP_ENV__Reason(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToSOAP_ENV__Reason(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Detail
#define SOAP_TYPE_PointerToSOAP_ENV__Detail (180)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Detail(struct soap*, const char *, int, struct SOAP_ENV__Detail *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Detail ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Detail(struct soap*, const char*, struct SOAP_ENV__Detail **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *const*, const char*, const char*);

#ifndef soap_write_PointerToSOAP_ENV__Detail
#define soap_write_PointerToSOAP_ENV__Detail(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerToSOAP_ENV__Detail(soap, data),0) || soap_put_PointerToSOAP_ENV__Detail(soap, data, "SOAP-ENV:Detail", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Detail ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail **, const char*, const char*);

#ifndef soap_read_PointerToSOAP_ENV__Detail
#define soap_read_PointerToSOAP_ENV__Detail(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToSOAP_ENV__Detail(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Code
#define SOAP_TYPE_PointerToSOAP_ENV__Code (176)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Code(struct soap*, const char *, int, struct SOAP_ENV__Code *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Code ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Code(struct soap*, const char*, struct SOAP_ENV__Code **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *const*, const char*, const char*);

#ifndef soap_write_PointerToSOAP_ENV__Code
#define soap_write_PointerToSOAP_ENV__Code(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerToSOAP_ENV__Code(soap, data),0) || soap_put_PointerToSOAP_ENV__Code(soap, data, "SOAP-ENV:Code", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Code ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code **, const char*, const char*);

#ifndef soap_read_PointerToSOAP_ENV__Code
#define soap_read_PointerToSOAP_ENV__Code(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToSOAP_ENV__Code(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#endif

#ifndef SOAP_TYPE_PointerTomethodResponse
#define SOAP_TYPE_PointerTomethodResponse (159)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTomethodResponse(struct soap*, struct methodResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTomethodResponse(struct soap*, const char *, int, struct methodResponse *const*, const char *);
SOAP_FMAC3 struct methodResponse ** SOAP_FMAC4 soap_in_PointerTomethodResponse(struct soap*, const char*, struct methodResponse **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTomethodResponse(struct soap*, struct methodResponse *const*, const char*, const char*);

#ifndef soap_write_PointerTomethodResponse
#define soap_write_PointerTomethodResponse(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTomethodResponse(soap, data),0) || soap_put_PointerTomethodResponse(soap, data, "methodResponse", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct methodResponse ** SOAP_FMAC4 soap_get_PointerTomethodResponse(struct soap*, struct methodResponse **, const char*, const char*);

#ifndef soap_read_PointerTomethodResponse
#define soap_read_PointerTomethodResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTomethodResponse(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTofault
#define SOAP_TYPE_PointerTofault (157)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTofault(struct soap*, struct fault *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTofault(struct soap*, const char *, int, struct fault *const*, const char *);
SOAP_FMAC3 struct fault ** SOAP_FMAC4 soap_in_PointerTofault(struct soap*, const char*, struct fault **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTofault(struct soap*, struct fault *const*, const char*, const char*);

#ifndef soap_write_PointerTofault
#define soap_write_PointerTofault(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTofault(soap, data),0) || soap_put_PointerTofault(soap, data, "fault", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct fault ** SOAP_FMAC4 soap_get_PointerTofault(struct soap*, struct fault **, const char*, const char*);

#ifndef soap_read_PointerTofault
#define soap_read_PointerTofault(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTofault(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerToparams
#define SOAP_TYPE_PointerToparams (155)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToparams(struct soap*, struct params *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToparams(struct soap*, const char *, int, struct params *const*, const char *);
SOAP_FMAC3 struct params ** SOAP_FMAC4 soap_in_PointerToparams(struct soap*, const char*, struct params **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToparams(struct soap*, struct params *const*, const char*, const char*);

#ifndef soap_write_PointerToparams
#define soap_write_PointerToparams(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerToparams(soap, data),0) || soap_put_PointerToparams(soap, data, "params", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct params ** SOAP_FMAC4 soap_get_PointerToparams(struct soap*, struct params **, const char*, const char*);

#ifndef soap_read_PointerToparams
#define soap_read_PointerToparams(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToparams(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerToparam
#define SOAP_TYPE_PointerToparam (144)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToparam(struct soap*, struct param *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToparam(struct soap*, const char *, int, struct param *const*, const char *);
SOAP_FMAC3 struct param ** SOAP_FMAC4 soap_in_PointerToparam(struct soap*, const char*, struct param **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToparam(struct soap*, struct param *const*, const char*, const char*);

#ifndef soap_write_PointerToparam
#define soap_write_PointerToparam(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerToparam(soap, data),0) || soap_put_PointerToparam(soap, data, "param", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct param ** SOAP_FMAC4 soap_get_PointerToparam(struct soap*, struct param **, const char*, const char*);

#ifndef soap_read_PointerToparam
#define soap_read_PointerToparam(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToparam(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_wstring
#define SOAP_TYPE_wstring (89)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_wstring(struct soap*, wchar_t *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_wstring(struct soap*, const char*, int, wchar_t*const*, const char*);
SOAP_FMAC3 wchar_t * * SOAP_FMAC4 soap_in_wstring(struct soap*, const char*, wchar_t **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_wstring(struct soap*, wchar_t *const*, const char*, const char*);

#ifndef soap_write_wstring
#define soap_write_wstring(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_wstring(soap, data),0) || soap_put_wstring(soap, data, "wchar", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 wchar_t ** SOAP_FMAC4 soap_get_wstring(struct soap*, wchar_t **, const char*, const char*);

#ifndef soap_read_wstring
#define soap_read_wstring(soap, data) ( soap_begin_recv(soap) || !soap_get_wstring(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTovalue
#define SOAP_TYPE_PointerTovalue (53)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTovalue(struct soap*, struct value *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTovalue(struct soap*, const char *, int, struct value *const*, const char *);
SOAP_FMAC3 struct value ** SOAP_FMAC4 soap_in_PointerTovalue(struct soap*, const char*, struct value **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTovalue(struct soap*, struct value *const*, const char*, const char*);

#ifndef soap_write_PointerTovalue
#define soap_write_PointerTovalue(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTovalue(soap, data),0) || soap_put_PointerTovalue(soap, data, "value", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct value ** SOAP_FMAC4 soap_get_PointerTovalue(struct soap*, struct value **, const char*, const char*);

#ifndef soap_read_PointerTovalue
#define soap_read_PointerTovalue(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTovalue(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTomember
#define SOAP_TYPE_PointerTomember (49)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTomember(struct soap*, struct member *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTomember(struct soap*, const char *, int, struct member *const*, const char *);
SOAP_FMAC3 struct member ** SOAP_FMAC4 soap_in_PointerTomember(struct soap*, const char*, struct member **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTomember(struct soap*, struct member *const*, const char*, const char*);

#ifndef soap_write_PointerTomember
#define soap_write_PointerTomember(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTomember(soap, data),0) || soap_put_PointerTomember(soap, data, "member", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 struct member ** SOAP_FMAC4 soap_get_PointerTomember(struct soap*, struct member **, const char*, const char*);

#ifndef soap_read_PointerTomember
#define soap_read_PointerTomember(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTomember(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_PointerTounsignedByte
#define SOAP_TYPE_PointerTounsignedByte (30)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTounsignedByte(struct soap*, unsigned char *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTounsignedByte(struct soap*, const char *, int, unsigned char *const*, const char *);
SOAP_FMAC3 unsigned char ** SOAP_FMAC4 soap_in_PointerTounsignedByte(struct soap*, const char*, unsigned char **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTounsignedByte(struct soap*, unsigned char *const*, const char*, const char*);

#ifndef soap_write_PointerTounsignedByte
#define soap_write_PointerTounsignedByte(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_PointerTounsignedByte(soap, data),0) || soap_put_PointerTounsignedByte(soap, data, "unsignedByte", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 unsigned char ** SOAP_FMAC4 soap_get_PointerTounsignedByte(struct soap*, unsigned char **, const char*, const char*);

#ifndef soap_read_PointerTounsignedByte
#define soap_read_PointerTounsignedByte(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTounsignedByte(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


/* _dateTime_DOTiso8601 is a typedef element/attribute synonym for string */

#ifndef SOAP_TYPE__dateTime_DOTiso8601
#define SOAP_TYPE__dateTime_DOTiso8601 (17)
#endif

#define soap_default__dateTime_DOTiso8601(soap, a) soap_default_string(soap, a)


#define soap_serialize__dateTime_DOTiso8601 soap_serialize_string


#define soap_out__dateTime_DOTiso8601 soap_out_string


#define soap_in__dateTime_DOTiso8601 soap_in_string


#define soap_put__dateTime_DOTiso8601 soap_put_string


#define soap_get__dateTime_DOTiso8601 soap_get_string


/* _string is a typedef element/attribute synonym for string */

#ifndef SOAP_TYPE__string
#define SOAP_TYPE__string (16)
#endif

#define soap_default__string(soap, a) soap_default_string(soap, a)


#define soap_serialize__string soap_serialize_string


#define soap_out__string soap_out_string


#define soap_in__string soap_in_string


#define soap_put__string soap_put_string


#define soap_get__string soap_get_string


#ifndef SOAP_TYPE__QName
#define SOAP_TYPE__QName (5)
#endif

#define soap_default__QName(soap, a) soap_default_string(soap, a)

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__QName(struct soap*, char *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__QName(struct soap*, const char*, int, char*const*, const char*);
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in__QName(struct soap*, const char*, char **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__QName(struct soap*, char *const*, const char*, const char*);

#ifndef soap_write__QName
#define soap_write__QName(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize__QName(soap, data),0) || soap_put__QName(soap, data, "byte", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get__QName(struct soap*, char **, const char*, const char*);

#ifndef soap_read__QName
#define soap_read__QName(soap, data) ( soap_begin_recv(soap) || !soap_get__QName(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifndef SOAP_TYPE_string
#define SOAP_TYPE_string (4)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_string(struct soap*, char **);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_string(struct soap*, char *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_string(struct soap*, const char*, int, char*const*, const char*);
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in_string(struct soap*, const char*, char **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_string(struct soap*, char *const*, const char*, const char*);

#ifndef soap_write_string
#define soap_write_string(soap, data) ( soap_free_temp(soap), soap_begin_send(soap) || (soap_serialize_string(soap, data),0) || soap_put_string(soap, data, "byte", NULL) || soap_end_send(soap), (soap)->error )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get_string(struct soap*, char **, const char*, const char*);

#ifndef soap_read_string
#define soap_read_string(soap, data) ( soap_begin_recv(soap) || !soap_get_string(soap, data, NULL, NULL) || soap_end_recv(soap), (soap)->error )
#endif


#ifdef __cplusplus
}
#endif

#endif

/* End of soapH.h */
