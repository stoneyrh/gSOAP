/* wsdlH.h
   Generated by gSOAP 2.8.6 from ./wsdl.h

Copyright(C) 2000-2011, Robert van Engelen, Genivia Inc. All Rights Reserved.
The generated code is released under one of the following licenses:
1) GPL or 2) Genivia's license for commercial use.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
*/

#ifndef wsdlH_H
#define wsdlH_H
#include "wsdlStub.h"
#ifndef WITH_NOIDREF

#ifdef __cplusplus
extern "C" {
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_markelement(struct soap*, const void*, int);
SOAP_FMAC3 int SOAP_FMAC4 soap_putelement(struct soap*, const void*, const char*, int, int);
SOAP_FMAC3 void *SOAP_FMAC4 soap_getelement(struct soap*, int*);

#ifdef __cplusplus
}
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_putindependent(struct soap*);
SOAP_FMAC3 int SOAP_FMAC4 soap_getindependent(struct soap*);
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_ignore_element(struct soap*);

SOAP_FMAC3 void * SOAP_FMAC4 wsdl_instantiate(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 int SOAP_FMAC4 wsdl_fdelete(struct soap_clist*);
SOAP_FMAC3 void* SOAP_FMAC4 soap_class_id_enter(struct soap*, const char*, void*, int, size_t, const char*, const char*);

SOAP_FMAC3 void* SOAP_FMAC4 soap_container_id_forward(struct soap*, const char*, void*, size_t, int, int, size_t, unsigned int);

SOAP_FMAC3 void SOAP_FMAC4 wsdl_container_insert(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_byte
#define SOAP_TYPE_byte (3)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_byte(struct soap*, char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_byte(struct soap*, const char*, int, const char *, const char*);
SOAP_FMAC3 char * SOAP_FMAC4 soap_in_byte(struct soap*, const char*, char *, const char*);

#ifndef soap_write_byte
#define soap_write_byte(soap, data) ( soap_begin_send(soap) || soap_put_byte(soap, data, "byte", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_byte(struct soap*, const char *, const char*, const char*);

#ifndef soap_read_byte
#define soap_read_byte(soap, data) ( soap_begin_recv(soap) || !soap_get_byte(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 char * SOAP_FMAC4 soap_get_byte(struct soap*, char *, const char*, const char*);

#ifndef SOAP_TYPE_int
#define SOAP_TYPE_int (1)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_int(struct soap*, int *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_int(struct soap*, const char*, int, const int *, const char*);
SOAP_FMAC3 int * SOAP_FMAC4 soap_in_int(struct soap*, const char*, int *, const char*);

#ifndef soap_write_int
#define soap_write_int(soap, data) ( soap_begin_send(soap) || soap_put_int(soap, data, "int", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_int(struct soap*, const int *, const char*, const char*);

#ifndef soap_read_int
#define soap_read_int(soap, data) ( soap_begin_recv(soap) || !soap_get_int(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 int * SOAP_FMAC4 soap_get_int(struct soap*, int *, const char*, const char*);

#ifndef SOAP_TYPE_sd__mutability
#define SOAP_TYPE_sd__mutability (257)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_sd__mutability(struct soap*, enum sd__mutability *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_sd__mutability(struct soap*, const char*, int, const enum sd__mutability *, const char*);

SOAP_FMAC3S const char* SOAP_FMAC4S soap_sd__mutability2s(struct soap*, enum sd__mutability);
SOAP_FMAC3 enum sd__mutability * SOAP_FMAC4 soap_in_sd__mutability(struct soap*, const char*, enum sd__mutability *, const char*);

SOAP_FMAC3S int SOAP_FMAC4S soap_s2sd__mutability(struct soap*, const char*, enum sd__mutability *);

#ifndef soap_write_sd__mutability
#define soap_write_sd__mutability(soap, data) ( soap_begin_send(soap) || soap_put_sd__mutability(soap, data, "sd:mutability", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_sd__mutability(struct soap*, const enum sd__mutability *, const char*, const char*);

#ifndef soap_read_sd__mutability
#define soap_read_sd__mutability(soap, data) ( soap_begin_recv(soap) || !soap_get_sd__mutability(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 enum sd__mutability * SOAP_FMAC4 soap_get_sd__mutability(struct soap*, enum sd__mutability *, const char*, const char*);

#ifndef SOAP_TYPE_soap__useChoice
#define SOAP_TYPE_soap__useChoice (220)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_soap__useChoice(struct soap*, enum soap__useChoice *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_soap__useChoice(struct soap*, const char*, int, const enum soap__useChoice *, const char*);

SOAP_FMAC3S const char* SOAP_FMAC4S soap_soap__useChoice2s(struct soap*, enum soap__useChoice);
SOAP_FMAC3 enum soap__useChoice * SOAP_FMAC4 soap_in_soap__useChoice(struct soap*, const char*, enum soap__useChoice *, const char*);

SOAP_FMAC3S int SOAP_FMAC4S soap_s2soap__useChoice(struct soap*, const char*, enum soap__useChoice *);

#ifndef soap_write_soap__useChoice
#define soap_write_soap__useChoice(soap, data) ( soap_begin_send(soap) || soap_put_soap__useChoice(soap, data, "soap:useChoice", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_soap__useChoice(struct soap*, const enum soap__useChoice *, const char*, const char*);

#ifndef soap_read_soap__useChoice
#define soap_read_soap__useChoice(soap, data) ( soap_begin_recv(soap) || !soap_get_soap__useChoice(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 enum soap__useChoice * SOAP_FMAC4 soap_get_soap__useChoice(struct soap*, enum soap__useChoice *, const char*, const char*);

#ifndef SOAP_TYPE_soap__styleChoice
#define SOAP_TYPE_soap__styleChoice (216)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_soap__styleChoice(struct soap*, enum soap__styleChoice *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_soap__styleChoice(struct soap*, const char*, int, const enum soap__styleChoice *, const char*);

SOAP_FMAC3S const char* SOAP_FMAC4S soap_soap__styleChoice2s(struct soap*, enum soap__styleChoice);
SOAP_FMAC3 enum soap__styleChoice * SOAP_FMAC4 soap_in_soap__styleChoice(struct soap*, const char*, enum soap__styleChoice *, const char*);

SOAP_FMAC3S int SOAP_FMAC4S soap_s2soap__styleChoice(struct soap*, const char*, enum soap__styleChoice *);

#ifndef soap_write_soap__styleChoice
#define soap_write_soap__styleChoice(soap, data) ( soap_begin_send(soap) || soap_put_soap__styleChoice(soap, data, "soap:styleChoice", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_soap__styleChoice(struct soap*, const enum soap__styleChoice *, const char*, const char*);

#ifndef soap_read_soap__styleChoice
#define soap_read_soap__styleChoice(soap, data) ( soap_begin_recv(soap) || !soap_get_soap__styleChoice(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 enum soap__styleChoice * SOAP_FMAC4 soap_get_soap__styleChoice(struct soap*, enum soap__styleChoice *, const char*, const char*);

#ifndef SOAP_TYPE_xs__processContents
#define SOAP_TYPE_xs__processContents (74)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_xs__processContents(struct soap*, enum xs__processContents *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_xs__processContents(struct soap*, const char*, int, const enum xs__processContents *, const char*);

SOAP_FMAC3S const char* SOAP_FMAC4S soap_xs__processContents2s(struct soap*, enum xs__processContents);
SOAP_FMAC3 enum xs__processContents * SOAP_FMAC4 soap_in_xs__processContents(struct soap*, const char*, enum xs__processContents *, const char*);

SOAP_FMAC3S int SOAP_FMAC4S soap_s2xs__processContents(struct soap*, const char*, enum xs__processContents *);

#ifndef soap_write_xs__processContents
#define soap_write_xs__processContents(soap, data) ( soap_begin_send(soap) || soap_put_xs__processContents(soap, data, "xs:processContents", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_xs__processContents(struct soap*, const enum xs__processContents *, const char*, const char*);

#ifndef soap_read_xs__processContents
#define soap_read_xs__processContents(soap, data) ( soap_begin_recv(soap) || !soap_get_xs__processContents(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 enum xs__processContents * SOAP_FMAC4 soap_get_xs__processContents(struct soap*, enum xs__processContents *, const char*, const char*);

#ifndef SOAP_TYPE_xs__attribute_use
#define SOAP_TYPE_xs__attribute_use (59)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_xs__attribute_use(struct soap*, enum xs__attribute_use *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_xs__attribute_use(struct soap*, const char*, int, const enum xs__attribute_use *, const char*);

SOAP_FMAC3S const char* SOAP_FMAC4S soap_xs__attribute_use2s(struct soap*, enum xs__attribute_use);
SOAP_FMAC3 enum xs__attribute_use * SOAP_FMAC4 soap_in_xs__attribute_use(struct soap*, const char*, enum xs__attribute_use *, const char*);

SOAP_FMAC3S int SOAP_FMAC4S soap_s2xs__attribute_use(struct soap*, const char*, enum xs__attribute_use *);

#ifndef soap_write_xs__attribute_use
#define soap_write_xs__attribute_use(soap, data) ( soap_begin_send(soap) || soap_put_xs__attribute_use(soap, data, "xs:attribute-use", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_xs__attribute_use(struct soap*, const enum xs__attribute_use *, const char*, const char*);

#ifndef soap_read_xs__attribute_use
#define soap_read_xs__attribute_use(soap, data) ( soap_begin_recv(soap) || !soap_get_xs__attribute_use(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 enum xs__attribute_use * SOAP_FMAC4 soap_get_xs__attribute_use(struct soap*, enum xs__attribute_use *, const char*, const char*);

#ifndef SOAP_TYPE_xs__formChoice
#define SOAP_TYPE_xs__formChoice (31)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_xs__formChoice(struct soap*, enum xs__formChoice *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_xs__formChoice(struct soap*, const char*, int, const enum xs__formChoice *, const char*);

SOAP_FMAC3S const char* SOAP_FMAC4S soap_xs__formChoice2s(struct soap*, enum xs__formChoice);
SOAP_FMAC3 enum xs__formChoice * SOAP_FMAC4 soap_in_xs__formChoice(struct soap*, const char*, enum xs__formChoice *, const char*);

SOAP_FMAC3S int SOAP_FMAC4S soap_s2xs__formChoice(struct soap*, const char*, enum xs__formChoice *);

#ifndef soap_write_xs__formChoice
#define soap_write_xs__formChoice(soap, data) ( soap_begin_send(soap) || soap_put_xs__formChoice(soap, data, "xs:formChoice", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_xs__formChoice(struct soap*, const enum xs__formChoice *, const char*, const char*);

#ifndef soap_read_xs__formChoice
#define soap_read_xs__formChoice(soap, data) ( soap_begin_recv(soap) || !soap_get_xs__formChoice(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 enum xs__formChoice * SOAP_FMAC4 soap_get_xs__formChoice(struct soap*, enum xs__formChoice *, const char*, const char*);

#ifndef SOAP_TYPE_xsd__boolean
#define SOAP_TYPE_xsd__boolean (16)
#endif

#define soap_default_xsd__boolean(soap, a) soap_default_bool(soap, a)

SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__boolean(struct soap*, const char*, int, const bool *, const char*);

SOAP_FMAC3S const char* SOAP_FMAC4S soap_xsd__boolean2s(struct soap*, bool);
SOAP_FMAC3 bool * SOAP_FMAC4 soap_in_xsd__boolean(struct soap*, const char*, bool *, const char*);

SOAP_FMAC3S int SOAP_FMAC4S soap_s2xsd__boolean(struct soap*, const char*, bool *);

#ifndef soap_write_xsd__boolean
#define soap_write_xsd__boolean(soap, data) ( soap_begin_send(soap) || soap_put_xsd__boolean(soap, data, "xsd:boolean", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_xsd__boolean(struct soap*, const bool *, const char*, const char*);

#ifndef soap_read_xsd__boolean
#define soap_read_xsd__boolean(soap, data) ( soap_begin_recv(soap) || !soap_get_xsd__boolean(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 bool * SOAP_FMAC4 soap_get_xsd__boolean(struct soap*, bool *, const char*, const char*);

#ifndef SOAP_TYPE_bool
#define SOAP_TYPE_bool (15)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_bool(struct soap*, bool *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_bool(struct soap*, const char*, int, const bool *, const char*);

SOAP_FMAC3S const char* SOAP_FMAC4S soap_bool2s(struct soap*, bool);
SOAP_FMAC3 bool * SOAP_FMAC4 soap_in_bool(struct soap*, const char*, bool *, const char*);

SOAP_FMAC3S int SOAP_FMAC4S soap_s2bool(struct soap*, const char*, bool *);

#ifndef soap_write_bool
#define soap_write_bool(soap, data) ( soap_begin_send(soap) || soap_put_bool(soap, data, "boolean", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_bool(struct soap*, const bool *, const char*, const char*);

#ifndef soap_read_bool
#define soap_read_bool(soap, data) ( soap_begin_recv(soap) || !soap_get_bool(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 bool * SOAP_FMAC4 soap_get_bool(struct soap*, bool *, const char*, const char*);

#ifndef SOAP_TYPE_wsdl__service
#define SOAP_TYPE_wsdl__service (394)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsdl__service(struct soap*, const char*, int, const wsdl__service *, const char*);
SOAP_FMAC3 wsdl__service * SOAP_FMAC4 soap_in_wsdl__service(struct soap*, const char*, wsdl__service *, const char*);

#ifndef soap_write_wsdl__service
#define soap_write_wsdl__service(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "wsdl:service", NULL) || soap_end_send(soap) )
#endif


#ifndef soap_read_wsdl__service
#define soap_read_wsdl__service(soap, data) ( soap_begin_recv(soap) || !soap_get_wsdl__service(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 wsdl__service * SOAP_FMAC4 soap_get_wsdl__service(struct soap*, wsdl__service *, const char*, const char*);

#define soap_new_wsdl__service(soap, n) soap_instantiate_wsdl__service(soap, n, NULL, NULL, NULL)


#define soap_delete_wsdl__service(soap, p) soap_delete(soap, p)

SOAP_FMAC1 wsdl__service * SOAP_FMAC2 soap_instantiate_wsdl__service(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_wsdl__service(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_wsdl__port
#define SOAP_TYPE_wsdl__port (385)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsdl__port(struct soap*, const char*, int, const wsdl__port *, const char*);
SOAP_FMAC3 wsdl__port * SOAP_FMAC4 soap_in_wsdl__port(struct soap*, const char*, wsdl__port *, const char*);

#ifndef soap_write_wsdl__port
#define soap_write_wsdl__port(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "wsdl:port", NULL) || soap_end_send(soap) )
#endif


#ifndef soap_read_wsdl__port
#define soap_read_wsdl__port(soap, data) ( soap_begin_recv(soap) || !soap_get_wsdl__port(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 wsdl__port * SOAP_FMAC4 soap_get_wsdl__port(struct soap*, wsdl__port *, const char*, const char*);

#define soap_new_wsdl__port(soap, n) soap_instantiate_wsdl__port(soap, n, NULL, NULL, NULL)


#define soap_delete_wsdl__port(soap, p) soap_delete(soap, p)

SOAP_FMAC1 wsdl__port * SOAP_FMAC2 soap_instantiate_wsdl__port(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_wsdl__port(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_wsdl__binding
#define SOAP_TYPE_wsdl__binding (376)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsdl__binding(struct soap*, const char*, int, const wsdl__binding *, const char*);
SOAP_FMAC3 wsdl__binding * SOAP_FMAC4 soap_in_wsdl__binding(struct soap*, const char*, wsdl__binding *, const char*);

#ifndef soap_write_wsdl__binding
#define soap_write_wsdl__binding(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "wsdl:binding", NULL) || soap_end_send(soap) )
#endif


#ifndef soap_read_wsdl__binding
#define soap_read_wsdl__binding(soap, data) ( soap_begin_recv(soap) || !soap_get_wsdl__binding(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 wsdl__binding * SOAP_FMAC4 soap_get_wsdl__binding(struct soap*, wsdl__binding *, const char*, const char*);

#define soap_new_wsdl__binding(soap, n) soap_instantiate_wsdl__binding(soap, n, NULL, NULL, NULL)


#define soap_delete_wsdl__binding(soap, p) soap_delete(soap, p)

SOAP_FMAC1 wsdl__binding * SOAP_FMAC2 soap_instantiate_wsdl__binding(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_wsdl__binding(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_wsdl__binding_operation
#define SOAP_TYPE_wsdl__binding_operation (364)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsdl__binding_operation(struct soap*, const char*, int, const wsdl__binding_operation *, const char*);
SOAP_FMAC3 wsdl__binding_operation * SOAP_FMAC4 soap_in_wsdl__binding_operation(struct soap*, const char*, wsdl__binding_operation *, const char*);

#ifndef soap_write_wsdl__binding_operation
#define soap_write_wsdl__binding_operation(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "wsdl:binding-operation", NULL) || soap_end_send(soap) )
#endif


#ifndef soap_read_wsdl__binding_operation
#define soap_read_wsdl__binding_operation(soap, data) ( soap_begin_recv(soap) || !soap_get_wsdl__binding_operation(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 wsdl__binding_operation * SOAP_FMAC4 soap_get_wsdl__binding_operation(struct soap*, wsdl__binding_operation *, const char*, const char*);

#define soap_new_wsdl__binding_operation(soap, n) soap_instantiate_wsdl__binding_operation(soap, n, NULL, NULL, NULL)


#define soap_delete_wsdl__binding_operation(soap, p) soap_delete(soap, p)

SOAP_FMAC1 wsdl__binding_operation * SOAP_FMAC2 soap_instantiate_wsdl__binding_operation(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_wsdl__binding_operation(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_wsdl__ext_fault
#define SOAP_TYPE_wsdl__ext_fault (358)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsdl__ext_fault(struct soap*, const char*, int, const wsdl__ext_fault *, const char*);
SOAP_FMAC3 wsdl__ext_fault * SOAP_FMAC4 soap_in_wsdl__ext_fault(struct soap*, const char*, wsdl__ext_fault *, const char*);

#ifndef soap_write_wsdl__ext_fault
#define soap_write_wsdl__ext_fault(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "wsdl:ext-fault", NULL) || soap_end_send(soap) )
#endif


#ifndef soap_read_wsdl__ext_fault
#define soap_read_wsdl__ext_fault(soap, data) ( soap_begin_recv(soap) || !soap_get_wsdl__ext_fault(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 wsdl__ext_fault * SOAP_FMAC4 soap_get_wsdl__ext_fault(struct soap*, wsdl__ext_fault *, const char*, const char*);

#define soap_new_wsdl__ext_fault(soap, n) soap_instantiate_wsdl__ext_fault(soap, n, NULL, NULL, NULL)


#define soap_delete_wsdl__ext_fault(soap, p) soap_delete(soap, p)

SOAP_FMAC1 wsdl__ext_fault * SOAP_FMAC2 soap_instantiate_wsdl__ext_fault(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_wsdl__ext_fault(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_wsdl__ext_output
#define SOAP_TYPE_wsdl__ext_output (356)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsdl__ext_output(struct soap*, const char*, int, const wsdl__ext_output *, const char*);
SOAP_FMAC3 wsdl__ext_output * SOAP_FMAC4 soap_in_wsdl__ext_output(struct soap*, const char*, wsdl__ext_output *, const char*);

#ifndef soap_write_wsdl__ext_output
#define soap_write_wsdl__ext_output(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "wsdl:ext-output", NULL) || soap_end_send(soap) )
#endif


#ifndef soap_read_wsdl__ext_output
#define soap_read_wsdl__ext_output(soap, data) ( soap_begin_recv(soap) || !soap_get_wsdl__ext_output(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 wsdl__ext_output * SOAP_FMAC4 soap_get_wsdl__ext_output(struct soap*, wsdl__ext_output *, const char*, const char*);

#define soap_new_wsdl__ext_output(soap, n) soap_instantiate_wsdl__ext_output(soap, n, NULL, NULL, NULL)


#define soap_delete_wsdl__ext_output(soap, p) soap_delete(soap, p)

SOAP_FMAC1 wsdl__ext_output * SOAP_FMAC2 soap_instantiate_wsdl__ext_output(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_wsdl__ext_output(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_wsdl__ext_input
#define SOAP_TYPE_wsdl__ext_input (350)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsdl__ext_input(struct soap*, const char*, int, const wsdl__ext_input *, const char*);
SOAP_FMAC3 wsdl__ext_input * SOAP_FMAC4 soap_in_wsdl__ext_input(struct soap*, const char*, wsdl__ext_input *, const char*);

#ifndef soap_write_wsdl__ext_input
#define soap_write_wsdl__ext_input(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "wsdl:ext-input", NULL) || soap_end_send(soap) )
#endif


#ifndef soap_read_wsdl__ext_input
#define soap_read_wsdl__ext_input(soap, data) ( soap_begin_recv(soap) || !soap_get_wsdl__ext_input(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 wsdl__ext_input * SOAP_FMAC4 soap_get_wsdl__ext_input(struct soap*, wsdl__ext_input *, const char*, const char*);

#define soap_new_wsdl__ext_input(soap, n) soap_instantiate_wsdl__ext_input(soap, n, NULL, NULL, NULL)


#define soap_delete_wsdl__ext_input(soap, p) soap_delete(soap, p)

SOAP_FMAC1 wsdl__ext_input * SOAP_FMAC2 soap_instantiate_wsdl__ext_input(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_wsdl__ext_input(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_wsdl__portType
#define SOAP_TYPE_wsdl__portType (347)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsdl__portType(struct soap*, const char*, int, const wsdl__portType *, const char*);
SOAP_FMAC3 wsdl__portType * SOAP_FMAC4 soap_in_wsdl__portType(struct soap*, const char*, wsdl__portType *, const char*);

#ifndef soap_write_wsdl__portType
#define soap_write_wsdl__portType(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "wsdl:portType", NULL) || soap_end_send(soap) )
#endif


#ifndef soap_read_wsdl__portType
#define soap_read_wsdl__portType(soap, data) ( soap_begin_recv(soap) || !soap_get_wsdl__portType(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 wsdl__portType * SOAP_FMAC4 soap_get_wsdl__portType(struct soap*, wsdl__portType *, const char*, const char*);

#define soap_new_wsdl__portType(soap, n) soap_instantiate_wsdl__portType(soap, n, NULL, NULL, NULL)


#define soap_delete_wsdl__portType(soap, p) soap_delete(soap, p)

SOAP_FMAC1 wsdl__portType * SOAP_FMAC2 soap_instantiate_wsdl__portType(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_wsdl__portType(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_wsdl__fault
#define SOAP_TYPE_wsdl__fault (338)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsdl__fault(struct soap*, const char*, int, const wsdl__fault *, const char*);
SOAP_FMAC3 wsdl__fault * SOAP_FMAC4 soap_in_wsdl__fault(struct soap*, const char*, wsdl__fault *, const char*);

#ifndef soap_write_wsdl__fault
#define soap_write_wsdl__fault(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "wsdl:fault", NULL) || soap_end_send(soap) )
#endif


#ifndef soap_read_wsdl__fault
#define soap_read_wsdl__fault(soap, data) ( soap_begin_recv(soap) || !soap_get_wsdl__fault(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 wsdl__fault * SOAP_FMAC4 soap_get_wsdl__fault(struct soap*, wsdl__fault *, const char*, const char*);

#define soap_new_wsdl__fault(soap, n) soap_instantiate_wsdl__fault(soap, n, NULL, NULL, NULL)


#define soap_delete_wsdl__fault(soap, p) soap_delete(soap, p)

SOAP_FMAC1 wsdl__fault * SOAP_FMAC2 soap_instantiate_wsdl__fault(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_wsdl__fault(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_wsdl__output
#define SOAP_TYPE_wsdl__output (333)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsdl__output(struct soap*, const char*, int, const wsdl__output *, const char*);
SOAP_FMAC3 wsdl__output * SOAP_FMAC4 soap_in_wsdl__output(struct soap*, const char*, wsdl__output *, const char*);

#ifndef soap_write_wsdl__output
#define soap_write_wsdl__output(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "wsdl:output", NULL) || soap_end_send(soap) )
#endif


#ifndef soap_read_wsdl__output
#define soap_read_wsdl__output(soap, data) ( soap_begin_recv(soap) || !soap_get_wsdl__output(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 wsdl__output * SOAP_FMAC4 soap_get_wsdl__output(struct soap*, wsdl__output *, const char*, const char*);

#define soap_new_wsdl__output(soap, n) soap_instantiate_wsdl__output(soap, n, NULL, NULL, NULL)


#define soap_delete_wsdl__output(soap, p) soap_delete(soap, p)

SOAP_FMAC1 wsdl__output * SOAP_FMAC2 soap_instantiate_wsdl__output(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_wsdl__output(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_wsdl__input
#define SOAP_TYPE_wsdl__input (328)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsdl__input(struct soap*, const char*, int, const wsdl__input *, const char*);
SOAP_FMAC3 wsdl__input * SOAP_FMAC4 soap_in_wsdl__input(struct soap*, const char*, wsdl__input *, const char*);

#ifndef soap_write_wsdl__input
#define soap_write_wsdl__input(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "wsdl:input", NULL) || soap_end_send(soap) )
#endif


#ifndef soap_read_wsdl__input
#define soap_read_wsdl__input(soap, data) ( soap_begin_recv(soap) || !soap_get_wsdl__input(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 wsdl__input * SOAP_FMAC4 soap_get_wsdl__input(struct soap*, wsdl__input *, const char*, const char*);

#define soap_new_wsdl__input(soap, n) soap_instantiate_wsdl__input(soap, n, NULL, NULL, NULL)


#define soap_delete_wsdl__input(soap, p) soap_delete(soap, p)

SOAP_FMAC1 wsdl__input * SOAP_FMAC2 soap_instantiate_wsdl__input(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_wsdl__input(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_wsdl__types
#define SOAP_TYPE_wsdl__types (312)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsdl__types(struct soap*, const char*, int, const wsdl__types *, const char*);
SOAP_FMAC3 wsdl__types * SOAP_FMAC4 soap_in_wsdl__types(struct soap*, const char*, wsdl__types *, const char*);

#ifndef soap_write_wsdl__types
#define soap_write_wsdl__types(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "wsdl:types", NULL) || soap_end_send(soap) )
#endif


#ifndef soap_read_wsdl__types
#define soap_read_wsdl__types(soap, data) ( soap_begin_recv(soap) || !soap_get_wsdl__types(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 wsdl__types * SOAP_FMAC4 soap_get_wsdl__types(struct soap*, wsdl__types *, const char*, const char*);

#define soap_new_wsdl__types(soap, n) soap_instantiate_wsdl__types(soap, n, NULL, NULL, NULL)


#define soap_delete_wsdl__types(soap, p) soap_delete(soap, p)

SOAP_FMAC1 wsdl__types * SOAP_FMAC2 soap_instantiate_wsdl__types(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_wsdl__types(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_wsdl__import
#define SOAP_TYPE_wsdl__import (304)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsdl__import(struct soap*, const char*, int, const wsdl__import *, const char*);
SOAP_FMAC3 wsdl__import * SOAP_FMAC4 soap_in_wsdl__import(struct soap*, const char*, wsdl__import *, const char*);

#ifndef soap_write_wsdl__import
#define soap_write_wsdl__import(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "wsdl:import", NULL) || soap_end_send(soap) )
#endif


#ifndef soap_read_wsdl__import
#define soap_read_wsdl__import(soap, data) ( soap_begin_recv(soap) || !soap_get_wsdl__import(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 wsdl__import * SOAP_FMAC4 soap_get_wsdl__import(struct soap*, wsdl__import *, const char*, const char*);

#define soap_new_wsdl__import(soap, n) soap_instantiate_wsdl__import(soap, n, NULL, NULL, NULL)


#define soap_delete_wsdl__import(soap, p) soap_delete(soap, p)

SOAP_FMAC1 wsdl__import * SOAP_FMAC2 soap_instantiate_wsdl__import(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_wsdl__import(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_wsp__PolicyAttachment
#define SOAP_TYPE_wsp__PolicyAttachment (301)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsp__PolicyAttachment(struct soap*, const char*, int, const wsp__PolicyAttachment *, const char*);
SOAP_FMAC3 wsp__PolicyAttachment * SOAP_FMAC4 soap_in_wsp__PolicyAttachment(struct soap*, const char*, wsp__PolicyAttachment *, const char*);

#ifndef soap_write_wsp__PolicyAttachment
#define soap_write_wsp__PolicyAttachment(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "wsp:PolicyAttachment", NULL) || soap_end_send(soap) )
#endif


#ifndef soap_read_wsp__PolicyAttachment
#define soap_read_wsp__PolicyAttachment(soap, data) ( soap_begin_recv(soap) || !soap_get_wsp__PolicyAttachment(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 wsp__PolicyAttachment * SOAP_FMAC4 soap_get_wsp__PolicyAttachment(struct soap*, wsp__PolicyAttachment *, const char*, const char*);

#define soap_new_wsp__PolicyAttachment(soap, n) soap_instantiate_wsp__PolicyAttachment(soap, n, NULL, NULL, NULL)


#define soap_delete_wsp__PolicyAttachment(soap, p) soap_delete(soap, p)

SOAP_FMAC1 wsp__PolicyAttachment * SOAP_FMAC2 soap_instantiate_wsp__PolicyAttachment(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_wsp__PolicyAttachment(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_wsp__AppliesTo
#define SOAP_TYPE_wsp__AppliesTo (300)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsp__AppliesTo(struct soap*, const char*, int, const wsp__AppliesTo *, const char*);
SOAP_FMAC3 wsp__AppliesTo * SOAP_FMAC4 soap_in_wsp__AppliesTo(struct soap*, const char*, wsp__AppliesTo *, const char*);

#ifndef soap_write_wsp__AppliesTo
#define soap_write_wsp__AppliesTo(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "wsp:AppliesTo", NULL) || soap_end_send(soap) )
#endif


#ifndef soap_read_wsp__AppliesTo
#define soap_read_wsp__AppliesTo(soap, data) ( soap_begin_recv(soap) || !soap_get_wsp__AppliesTo(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 wsp__AppliesTo * SOAP_FMAC4 soap_get_wsp__AppliesTo(struct soap*, wsp__AppliesTo *, const char*, const char*);

#define soap_new_wsp__AppliesTo(soap, n) soap_instantiate_wsp__AppliesTo(soap, n, NULL, NULL, NULL)


#define soap_delete_wsp__AppliesTo(soap, p) soap_delete(soap, p)

SOAP_FMAC1 wsp__AppliesTo * SOAP_FMAC2 soap_instantiate_wsp__AppliesTo(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_wsp__AppliesTo(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_wsp__Attachment
#define SOAP_TYPE_wsp__Attachment (299)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsp__Attachment(struct soap*, const char*, int, const wsp__Attachment *, const char*);
SOAP_FMAC3 wsp__Attachment * SOAP_FMAC4 soap_in_wsp__Attachment(struct soap*, const char*, wsp__Attachment *, const char*);

#ifndef soap_write_wsp__Attachment
#define soap_write_wsp__Attachment(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "wsp:Attachment", NULL) || soap_end_send(soap) )
#endif


#ifndef soap_read_wsp__Attachment
#define soap_read_wsp__Attachment(soap, data) ( soap_begin_recv(soap) || !soap_get_wsp__Attachment(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 wsp__Attachment * SOAP_FMAC4 soap_get_wsp__Attachment(struct soap*, wsp__Attachment *, const char*, const char*);

#define soap_new_wsp__Attachment(soap, n) soap_instantiate_wsp__Attachment(soap, n, NULL, NULL, NULL)


#define soap_delete_wsp__Attachment(soap, p) soap_delete(soap, p)

SOAP_FMAC1 wsp__Attachment * SOAP_FMAC2 soap_instantiate_wsp__Attachment(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_wsp__Attachment(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_wsrmp__RMAssertion
#define SOAP_TYPE_wsrmp__RMAssertion (287)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsrmp__RMAssertion(struct soap*, const char*, int, const wsrmp__RMAssertion *, const char*);
SOAP_FMAC3 wsrmp__RMAssertion * SOAP_FMAC4 soap_in_wsrmp__RMAssertion(struct soap*, const char*, wsrmp__RMAssertion *, const char*);

#ifndef soap_write_wsrmp__RMAssertion
#define soap_write_wsrmp__RMAssertion(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "wsrmp:RMAssertion", NULL) || soap_end_send(soap) )
#endif


#ifndef soap_read_wsrmp__RMAssertion
#define soap_read_wsrmp__RMAssertion(soap, data) ( soap_begin_recv(soap) || !soap_get_wsrmp__RMAssertion(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 wsrmp__RMAssertion * SOAP_FMAC4 soap_get_wsrmp__RMAssertion(struct soap*, wsrmp__RMAssertion *, const char*, const char*);

#define soap_new_wsrmp__RMAssertion(soap, n) soap_instantiate_wsrmp__RMAssertion(soap, n, NULL, NULL, NULL)


#define soap_delete_wsrmp__RMAssertion(soap, p) soap_delete(soap, p)

SOAP_FMAC1 wsrmp__RMAssertion * SOAP_FMAC2 soap_instantiate_wsrmp__RMAssertion(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_wsrmp__RMAssertion(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_sp__Token
#define SOAP_TYPE_sp__Token (284)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_sp__Token(struct soap*, const char*, int, const sp__Token *, const char*);
SOAP_FMAC3 sp__Token * SOAP_FMAC4 soap_in_sp__Token(struct soap*, const char*, sp__Token *, const char*);

#ifndef soap_write_sp__Token
#define soap_write_sp__Token(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "sp:Token", NULL) || soap_end_send(soap) )
#endif


#ifndef soap_read_sp__Token
#define soap_read_sp__Token(soap, data) ( soap_begin_recv(soap) || !soap_get_sp__Token(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 sp__Token * SOAP_FMAC4 soap_get_sp__Token(struct soap*, sp__Token *, const char*, const char*);

#define soap_new_sp__Token(soap, n) soap_instantiate_sp__Token(soap, n, NULL, NULL, NULL)


#define soap_delete_sp__Token(soap, p) soap_delete(soap, p)

SOAP_FMAC1 sp__Token * SOAP_FMAC2 soap_instantiate_sp__Token(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_sp__Token(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_sp__Elements
#define SOAP_TYPE_sp__Elements (282)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_sp__Elements(struct soap*, const char*, int, const sp__Elements *, const char*);
SOAP_FMAC3 sp__Elements * SOAP_FMAC4 soap_in_sp__Elements(struct soap*, const char*, sp__Elements *, const char*);

#ifndef soap_write_sp__Elements
#define soap_write_sp__Elements(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "sp:Elements", NULL) || soap_end_send(soap) )
#endif


#ifndef soap_read_sp__Elements
#define soap_read_sp__Elements(soap, data) ( soap_begin_recv(soap) || !soap_get_sp__Elements(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 sp__Elements * SOAP_FMAC4 soap_get_sp__Elements(struct soap*, sp__Elements *, const char*, const char*);

#define soap_new_sp__Elements(soap, n) soap_instantiate_sp__Elements(soap, n, NULL, NULL, NULL)


#define soap_delete_sp__Elements(soap, p) soap_delete(soap, p)

SOAP_FMAC1 sp__Elements * SOAP_FMAC2 soap_instantiate_sp__Elements(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_sp__Elements(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_sp__Parts
#define SOAP_TYPE_sp__Parts (280)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_sp__Parts(struct soap*, const char*, int, const sp__Parts *, const char*);
SOAP_FMAC3 sp__Parts * SOAP_FMAC4 soap_in_sp__Parts(struct soap*, const char*, sp__Parts *, const char*);

#ifndef soap_write_sp__Parts
#define soap_write_sp__Parts(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "sp:Parts", NULL) || soap_end_send(soap) )
#endif


#ifndef soap_read_sp__Parts
#define soap_read_sp__Parts(soap, data) ( soap_begin_recv(soap) || !soap_get_sp__Parts(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 sp__Parts * SOAP_FMAC4 soap_get_sp__Parts(struct soap*, sp__Parts *, const char*, const char*);

#define soap_new_sp__Parts(soap, n) soap_instantiate_sp__Parts(soap, n, NULL, NULL, NULL)


#define soap_delete_sp__Parts(soap, p) soap_delete(soap, p)

SOAP_FMAC1 sp__Parts * SOAP_FMAC2 soap_instantiate_sp__Parts(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_sp__Parts(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_sp__Header
#define SOAP_TYPE_sp__Header (279)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_sp__Header(struct soap*, const char*, int, const sp__Header *, const char*);
SOAP_FMAC3 sp__Header * SOAP_FMAC4 soap_in_sp__Header(struct soap*, const char*, sp__Header *, const char*);

#ifndef soap_write_sp__Header
#define soap_write_sp__Header(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "sp:Header", NULL) || soap_end_send(soap) )
#endif


#ifndef soap_read_sp__Header
#define soap_read_sp__Header(soap, data) ( soap_begin_recv(soap) || !soap_get_sp__Header(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 sp__Header * SOAP_FMAC4 soap_get_sp__Header(struct soap*, sp__Header *, const char*, const char*);

#define soap_new_sp__Header(soap, n) soap_instantiate_sp__Header(soap, n, NULL, NULL, NULL)


#define soap_delete_sp__Header(soap, p) soap_delete(soap, p)

SOAP_FMAC1 sp__Header * SOAP_FMAC2 soap_instantiate_sp__Header(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_sp__Header(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_wst__Claims
#define SOAP_TYPE_wst__Claims (278)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_wst__Claims(struct soap*, const char*, int, const wst__Claims *, const char*);
SOAP_FMAC3 wst__Claims * SOAP_FMAC4 soap_in_wst__Claims(struct soap*, const char*, wst__Claims *, const char*);

#ifndef soap_write_wst__Claims
#define soap_write_wst__Claims(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "wst:Claims", NULL) || soap_end_send(soap) )
#endif


#ifndef soap_read_wst__Claims
#define soap_read_wst__Claims(soap, data) ( soap_begin_recv(soap) || !soap_get_wst__Claims(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 wst__Claims * SOAP_FMAC4 soap_get_wst__Claims(struct soap*, wst__Claims *, const char*, const char*);

#define soap_new_wst__Claims(soap, n) soap_instantiate_wst__Claims(soap, n, NULL, NULL, NULL)


#define soap_delete_wst__Claims(soap, p) soap_delete(soap, p)

SOAP_FMAC1 wst__Claims * SOAP_FMAC2 soap_instantiate_wst__Claims(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_wst__Claims(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_wsp__Assertion
#define SOAP_TYPE_wsp__Assertion (276)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsp__Assertion(struct soap*, const char*, int, const wsp__Assertion *, const char*);
SOAP_FMAC3 wsp__Assertion * SOAP_FMAC4 soap_in_wsp__Assertion(struct soap*, const char*, wsp__Assertion *, const char*);

#ifndef soap_write_wsp__Assertion
#define soap_write_wsp__Assertion(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "wsp:Assertion", NULL) || soap_end_send(soap) )
#endif


#ifndef soap_read_wsp__Assertion
#define soap_read_wsp__Assertion(soap, data) ( soap_begin_recv(soap) || !soap_get_wsp__Assertion(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 wsp__Assertion * SOAP_FMAC4 soap_get_wsp__Assertion(struct soap*, wsp__Assertion *, const char*, const char*);

#define soap_new_wsp__Assertion(soap, n) soap_instantiate_wsp__Assertion(soap, n, NULL, NULL, NULL)


#define soap_delete_wsp__Assertion(soap, p) soap_delete(soap, p)

SOAP_FMAC1 wsp__Assertion * SOAP_FMAC2 soap_instantiate_wsp__Assertion(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_wsp__Assertion(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_wsp__PolicyReference
#define SOAP_TYPE_wsp__PolicyReference (270)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsp__PolicyReference(struct soap*, const char*, int, const wsp__PolicyReference *, const char*);
SOAP_FMAC3 wsp__PolicyReference * SOAP_FMAC4 soap_in_wsp__PolicyReference(struct soap*, const char*, wsp__PolicyReference *, const char*);

#ifndef soap_write_wsp__PolicyReference
#define soap_write_wsp__PolicyReference(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "wsp:PolicyReference", NULL) || soap_end_send(soap) )
#endif


#ifndef soap_read_wsp__PolicyReference
#define soap_read_wsp__PolicyReference(soap, data) ( soap_begin_recv(soap) || !soap_get_wsp__PolicyReference(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 wsp__PolicyReference * SOAP_FMAC4 soap_get_wsp__PolicyReference(struct soap*, wsp__PolicyReference *, const char*, const char*);

#define soap_new_wsp__PolicyReference(soap, n) soap_instantiate_wsp__PolicyReference(soap, n, NULL, NULL, NULL)


#define soap_delete_wsp__PolicyReference(soap, p) soap_delete(soap, p)

SOAP_FMAC1 wsp__PolicyReference * SOAP_FMAC2 soap_instantiate_wsp__PolicyReference(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_wsp__PolicyReference(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_wsp__Content
#define SOAP_TYPE_wsp__Content (268)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsp__Content(struct soap*, const char*, int, const wsp__Content *, const char*);
SOAP_FMAC3 wsp__Content * SOAP_FMAC4 soap_in_wsp__Content(struct soap*, const char*, wsp__Content *, const char*);

#ifndef soap_write_wsp__Content
#define soap_write_wsp__Content(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "wsp:Content", NULL) || soap_end_send(soap) )
#endif


#ifndef soap_read_wsp__Content
#define soap_read_wsp__Content(soap, data) ( soap_begin_recv(soap) || !soap_get_wsp__Content(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 wsp__Content * SOAP_FMAC4 soap_get_wsp__Content(struct soap*, wsp__Content *, const char*, const char*);

#define soap_new_wsp__Content(soap, n) soap_instantiate_wsp__Content(soap, n, NULL, NULL, NULL)


#define soap_delete_wsp__Content(soap, p) soap_delete(soap, p)

SOAP_FMAC1 wsp__Content * SOAP_FMAC2 soap_instantiate_wsp__Content(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_wsp__Content(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_wsp__Policy
#define SOAP_TYPE_wsp__Policy (267)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsp__Policy(struct soap*, const char*, int, const wsp__Policy *, const char*);
SOAP_FMAC3 wsp__Policy * SOAP_FMAC4 soap_in_wsp__Policy(struct soap*, const char*, wsp__Policy *, const char*);

#ifndef soap_write_wsp__Policy
#define soap_write_wsp__Policy(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "wsp:Policy", NULL) || soap_end_send(soap) )
#endif


#ifndef soap_read_wsp__Policy
#define soap_read_wsp__Policy(soap, data) ( soap_begin_recv(soap) || !soap_get_wsp__Policy(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 wsp__Policy * SOAP_FMAC4 soap_get_wsp__Policy(struct soap*, wsp__Policy *, const char*, const char*);

#define soap_new_wsp__Policy(soap, n) soap_instantiate_wsp__Policy(soap, n, NULL, NULL, NULL)


#define soap_delete_wsp__Policy(soap, p) soap_delete(soap, p)

SOAP_FMAC1 wsp__Policy * SOAP_FMAC2 soap_instantiate_wsp__Policy(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_wsp__Policy(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_wsa__EndpointReferenceType
#define SOAP_TYPE_wsa__EndpointReferenceType (266)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsa__EndpointReferenceType(struct soap*, const char*, int, const wsa__EndpointReferenceType *, const char*);
SOAP_FMAC3 wsa__EndpointReferenceType * SOAP_FMAC4 soap_in_wsa__EndpointReferenceType(struct soap*, const char*, wsa__EndpointReferenceType *, const char*);

#ifndef soap_write_wsa__EndpointReferenceType
#define soap_write_wsa__EndpointReferenceType(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "wsa:EndpointReferenceType", NULL) || soap_end_send(soap) )
#endif


#ifndef soap_read_wsa__EndpointReferenceType
#define soap_read_wsa__EndpointReferenceType(soap, data) ( soap_begin_recv(soap) || !soap_get_wsa__EndpointReferenceType(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 wsa__EndpointReferenceType * SOAP_FMAC4 soap_get_wsa__EndpointReferenceType(struct soap*, wsa__EndpointReferenceType *, const char*, const char*);

#define soap_new_wsa__EndpointReferenceType(soap, n) soap_instantiate_wsa__EndpointReferenceType(soap, n, NULL, NULL, NULL)


#define soap_delete_wsa__EndpointReferenceType(soap, p) soap_delete(soap, p)

SOAP_FMAC1 wsa__EndpointReferenceType * SOAP_FMAC2 soap_instantiate_wsa__EndpointReferenceType(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_wsa__EndpointReferenceType(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_gwsdl__portType
#define SOAP_TYPE_gwsdl__portType (261)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_gwsdl__portType(struct soap*, const char*, int, const gwsdl__portType *, const char*);
SOAP_FMAC3 gwsdl__portType * SOAP_FMAC4 soap_in_gwsdl__portType(struct soap*, const char*, gwsdl__portType *, const char*);

#ifndef soap_write_gwsdl__portType
#define soap_write_gwsdl__portType(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "gwsdl:portType", NULL) || soap_end_send(soap) )
#endif


#ifndef soap_read_gwsdl__portType
#define soap_read_gwsdl__portType(soap, data) ( soap_begin_recv(soap) || !soap_get_gwsdl__portType(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 gwsdl__portType * SOAP_FMAC4 soap_get_gwsdl__portType(struct soap*, gwsdl__portType *, const char*, const char*);

#define soap_new_gwsdl__portType(soap, n) soap_instantiate_gwsdl__portType(soap, n, NULL, NULL, NULL)


#define soap_delete_gwsdl__portType(soap, p) soap_delete(soap, p)

SOAP_FMAC1 gwsdl__portType * SOAP_FMAC2 soap_instantiate_gwsdl__portType(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_gwsdl__portType(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_sd__staticServiceDataValues
#define SOAP_TYPE_sd__staticServiceDataValues (259)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_sd__staticServiceDataValues(struct soap*, const char*, int, const sd__staticServiceDataValues *, const char*);
SOAP_FMAC3 sd__staticServiceDataValues * SOAP_FMAC4 soap_in_sd__staticServiceDataValues(struct soap*, const char*, sd__staticServiceDataValues *, const char*);

#ifndef soap_write_sd__staticServiceDataValues
#define soap_write_sd__staticServiceDataValues(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "sd:staticServiceDataValues", NULL) || soap_end_send(soap) )
#endif


#ifndef soap_read_sd__staticServiceDataValues
#define soap_read_sd__staticServiceDataValues(soap, data) ( soap_begin_recv(soap) || !soap_get_sd__staticServiceDataValues(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 sd__staticServiceDataValues * SOAP_FMAC4 soap_get_sd__staticServiceDataValues(struct soap*, sd__staticServiceDataValues *, const char*, const char*);

#define soap_new_sd__staticServiceDataValues(soap, n) soap_instantiate_sd__staticServiceDataValues(soap, n, NULL, NULL, NULL)


#define soap_delete_sd__staticServiceDataValues(soap, p) soap_delete(soap, p)

SOAP_FMAC1 sd__staticServiceDataValues * SOAP_FMAC2 soap_instantiate_sd__staticServiceDataValues(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_sd__staticServiceDataValues(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_sd__serviceData
#define SOAP_TYPE_sd__serviceData (258)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_sd__serviceData(struct soap*, const char*, int, const sd__serviceData *, const char*);
SOAP_FMAC3 sd__serviceData * SOAP_FMAC4 soap_in_sd__serviceData(struct soap*, const char*, sd__serviceData *, const char*);

#ifndef soap_write_sd__serviceData
#define soap_write_sd__serviceData(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "sd:serviceData", NULL) || soap_end_send(soap) )
#endif


#ifndef soap_read_sd__serviceData
#define soap_read_sd__serviceData(soap, data) ( soap_begin_recv(soap) || !soap_get_sd__serviceData(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 sd__serviceData * SOAP_FMAC4 soap_get_sd__serviceData(struct soap*, sd__serviceData *, const char*, const char*);

#define soap_new_sd__serviceData(soap, n) soap_instantiate_sd__serviceData(soap, n, NULL, NULL, NULL)


#define soap_delete_sd__serviceData(soap, p) soap_delete(soap, p)

SOAP_FMAC1 sd__serviceData * SOAP_FMAC2 soap_instantiate_sd__serviceData(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_sd__serviceData(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_wsdl__operation
#define SOAP_TYPE_wsdl__operation (256)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsdl__operation(struct soap*, const char*, int, const wsdl__operation *, const char*);
SOAP_FMAC3 wsdl__operation * SOAP_FMAC4 soap_in_wsdl__operation(struct soap*, const char*, wsdl__operation *, const char*);

#ifndef soap_write_wsdl__operation
#define soap_write_wsdl__operation(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "wsdl:operation", NULL) || soap_end_send(soap) )
#endif


#ifndef soap_read_wsdl__operation
#define soap_read_wsdl__operation(soap, data) ( soap_begin_recv(soap) || !soap_get_wsdl__operation(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 wsdl__operation * SOAP_FMAC4 soap_get_wsdl__operation(struct soap*, wsdl__operation *, const char*, const char*);

#define soap_new_wsdl__operation(soap, n) soap_instantiate_wsdl__operation(soap, n, NULL, NULL, NULL)


#define soap_delete_wsdl__operation(soap, p) soap_delete(soap, p)

SOAP_FMAC1 wsdl__operation * SOAP_FMAC2 soap_instantiate_wsdl__operation(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_wsdl__operation(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_http__operation
#define SOAP_TYPE_http__operation (255)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_http__operation(struct soap*, const char*, int, const http__operation *, const char*);
SOAP_FMAC3 http__operation * SOAP_FMAC4 soap_in_http__operation(struct soap*, const char*, http__operation *, const char*);

#ifndef soap_write_http__operation
#define soap_write_http__operation(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "http:operation", NULL) || soap_end_send(soap) )
#endif


#ifndef soap_read_http__operation
#define soap_read_http__operation(soap, data) ( soap_begin_recv(soap) || !soap_get_http__operation(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 http__operation * SOAP_FMAC4 soap_get_http__operation(struct soap*, http__operation *, const char*, const char*);

#define soap_new_http__operation(soap, n) soap_instantiate_http__operation(soap, n, NULL, NULL, NULL)


#define soap_delete_http__operation(soap, p) soap_delete(soap, p)

SOAP_FMAC1 http__operation * SOAP_FMAC2 soap_instantiate_http__operation(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_http__operation(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_http__binding
#define SOAP_TYPE_http__binding (254)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_http__binding(struct soap*, const char*, int, const http__binding *, const char*);
SOAP_FMAC3 http__binding * SOAP_FMAC4 soap_in_http__binding(struct soap*, const char*, http__binding *, const char*);

#ifndef soap_write_http__binding
#define soap_write_http__binding(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "http:binding", NULL) || soap_end_send(soap) )
#endif


#ifndef soap_read_http__binding
#define soap_read_http__binding(soap, data) ( soap_begin_recv(soap) || !soap_get_http__binding(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 http__binding * SOAP_FMAC4 soap_get_http__binding(struct soap*, http__binding *, const char*, const char*);

#define soap_new_http__binding(soap, n) soap_instantiate_http__binding(soap, n, NULL, NULL, NULL)


#define soap_delete_http__binding(soap, p) soap_delete(soap, p)

SOAP_FMAC1 http__binding * SOAP_FMAC2 soap_instantiate_http__binding(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_http__binding(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_http__address
#define SOAP_TYPE_http__address (253)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_http__address(struct soap*, const char*, int, const http__address *, const char*);
SOAP_FMAC3 http__address * SOAP_FMAC4 soap_in_http__address(struct soap*, const char*, http__address *, const char*);

#ifndef soap_write_http__address
#define soap_write_http__address(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "http:address", NULL) || soap_end_send(soap) )
#endif


#ifndef soap_read_http__address
#define soap_read_http__address(soap, data) ( soap_begin_recv(soap) || !soap_get_http__address(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 http__address * SOAP_FMAC4 soap_get_http__address(struct soap*, http__address *, const char*, const char*);

#define soap_new_http__address(soap, n) soap_instantiate_http__address(soap, n, NULL, NULL, NULL)


#define soap_delete_http__address(soap, p) soap_delete(soap, p)

SOAP_FMAC1 http__address * SOAP_FMAC2 soap_instantiate_http__address(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_http__address(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_dime__message
#define SOAP_TYPE_dime__message (252)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_dime__message(struct soap*, const char*, int, const dime__message *, const char*);
SOAP_FMAC3 dime__message * SOAP_FMAC4 soap_in_dime__message(struct soap*, const char*, dime__message *, const char*);

#ifndef soap_write_dime__message
#define soap_write_dime__message(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "dime:message", NULL) || soap_end_send(soap) )
#endif


#ifndef soap_read_dime__message
#define soap_read_dime__message(soap, data) ( soap_begin_recv(soap) || !soap_get_dime__message(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 dime__message * SOAP_FMAC4 soap_get_dime__message(struct soap*, dime__message *, const char*, const char*);

#define soap_new_dime__message(soap, n) soap_instantiate_dime__message(soap, n, NULL, NULL, NULL)


#define soap_delete_dime__message(soap, p) soap_delete(soap, p)

SOAP_FMAC1 dime__message * SOAP_FMAC2 soap_instantiate_dime__message(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_dime__message(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_mime__mimeXml
#define SOAP_TYPE_mime__mimeXml (251)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_mime__mimeXml(struct soap*, const char*, int, const mime__mimeXml *, const char*);
SOAP_FMAC3 mime__mimeXml * SOAP_FMAC4 soap_in_mime__mimeXml(struct soap*, const char*, mime__mimeXml *, const char*);

#ifndef soap_write_mime__mimeXml
#define soap_write_mime__mimeXml(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "mime:mimeXml", NULL) || soap_end_send(soap) )
#endif


#ifndef soap_read_mime__mimeXml
#define soap_read_mime__mimeXml(soap, data) ( soap_begin_recv(soap) || !soap_get_mime__mimeXml(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 mime__mimeXml * SOAP_FMAC4 soap_get_mime__mimeXml(struct soap*, mime__mimeXml *, const char*, const char*);

#define soap_new_mime__mimeXml(soap, n) soap_instantiate_mime__mimeXml(soap, n, NULL, NULL, NULL)


#define soap_delete_mime__mimeXml(soap, p) soap_delete(soap, p)

SOAP_FMAC1 mime__mimeXml * SOAP_FMAC2 soap_instantiate_mime__mimeXml(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_mime__mimeXml(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_mime__multipartRelated
#define SOAP_TYPE_mime__multipartRelated (248)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_mime__multipartRelated(struct soap*, const char*, int, const mime__multipartRelated *, const char*);
SOAP_FMAC3 mime__multipartRelated * SOAP_FMAC4 soap_in_mime__multipartRelated(struct soap*, const char*, mime__multipartRelated *, const char*);

#ifndef soap_write_mime__multipartRelated
#define soap_write_mime__multipartRelated(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "mime:multipartRelated", NULL) || soap_end_send(soap) )
#endif


#ifndef soap_read_mime__multipartRelated
#define soap_read_mime__multipartRelated(soap, data) ( soap_begin_recv(soap) || !soap_get_mime__multipartRelated(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 mime__multipartRelated * SOAP_FMAC4 soap_get_mime__multipartRelated(struct soap*, mime__multipartRelated *, const char*, const char*);

#define soap_new_mime__multipartRelated(soap, n) soap_instantiate_mime__multipartRelated(soap, n, NULL, NULL, NULL)


#define soap_delete_mime__multipartRelated(soap, p) soap_delete(soap, p)

SOAP_FMAC1 mime__multipartRelated * SOAP_FMAC2 soap_instantiate_mime__multipartRelated(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_mime__multipartRelated(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_mime__part
#define SOAP_TYPE_mime__part (243)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_mime__part(struct soap*, const char*, int, const mime__part *, const char*);
SOAP_FMAC3 mime__part * SOAP_FMAC4 soap_in_mime__part(struct soap*, const char*, mime__part *, const char*);

#ifndef soap_write_mime__part
#define soap_write_mime__part(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "mime:part", NULL) || soap_end_send(soap) )
#endif


#ifndef soap_read_mime__part
#define soap_read_mime__part(soap, data) ( soap_begin_recv(soap) || !soap_get_mime__part(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 mime__part * SOAP_FMAC4 soap_get_mime__part(struct soap*, mime__part *, const char*, const char*);

#define soap_new_mime__part(soap, n) soap_instantiate_mime__part(soap, n, NULL, NULL, NULL)


#define soap_delete_mime__part(soap, p) soap_delete(soap, p)

SOAP_FMAC1 mime__part * SOAP_FMAC2 soap_instantiate_mime__part(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_mime__part(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_mime__content
#define SOAP_TYPE_mime__content (242)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_mime__content(struct soap*, const char*, int, const mime__content *, const char*);
SOAP_FMAC3 mime__content * SOAP_FMAC4 soap_in_mime__content(struct soap*, const char*, mime__content *, const char*);

#ifndef soap_write_mime__content
#define soap_write_mime__content(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "mime:content", NULL) || soap_end_send(soap) )
#endif


#ifndef soap_read_mime__content
#define soap_read_mime__content(soap, data) ( soap_begin_recv(soap) || !soap_get_mime__content(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 mime__content * SOAP_FMAC4 soap_get_mime__content(struct soap*, mime__content *, const char*, const char*);

#define soap_new_mime__content(soap, n) soap_instantiate_mime__content(soap, n, NULL, NULL, NULL)


#define soap_delete_mime__content(soap, p) soap_delete(soap, p)

SOAP_FMAC1 mime__content * SOAP_FMAC2 soap_instantiate_mime__content(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_mime__content(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_soap__address
#define SOAP_TYPE_soap__address (241)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_soap__address(struct soap*, const char*, int, const soap__address *, const char*);
SOAP_FMAC3 soap__address * SOAP_FMAC4 soap_in_soap__address(struct soap*, const char*, soap__address *, const char*);

#ifndef soap_write_soap__address
#define soap_write_soap__address(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "soap:address", NULL) || soap_end_send(soap) )
#endif


#ifndef soap_read_soap__address
#define soap_read_soap__address(soap, data) ( soap_begin_recv(soap) || !soap_get_soap__address(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 soap__address * SOAP_FMAC4 soap_get_soap__address(struct soap*, soap__address *, const char*, const char*);

#define soap_new_soap__address(soap, n) soap_instantiate_soap__address(soap, n, NULL, NULL, NULL)


#define soap_delete_soap__address(soap, p) soap_delete(soap, p)

SOAP_FMAC1 soap__address * SOAP_FMAC2 soap_instantiate_soap__address(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_soap__address(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_soap__header
#define SOAP_TYPE_soap__header (234)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_soap__header(struct soap*, const char*, int, const soap__header *, const char*);
SOAP_FMAC3 soap__header * SOAP_FMAC4 soap_in_soap__header(struct soap*, const char*, soap__header *, const char*);

#ifndef soap_write_soap__header
#define soap_write_soap__header(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "soap:header", NULL) || soap_end_send(soap) )
#endif


#ifndef soap_read_soap__header
#define soap_read_soap__header(soap, data) ( soap_begin_recv(soap) || !soap_get_soap__header(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 soap__header * SOAP_FMAC4 soap_get_soap__header(struct soap*, soap__header *, const char*, const char*);

#define soap_new_soap__header(soap, n) soap_instantiate_soap__header(soap, n, NULL, NULL, NULL)


#define soap_delete_soap__header(soap, p) soap_delete(soap, p)

SOAP_FMAC1 soap__header * SOAP_FMAC2 soap_instantiate_soap__header(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_soap__header(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_soap__headerfault
#define SOAP_TYPE_soap__headerfault (223)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_soap__headerfault(struct soap*, const char*, int, const soap__headerfault *, const char*);
SOAP_FMAC3 soap__headerfault * SOAP_FMAC4 soap_in_soap__headerfault(struct soap*, const char*, soap__headerfault *, const char*);

#ifndef soap_write_soap__headerfault
#define soap_write_soap__headerfault(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "soap:headerfault", NULL) || soap_end_send(soap) )
#endif


#ifndef soap_read_soap__headerfault
#define soap_read_soap__headerfault(soap, data) ( soap_begin_recv(soap) || !soap_get_soap__headerfault(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 soap__headerfault * SOAP_FMAC4 soap_get_soap__headerfault(struct soap*, soap__headerfault *, const char*, const char*);

#define soap_new_soap__headerfault(soap, n) soap_instantiate_soap__headerfault(soap, n, NULL, NULL, NULL)


#define soap_delete_soap__headerfault(soap, p) soap_delete(soap, p)

SOAP_FMAC1 soap__headerfault * SOAP_FMAC2 soap_instantiate_soap__headerfault(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_soap__headerfault(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_soap__fault
#define SOAP_TYPE_soap__fault (222)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_soap__fault(struct soap*, const char*, int, const soap__fault *, const char*);
SOAP_FMAC3 soap__fault * SOAP_FMAC4 soap_in_soap__fault(struct soap*, const char*, soap__fault *, const char*);

#ifndef soap_write_soap__fault
#define soap_write_soap__fault(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "soap:fault", NULL) || soap_end_send(soap) )
#endif


#ifndef soap_read_soap__fault
#define soap_read_soap__fault(soap, data) ( soap_begin_recv(soap) || !soap_get_soap__fault(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 soap__fault * SOAP_FMAC4 soap_get_soap__fault(struct soap*, soap__fault *, const char*, const char*);

#define soap_new_soap__fault(soap, n) soap_instantiate_soap__fault(soap, n, NULL, NULL, NULL)


#define soap_delete_soap__fault(soap, p) soap_delete(soap, p)

SOAP_FMAC1 soap__fault * SOAP_FMAC2 soap_instantiate_soap__fault(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_soap__fault(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_soap__body
#define SOAP_TYPE_soap__body (221)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_soap__body(struct soap*, const char*, int, const soap__body *, const char*);
SOAP_FMAC3 soap__body * SOAP_FMAC4 soap_in_soap__body(struct soap*, const char*, soap__body *, const char*);

#ifndef soap_write_soap__body
#define soap_write_soap__body(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "soap:body", NULL) || soap_end_send(soap) )
#endif


#ifndef soap_read_soap__body
#define soap_read_soap__body(soap, data) ( soap_begin_recv(soap) || !soap_get_soap__body(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 soap__body * SOAP_FMAC4 soap_get_soap__body(struct soap*, soap__body *, const char*, const char*);

#define soap_new_soap__body(soap, n) soap_instantiate_soap__body(soap, n, NULL, NULL, NULL)


#define soap_delete_soap__body(soap, p) soap_delete(soap, p)

SOAP_FMAC1 soap__body * SOAP_FMAC2 soap_instantiate_soap__body(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_soap__body(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_soap__operation
#define SOAP_TYPE_soap__operation (219)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_soap__operation(struct soap*, const char*, int, const soap__operation *, const char*);
SOAP_FMAC3 soap__operation * SOAP_FMAC4 soap_in_soap__operation(struct soap*, const char*, soap__operation *, const char*);

#ifndef soap_write_soap__operation
#define soap_write_soap__operation(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "soap:operation", NULL) || soap_end_send(soap) )
#endif


#ifndef soap_read_soap__operation
#define soap_read_soap__operation(soap, data) ( soap_begin_recv(soap) || !soap_get_soap__operation(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 soap__operation * SOAP_FMAC4 soap_get_soap__operation(struct soap*, soap__operation *, const char*, const char*);

#define soap_new_soap__operation(soap, n) soap_instantiate_soap__operation(soap, n, NULL, NULL, NULL)


#define soap_delete_soap__operation(soap, p) soap_delete(soap, p)

SOAP_FMAC1 soap__operation * SOAP_FMAC2 soap_instantiate_soap__operation(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_soap__operation(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_soap__binding
#define SOAP_TYPE_soap__binding (217)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_soap__binding(struct soap*, const char*, int, const soap__binding *, const char*);
SOAP_FMAC3 soap__binding * SOAP_FMAC4 soap_in_soap__binding(struct soap*, const char*, soap__binding *, const char*);

#ifndef soap_write_soap__binding
#define soap_write_soap__binding(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "soap:binding", NULL) || soap_end_send(soap) )
#endif


#ifndef soap_read_soap__binding
#define soap_read_soap__binding(soap, data) ( soap_begin_recv(soap) || !soap_get_soap__binding(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 soap__binding * SOAP_FMAC4 soap_get_soap__binding(struct soap*, soap__binding *, const char*, const char*);

#define soap_new_soap__binding(soap, n) soap_instantiate_soap__binding(soap, n, NULL, NULL, NULL)


#define soap_delete_soap__binding(soap, p) soap_delete(soap, p)

SOAP_FMAC1 soap__binding * SOAP_FMAC2 soap_instantiate_soap__binding(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_soap__binding(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_wsdl__part
#define SOAP_TYPE_wsdl__part (215)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsdl__part(struct soap*, const char*, int, const wsdl__part *, const char*);
SOAP_FMAC3 wsdl__part * SOAP_FMAC4 soap_in_wsdl__part(struct soap*, const char*, wsdl__part *, const char*);

#ifndef soap_write_wsdl__part
#define soap_write_wsdl__part(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "wsdl:part", NULL) || soap_end_send(soap) )
#endif


#ifndef soap_read_wsdl__part
#define soap_read_wsdl__part(soap, data) ( soap_begin_recv(soap) || !soap_get_wsdl__part(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 wsdl__part * SOAP_FMAC4 soap_get_wsdl__part(struct soap*, wsdl__part *, const char*, const char*);

#define soap_new_wsdl__part(soap, n) soap_instantiate_wsdl__part(soap, n, NULL, NULL, NULL)


#define soap_delete_wsdl__part(soap, p) soap_delete(soap, p)

SOAP_FMAC1 wsdl__part * SOAP_FMAC2 soap_instantiate_wsdl__part(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_wsdl__part(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_wsdl__message
#define SOAP_TYPE_wsdl__message (214)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsdl__message(struct soap*, const char*, int, const wsdl__message *, const char*);
SOAP_FMAC3 wsdl__message * SOAP_FMAC4 soap_in_wsdl__message(struct soap*, const char*, wsdl__message *, const char*);

#ifndef soap_write_wsdl__message
#define soap_write_wsdl__message(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "wsdl:message", NULL) || soap_end_send(soap) )
#endif


#ifndef soap_read_wsdl__message
#define soap_read_wsdl__message(soap, data) ( soap_begin_recv(soap) || !soap_get_wsdl__message(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 wsdl__message * SOAP_FMAC4 soap_get_wsdl__message(struct soap*, wsdl__message *, const char*, const char*);

#define soap_new_wsdl__message(soap, n) soap_instantiate_wsdl__message(soap, n, NULL, NULL, NULL)


#define soap_delete_wsdl__message(soap, p) soap_delete(soap, p)

SOAP_FMAC1 wsdl__message * SOAP_FMAC2 soap_instantiate_wsdl__message(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_wsdl__message(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_wsdl__definitions
#define SOAP_TYPE_wsdl__definitions (213)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_wsdl__definitions(struct soap*, const char*, int, const wsdl__definitions *, const char*);
SOAP_FMAC3 wsdl__definitions * SOAP_FMAC4 soap_in_wsdl__definitions(struct soap*, const char*, wsdl__definitions *, const char*);

#ifndef soap_write_wsdl__definitions
#define soap_write_wsdl__definitions(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "wsdl:definitions", NULL) || soap_end_send(soap) )
#endif


#ifndef soap_read_wsdl__definitions
#define soap_read_wsdl__definitions(soap, data) ( soap_begin_recv(soap) || !soap_get_wsdl__definitions(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 wsdl__definitions * SOAP_FMAC4 soap_get_wsdl__definitions(struct soap*, wsdl__definitions *, const char*, const char*);

#define soap_new_wsdl__definitions(soap, n) soap_instantiate_wsdl__definitions(soap, n, NULL, NULL, NULL)


#define soap_delete_wsdl__definitions(soap, p) soap_delete(soap, p)

SOAP_FMAC1 wsdl__definitions * SOAP_FMAC2 soap_instantiate_wsdl__definitions(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_wsdl__definitions(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_xs__redefine
#define SOAP_TYPE_xs__redefine (169)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_xs__redefine(struct soap*, const char*, int, const xs__redefine *, const char*);
SOAP_FMAC3 xs__redefine * SOAP_FMAC4 soap_in_xs__redefine(struct soap*, const char*, xs__redefine *, const char*);

#ifndef soap_write_xs__redefine
#define soap_write_xs__redefine(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "xs:redefine", NULL) || soap_end_send(soap) )
#endif


#ifndef soap_read_xs__redefine
#define soap_read_xs__redefine(soap, data) ( soap_begin_recv(soap) || !soap_get_xs__redefine(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 xs__redefine * SOAP_FMAC4 soap_get_xs__redefine(struct soap*, xs__redefine *, const char*, const char*);

#define soap_new_xs__redefine(soap, n) soap_instantiate_xs__redefine(soap, n, NULL, NULL, NULL)


#define soap_delete_xs__redefine(soap, p) soap_delete(soap, p)

SOAP_FMAC1 xs__redefine * SOAP_FMAC2 soap_instantiate_xs__redefine(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_xs__redefine(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_xs__include
#define SOAP_TYPE_xs__include (163)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_xs__include(struct soap*, const char*, int, const xs__include *, const char*);
SOAP_FMAC3 xs__include * SOAP_FMAC4 soap_in_xs__include(struct soap*, const char*, xs__include *, const char*);

#ifndef soap_write_xs__include
#define soap_write_xs__include(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "xs:include", NULL) || soap_end_send(soap) )
#endif


#ifndef soap_read_xs__include
#define soap_read_xs__include(soap, data) ( soap_begin_recv(soap) || !soap_get_xs__include(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 xs__include * SOAP_FMAC4 soap_get_xs__include(struct soap*, xs__include *, const char*, const char*);

#define soap_new_xs__include(soap, n) soap_instantiate_xs__include(soap, n, NULL, NULL, NULL)


#define soap_delete_xs__include(soap, p) soap_delete(soap, p)

SOAP_FMAC1 xs__include * SOAP_FMAC2 soap_instantiate_xs__include(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_xs__include(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_xs__import
#define SOAP_TYPE_xs__import (158)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_xs__import(struct soap*, const char*, int, const xs__import *, const char*);
SOAP_FMAC3 xs__import * SOAP_FMAC4 soap_in_xs__import(struct soap*, const char*, xs__import *, const char*);

#ifndef soap_write_xs__import
#define soap_write_xs__import(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "xs:import", NULL) || soap_end_send(soap) )
#endif


#ifndef soap_read_xs__import
#define soap_read_xs__import(soap, data) ( soap_begin_recv(soap) || !soap_get_xs__import(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 xs__import * SOAP_FMAC4 soap_get_xs__import(struct soap*, xs__import *, const char*, const char*);

#define soap_new_xs__import(soap, n) soap_instantiate_xs__import(soap, n, NULL, NULL, NULL)


#define soap_delete_xs__import(soap, p) soap_delete(soap, p)

SOAP_FMAC1 xs__import * SOAP_FMAC2 soap_instantiate_xs__import(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_xs__import(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_xs__complexContent
#define SOAP_TYPE_xs__complexContent (149)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_xs__complexContent(struct soap*, const char*, int, const xs__complexContent *, const char*);
SOAP_FMAC3 xs__complexContent * SOAP_FMAC4 soap_in_xs__complexContent(struct soap*, const char*, xs__complexContent *, const char*);

#ifndef soap_write_xs__complexContent
#define soap_write_xs__complexContent(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "xs:complexContent", NULL) || soap_end_send(soap) )
#endif


#ifndef soap_read_xs__complexContent
#define soap_read_xs__complexContent(soap, data) ( soap_begin_recv(soap) || !soap_get_xs__complexContent(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 xs__complexContent * SOAP_FMAC4 soap_get_xs__complexContent(struct soap*, xs__complexContent *, const char*, const char*);

#define soap_new_xs__complexContent(soap, n) soap_instantiate_xs__complexContent(soap, n, NULL, NULL, NULL)


#define soap_delete_xs__complexContent(soap, p) soap_delete(soap, p)

SOAP_FMAC1 xs__complexContent * SOAP_FMAC2 soap_instantiate_xs__complexContent(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_xs__complexContent(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_xs__whiteSpace
#define SOAP_TYPE_xs__whiteSpace (132)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_xs__whiteSpace(struct soap*, const char*, int, const xs__whiteSpace *, const char*);
SOAP_FMAC3 xs__whiteSpace * SOAP_FMAC4 soap_in_xs__whiteSpace(struct soap*, const char*, xs__whiteSpace *, const char*);

#ifndef soap_write_xs__whiteSpace
#define soap_write_xs__whiteSpace(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "xs:whiteSpace", NULL) || soap_end_send(soap) )
#endif


#ifndef soap_read_xs__whiteSpace
#define soap_read_xs__whiteSpace(soap, data) ( soap_begin_recv(soap) || !soap_get_xs__whiteSpace(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 xs__whiteSpace * SOAP_FMAC4 soap_get_xs__whiteSpace(struct soap*, xs__whiteSpace *, const char*, const char*);

#define soap_new_xs__whiteSpace(soap, n) soap_instantiate_xs__whiteSpace(soap, n, NULL, NULL, NULL)


#define soap_delete_xs__whiteSpace(soap, p) soap_delete(soap, p)

SOAP_FMAC1 xs__whiteSpace * SOAP_FMAC2 soap_instantiate_xs__whiteSpace(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_xs__whiteSpace(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_xs__length
#define SOAP_TYPE_xs__length (131)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_xs__length(struct soap*, const char*, int, const xs__length *, const char*);
SOAP_FMAC3 xs__length * SOAP_FMAC4 soap_in_xs__length(struct soap*, const char*, xs__length *, const char*);

#ifndef soap_write_xs__length
#define soap_write_xs__length(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "xs:length", NULL) || soap_end_send(soap) )
#endif


#ifndef soap_read_xs__length
#define soap_read_xs__length(soap, data) ( soap_begin_recv(soap) || !soap_get_xs__length(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 xs__length * SOAP_FMAC4 soap_get_xs__length(struct soap*, xs__length *, const char*, const char*);

#define soap_new_xs__length(soap, n) soap_instantiate_xs__length(soap, n, NULL, NULL, NULL)


#define soap_delete_xs__length(soap, p) soap_delete(soap, p)

SOAP_FMAC1 xs__length * SOAP_FMAC2 soap_instantiate_xs__length(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_xs__length(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_xs__simpleContent
#define SOAP_TYPE_xs__simpleContent (114)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_xs__simpleContent(struct soap*, const char*, int, const xs__simpleContent *, const char*);
SOAP_FMAC3 xs__simpleContent * SOAP_FMAC4 soap_in_xs__simpleContent(struct soap*, const char*, xs__simpleContent *, const char*);

#ifndef soap_write_xs__simpleContent
#define soap_write_xs__simpleContent(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "xs:simpleContent", NULL) || soap_end_send(soap) )
#endif


#ifndef soap_read_xs__simpleContent
#define soap_read_xs__simpleContent(soap, data) ( soap_begin_recv(soap) || !soap_get_xs__simpleContent(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 xs__simpleContent * SOAP_FMAC4 soap_get_xs__simpleContent(struct soap*, xs__simpleContent *, const char*, const char*);

#define soap_new_xs__simpleContent(soap, n) soap_instantiate_xs__simpleContent(soap, n, NULL, NULL, NULL)


#define soap_delete_xs__simpleContent(soap, p) soap_delete(soap, p)

SOAP_FMAC1 xs__simpleContent * SOAP_FMAC2 soap_instantiate_xs__simpleContent(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_xs__simpleContent(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_xs__pattern
#define SOAP_TYPE_xs__pattern (112)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_xs__pattern(struct soap*, const char*, int, const xs__pattern *, const char*);
SOAP_FMAC3 xs__pattern * SOAP_FMAC4 soap_in_xs__pattern(struct soap*, const char*, xs__pattern *, const char*);

#ifndef soap_write_xs__pattern
#define soap_write_xs__pattern(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "xs:pattern", NULL) || soap_end_send(soap) )
#endif


#ifndef soap_read_xs__pattern
#define soap_read_xs__pattern(soap, data) ( soap_begin_recv(soap) || !soap_get_xs__pattern(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 xs__pattern * SOAP_FMAC4 soap_get_xs__pattern(struct soap*, xs__pattern *, const char*, const char*);

#define soap_new_xs__pattern(soap, n) soap_instantiate_xs__pattern(soap, n, NULL, NULL, NULL)


#define soap_delete_xs__pattern(soap, p) soap_delete(soap, p)

SOAP_FMAC1 xs__pattern * SOAP_FMAC2 soap_instantiate_xs__pattern(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_xs__pattern(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_xs__enumeration
#define SOAP_TYPE_xs__enumeration (110)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_xs__enumeration(struct soap*, const char*, int, const xs__enumeration *, const char*);
SOAP_FMAC3 xs__enumeration * SOAP_FMAC4 soap_in_xs__enumeration(struct soap*, const char*, xs__enumeration *, const char*);

#ifndef soap_write_xs__enumeration
#define soap_write_xs__enumeration(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "xs:enumeration", NULL) || soap_end_send(soap) )
#endif


#ifndef soap_read_xs__enumeration
#define soap_read_xs__enumeration(soap, data) ( soap_begin_recv(soap) || !soap_get_xs__enumeration(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 xs__enumeration * SOAP_FMAC4 soap_get_xs__enumeration(struct soap*, xs__enumeration *, const char*, const char*);

#define soap_new_xs__enumeration(soap, n) soap_instantiate_xs__enumeration(soap, n, NULL, NULL, NULL)


#define soap_delete_xs__enumeration(soap, p) soap_delete(soap, p)

SOAP_FMAC1 xs__enumeration * SOAP_FMAC2 soap_instantiate_xs__enumeration(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_xs__enumeration(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_xs__attributeGroup
#define SOAP_TYPE_xs__attributeGroup (98)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_xs__attributeGroup(struct soap*, const char*, int, const xs__attributeGroup *, const char*);
SOAP_FMAC3 xs__attributeGroup * SOAP_FMAC4 soap_in_xs__attributeGroup(struct soap*, const char*, xs__attributeGroup *, const char*);

#ifndef soap_write_xs__attributeGroup
#define soap_write_xs__attributeGroup(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "xs:attributeGroup", NULL) || soap_end_send(soap) )
#endif


#ifndef soap_read_xs__attributeGroup
#define soap_read_xs__attributeGroup(soap, data) ( soap_begin_recv(soap) || !soap_get_xs__attributeGroup(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 xs__attributeGroup * SOAP_FMAC4 soap_get_xs__attributeGroup(struct soap*, xs__attributeGroup *, const char*, const char*);

#define soap_new_xs__attributeGroup(soap, n) soap_instantiate_xs__attributeGroup(soap, n, NULL, NULL, NULL)


#define soap_delete_xs__attributeGroup(soap, p) soap_delete(soap, p)

SOAP_FMAC1 xs__attributeGroup * SOAP_FMAC2 soap_instantiate_xs__attributeGroup(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_xs__attributeGroup(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_xs__anyAttribute
#define SOAP_TYPE_xs__anyAttribute (97)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_xs__anyAttribute(struct soap*, const char*, int, const xs__anyAttribute *, const char*);
SOAP_FMAC3 xs__anyAttribute * SOAP_FMAC4 soap_in_xs__anyAttribute(struct soap*, const char*, xs__anyAttribute *, const char*);

#ifndef soap_write_xs__anyAttribute
#define soap_write_xs__anyAttribute(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "xs:anyAttribute", NULL) || soap_end_send(soap) )
#endif


#ifndef soap_read_xs__anyAttribute
#define soap_read_xs__anyAttribute(soap, data) ( soap_begin_recv(soap) || !soap_get_xs__anyAttribute(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 xs__anyAttribute * SOAP_FMAC4 soap_get_xs__anyAttribute(struct soap*, xs__anyAttribute *, const char*, const char*);

#define soap_new_xs__anyAttribute(soap, n) soap_instantiate_xs__anyAttribute(soap, n, NULL, NULL, NULL)


#define soap_delete_xs__anyAttribute(soap, p) soap_delete(soap, p)

SOAP_FMAC1 xs__anyAttribute * SOAP_FMAC2 soap_instantiate_xs__anyAttribute(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_xs__anyAttribute(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_xs__contents
#define SOAP_TYPE_xs__contents (78)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_xs__contents(struct soap*, const char*, int, const xs__contents *, const char*);
SOAP_FMAC3 xs__contents * SOAP_FMAC4 soap_in_xs__contents(struct soap*, const char*, xs__contents *, const char*);

#ifndef soap_write_xs__contents
#define soap_write_xs__contents(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "xs:contents", NULL) || soap_end_send(soap) )
#endif


#ifndef soap_read_xs__contents
#define soap_read_xs__contents(soap, data) ( soap_begin_recv(soap) || !soap_get_xs__contents(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 xs__contents * SOAP_FMAC4 soap_get_xs__contents(struct soap*, xs__contents *, const char*, const char*);

#define soap_new_xs__contents(soap, n) soap_instantiate_xs__contents(soap, n, NULL, NULL, NULL)


#define soap_delete_xs__contents(soap, p) soap_delete(soap, p)

SOAP_FMAC1 xs__contents * SOAP_FMAC2 soap_instantiate_xs__contents(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_xs__contents(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_xs__any
#define SOAP_TYPE_xs__any (76)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_xs__any(struct soap*, const char*, int, const xs__any *, const char*);
SOAP_FMAC3 xs__any * SOAP_FMAC4 soap_in_xs__any(struct soap*, const char*, xs__any *, const char*);

#ifndef soap_write_xs__any
#define soap_write_xs__any(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "xs:any", NULL) || soap_end_send(soap) )
#endif


#ifndef soap_read_xs__any
#define soap_read_xs__any(soap, data) ( soap_begin_recv(soap) || !soap_get_xs__any(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 xs__any * SOAP_FMAC4 soap_get_xs__any(struct soap*, xs__any *, const char*, const char*);

#define soap_new_xs__any(soap, n) soap_instantiate_xs__any(soap, n, NULL, NULL, NULL)


#define soap_delete_xs__any(soap, p) soap_delete(soap, p)

SOAP_FMAC1 xs__any * SOAP_FMAC2 soap_instantiate_xs__any(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_xs__any(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_xs__all
#define SOAP_TYPE_xs__all (71)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_xs__all(struct soap*, const char*, int, const xs__all *, const char*);
SOAP_FMAC3 xs__all * SOAP_FMAC4 soap_in_xs__all(struct soap*, const char*, xs__all *, const char*);

#ifndef soap_write_xs__all
#define soap_write_xs__all(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "xs:all", NULL) || soap_end_send(soap) )
#endif


#ifndef soap_read_xs__all
#define soap_read_xs__all(soap, data) ( soap_begin_recv(soap) || !soap_get_xs__all(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 xs__all * SOAP_FMAC4 soap_get_xs__all(struct soap*, xs__all *, const char*, const char*);

#define soap_new_xs__all(soap, n) soap_instantiate_xs__all(soap, n, NULL, NULL, NULL)


#define soap_delete_xs__all(soap, p) soap_delete(soap, p)

SOAP_FMAC1 xs__all * SOAP_FMAC2 soap_instantiate_xs__all(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_xs__all(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_xs__attribute
#define SOAP_TYPE_xs__attribute (60)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_xs__attribute(struct soap*, const char*, int, const xs__attribute *, const char*);
SOAP_FMAC3 xs__attribute * SOAP_FMAC4 soap_in_xs__attribute(struct soap*, const char*, xs__attribute *, const char*);

#ifndef soap_write_xs__attribute
#define soap_write_xs__attribute(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "xs:attribute", NULL) || soap_end_send(soap) )
#endif


#ifndef soap_read_xs__attribute
#define soap_read_xs__attribute(soap, data) ( soap_begin_recv(soap) || !soap_get_xs__attribute(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 xs__attribute * SOAP_FMAC4 soap_get_xs__attribute(struct soap*, xs__attribute *, const char*, const char*);

#define soap_new_xs__attribute(soap, n) soap_instantiate_xs__attribute(soap, n, NULL, NULL, NULL)


#define soap_delete_xs__attribute(soap, p) soap_delete(soap, p)

SOAP_FMAC1 xs__attribute * SOAP_FMAC2 soap_instantiate_xs__attribute(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_xs__attribute(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_xs__element
#define SOAP_TYPE_xs__element (32)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_xs__element(struct soap*, const char*, int, const xs__element *, const char*);
SOAP_FMAC3 xs__element * SOAP_FMAC4 soap_in_xs__element(struct soap*, const char*, xs__element *, const char*);

#ifndef soap_write_xs__element
#define soap_write_xs__element(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "xs:element", NULL) || soap_end_send(soap) )
#endif


#ifndef soap_read_xs__element
#define soap_read_xs__element(soap, data) ( soap_begin_recv(soap) || !soap_get_xs__element(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 xs__element * SOAP_FMAC4 soap_get_xs__element(struct soap*, xs__element *, const char*, const char*);

#define soap_new_xs__element(soap, n) soap_instantiate_xs__element(soap, n, NULL, NULL, NULL)


#define soap_delete_xs__element(soap, p) soap_delete(soap, p)

SOAP_FMAC1 xs__element * SOAP_FMAC2 soap_instantiate_xs__element(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_xs__element(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_xs__annotation
#define SOAP_TYPE_xs__annotation (30)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_xs__annotation(struct soap*, const char*, int, const xs__annotation *, const char*);
SOAP_FMAC3 xs__annotation * SOAP_FMAC4 soap_in_xs__annotation(struct soap*, const char*, xs__annotation *, const char*);

#ifndef soap_write_xs__annotation
#define soap_write_xs__annotation(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "xs:annotation", NULL) || soap_end_send(soap) )
#endif


#ifndef soap_read_xs__annotation
#define soap_read_xs__annotation(soap, data) ( soap_begin_recv(soap) || !soap_get_xs__annotation(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 xs__annotation * SOAP_FMAC4 soap_get_xs__annotation(struct soap*, xs__annotation *, const char*, const char*);

#define soap_new_xs__annotation(soap, n) soap_instantiate_xs__annotation(soap, n, NULL, NULL, NULL)


#define soap_delete_xs__annotation(soap, p) soap_delete(soap, p)

SOAP_FMAC1 xs__annotation * SOAP_FMAC2 soap_instantiate_xs__annotation(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_xs__annotation(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_xs__union
#define SOAP_TYPE_xs__union (29)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_xs__union(struct soap*, const char*, int, const xs__union *, const char*);
SOAP_FMAC3 xs__union * SOAP_FMAC4 soap_in_xs__union(struct soap*, const char*, xs__union *, const char*);

#ifndef soap_write_xs__union
#define soap_write_xs__union(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "xs:union", NULL) || soap_end_send(soap) )
#endif


#ifndef soap_read_xs__union
#define soap_read_xs__union(soap, data) ( soap_begin_recv(soap) || !soap_get_xs__union(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 xs__union * SOAP_FMAC4 soap_get_xs__union(struct soap*, xs__union *, const char*, const char*);

#define soap_new_xs__union(soap, n) soap_instantiate_xs__union(soap, n, NULL, NULL, NULL)


#define soap_delete_xs__union(soap, p) soap_delete(soap, p)

SOAP_FMAC1 xs__union * SOAP_FMAC2 soap_instantiate_xs__union(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_xs__union(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_xs__list
#define SOAP_TYPE_xs__list (28)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_xs__list(struct soap*, const char*, int, const xs__list *, const char*);
SOAP_FMAC3 xs__list * SOAP_FMAC4 soap_in_xs__list(struct soap*, const char*, xs__list *, const char*);

#ifndef soap_write_xs__list
#define soap_write_xs__list(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "xs:list", NULL) || soap_end_send(soap) )
#endif


#ifndef soap_read_xs__list
#define soap_read_xs__list(soap, data) ( soap_begin_recv(soap) || !soap_get_xs__list(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 xs__list * SOAP_FMAC4 soap_get_xs__list(struct soap*, xs__list *, const char*, const char*);

#define soap_new_xs__list(soap, n) soap_instantiate_xs__list(soap, n, NULL, NULL, NULL)


#define soap_delete_xs__list(soap, p) soap_delete(soap, p)

SOAP_FMAC1 xs__list * SOAP_FMAC2 soap_instantiate_xs__list(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_xs__list(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_xs__group
#define SOAP_TYPE_xs__group (27)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_xs__group(struct soap*, const char*, int, const xs__group *, const char*);
SOAP_FMAC3 xs__group * SOAP_FMAC4 soap_in_xs__group(struct soap*, const char*, xs__group *, const char*);

#ifndef soap_write_xs__group
#define soap_write_xs__group(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "xs:group", NULL) || soap_end_send(soap) )
#endif


#ifndef soap_read_xs__group
#define soap_read_xs__group(soap, data) ( soap_begin_recv(soap) || !soap_get_xs__group(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 xs__group * SOAP_FMAC4 soap_get_xs__group(struct soap*, xs__group *, const char*, const char*);

#define soap_new_xs__group(soap, n) soap_instantiate_xs__group(soap, n, NULL, NULL, NULL)


#define soap_delete_xs__group(soap, p) soap_delete(soap, p)

SOAP_FMAC1 xs__group * SOAP_FMAC2 soap_instantiate_xs__group(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_xs__group(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_xs__seqchoice
#define SOAP_TYPE_xs__seqchoice (26)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_xs__seqchoice(struct soap*, const char*, int, const xs__seqchoice *, const char*);
SOAP_FMAC3 xs__seqchoice * SOAP_FMAC4 soap_in_xs__seqchoice(struct soap*, const char*, xs__seqchoice *, const char*);

#ifndef soap_write_xs__seqchoice
#define soap_write_xs__seqchoice(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "xs:seqchoice", NULL) || soap_end_send(soap) )
#endif


#ifndef soap_read_xs__seqchoice
#define soap_read_xs__seqchoice(soap, data) ( soap_begin_recv(soap) || !soap_get_xs__seqchoice(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 xs__seqchoice * SOAP_FMAC4 soap_get_xs__seqchoice(struct soap*, xs__seqchoice *, const char*, const char*);

#define soap_new_xs__seqchoice(soap, n) soap_instantiate_xs__seqchoice(soap, n, NULL, NULL, NULL)


#define soap_delete_xs__seqchoice(soap, p) soap_delete(soap, p)

SOAP_FMAC1 xs__seqchoice * SOAP_FMAC2 soap_instantiate_xs__seqchoice(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_xs__seqchoice(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_xs__restriction
#define SOAP_TYPE_xs__restriction (25)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_xs__restriction(struct soap*, const char*, int, const xs__restriction *, const char*);
SOAP_FMAC3 xs__restriction * SOAP_FMAC4 soap_in_xs__restriction(struct soap*, const char*, xs__restriction *, const char*);

#ifndef soap_write_xs__restriction
#define soap_write_xs__restriction(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "xs:restriction", NULL) || soap_end_send(soap) )
#endif


#ifndef soap_read_xs__restriction
#define soap_read_xs__restriction(soap, data) ( soap_begin_recv(soap) || !soap_get_xs__restriction(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 xs__restriction * SOAP_FMAC4 soap_get_xs__restriction(struct soap*, xs__restriction *, const char*, const char*);

#define soap_new_xs__restriction(soap, n) soap_instantiate_xs__restriction(soap, n, NULL, NULL, NULL)


#define soap_delete_xs__restriction(soap, p) soap_delete(soap, p)

SOAP_FMAC1 xs__restriction * SOAP_FMAC2 soap_instantiate_xs__restriction(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_xs__restriction(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_xs__extension
#define SOAP_TYPE_xs__extension (24)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_xs__extension(struct soap*, const char*, int, const xs__extension *, const char*);
SOAP_FMAC3 xs__extension * SOAP_FMAC4 soap_in_xs__extension(struct soap*, const char*, xs__extension *, const char*);

#ifndef soap_write_xs__extension
#define soap_write_xs__extension(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "xs:extension", NULL) || soap_end_send(soap) )
#endif


#ifndef soap_read_xs__extension
#define soap_read_xs__extension(soap, data) ( soap_begin_recv(soap) || !soap_get_xs__extension(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 xs__extension * SOAP_FMAC4 soap_get_xs__extension(struct soap*, xs__extension *, const char*, const char*);

#define soap_new_xs__extension(soap, n) soap_instantiate_xs__extension(soap, n, NULL, NULL, NULL)


#define soap_delete_xs__extension(soap, p) soap_delete(soap, p)

SOAP_FMAC1 xs__extension * SOAP_FMAC2 soap_instantiate_xs__extension(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_xs__extension(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_xs__complexType
#define SOAP_TYPE_xs__complexType (23)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_xs__complexType(struct soap*, const char*, int, const xs__complexType *, const char*);
SOAP_FMAC3 xs__complexType * SOAP_FMAC4 soap_in_xs__complexType(struct soap*, const char*, xs__complexType *, const char*);

#ifndef soap_write_xs__complexType
#define soap_write_xs__complexType(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "xs:complexType", NULL) || soap_end_send(soap) )
#endif


#ifndef soap_read_xs__complexType
#define soap_read_xs__complexType(soap, data) ( soap_begin_recv(soap) || !soap_get_xs__complexType(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 xs__complexType * SOAP_FMAC4 soap_get_xs__complexType(struct soap*, xs__complexType *, const char*, const char*);

#define soap_new_xs__complexType(soap, n) soap_instantiate_xs__complexType(soap, n, NULL, NULL, NULL)


#define soap_delete_xs__complexType(soap, p) soap_delete(soap, p)

SOAP_FMAC1 xs__complexType * SOAP_FMAC2 soap_instantiate_xs__complexType(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_xs__complexType(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_xs__simpleType
#define SOAP_TYPE_xs__simpleType (22)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_xs__simpleType(struct soap*, const char*, int, const xs__simpleType *, const char*);
SOAP_FMAC3 xs__simpleType * SOAP_FMAC4 soap_in_xs__simpleType(struct soap*, const char*, xs__simpleType *, const char*);

#ifndef soap_write_xs__simpleType
#define soap_write_xs__simpleType(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "xs:simpleType", NULL) || soap_end_send(soap) )
#endif


#ifndef soap_read_xs__simpleType
#define soap_read_xs__simpleType(soap, data) ( soap_begin_recv(soap) || !soap_get_xs__simpleType(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 xs__simpleType * SOAP_FMAC4 soap_get_xs__simpleType(struct soap*, xs__simpleType *, const char*, const char*);

#define soap_new_xs__simpleType(soap, n) soap_instantiate_xs__simpleType(soap, n, NULL, NULL, NULL)


#define soap_delete_xs__simpleType(soap, p) soap_delete(soap, p)

SOAP_FMAC1 xs__simpleType * SOAP_FMAC2 soap_instantiate_xs__simpleType(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_xs__simpleType(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_xs__schema
#define SOAP_TYPE_xs__schema (21)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_xs__schema(struct soap*, const char*, int, const xs__schema *, const char*);
SOAP_FMAC3 xs__schema * SOAP_FMAC4 soap_in_xs__schema(struct soap*, const char*, xs__schema *, const char*);

#ifndef soap_write_xs__schema
#define soap_write_xs__schema(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "xs:schema", NULL) || soap_end_send(soap) )
#endif


#ifndef soap_read_xs__schema
#define soap_read_xs__schema(soap, data) ( soap_begin_recv(soap) || !soap_get_xs__schema(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 xs__schema * SOAP_FMAC4 soap_get_xs__schema(struct soap*, xs__schema *, const char*, const char*);

#define soap_new_xs__schema(soap, n) soap_instantiate_xs__schema(soap, n, NULL, NULL, NULL)


#define soap_delete_xs__schema(soap, p) soap_delete(soap, p)

SOAP_FMAC1 xs__schema * SOAP_FMAC2 soap_instantiate_xs__schema(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_xs__schema(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Fault
#define SOAP_TYPE_SOAP_ENV__Fault (436)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Fault(struct soap*, struct SOAP_ENV__Fault *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Fault(struct soap*, const struct SOAP_ENV__Fault *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Fault(struct soap*, const char*, int, const struct SOAP_ENV__Fault *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Fault * SOAP_FMAC4 soap_in_SOAP_ENV__Fault(struct soap*, const char*, struct SOAP_ENV__Fault *, const char*);

#ifndef soap_write_SOAP_ENV__Fault
#define soap_write_SOAP_ENV__Fault(soap, data) ( soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Fault(soap, data), 0) || soap_put_SOAP_ENV__Fault(soap, data, "SOAP-ENV:Fault", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Fault(struct soap*, const struct SOAP_ENV__Fault *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Fault
#define soap_read_SOAP_ENV__Fault(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Fault(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct SOAP_ENV__Fault * SOAP_FMAC4 soap_get_SOAP_ENV__Fault(struct soap*, struct SOAP_ENV__Fault *, const char*, const char*);

#define soap_new_SOAP_ENV__Fault(soap, n) soap_instantiate_SOAP_ENV__Fault(soap, n, NULL, NULL, NULL)


#define soap_delete_SOAP_ENV__Fault(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct SOAP_ENV__Fault * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Fault(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Fault(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Reason
#define SOAP_TYPE_SOAP_ENV__Reason (435)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Reason(struct soap*, const struct SOAP_ENV__Reason *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Reason(struct soap*, const char*, int, const struct SOAP_ENV__Reason *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Reason * SOAP_FMAC4 soap_in_SOAP_ENV__Reason(struct soap*, const char*, struct SOAP_ENV__Reason *, const char*);

#ifndef soap_write_SOAP_ENV__Reason
#define soap_write_SOAP_ENV__Reason(soap, data) ( soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Reason(soap, data), 0) || soap_put_SOAP_ENV__Reason(soap, data, "SOAP-ENV:Reason", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Reason(struct soap*, const struct SOAP_ENV__Reason *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Reason
#define soap_read_SOAP_ENV__Reason(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Reason(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct SOAP_ENV__Reason * SOAP_FMAC4 soap_get_SOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *, const char*, const char*);

#define soap_new_SOAP_ENV__Reason(soap, n) soap_instantiate_SOAP_ENV__Reason(soap, n, NULL, NULL, NULL)


#define soap_delete_SOAP_ENV__Reason(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct SOAP_ENV__Reason * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Reason(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Reason(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Detail
#define SOAP_TYPE_SOAP_ENV__Detail (434)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Detail(struct soap*, const struct SOAP_ENV__Detail *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Detail(struct soap*, const char*, int, const struct SOAP_ENV__Detail *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Detail * SOAP_FMAC4 soap_in_SOAP_ENV__Detail(struct soap*, const char*, struct SOAP_ENV__Detail *, const char*);

#ifndef soap_write_SOAP_ENV__Detail
#define soap_write_SOAP_ENV__Detail(soap, data) ( soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Detail(soap, data), 0) || soap_put_SOAP_ENV__Detail(soap, data, "SOAP-ENV:Detail", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Detail(struct soap*, const struct SOAP_ENV__Detail *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Detail
#define soap_read_SOAP_ENV__Detail(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Detail(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct SOAP_ENV__Detail * SOAP_FMAC4 soap_get_SOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *, const char*, const char*);

#define soap_new_SOAP_ENV__Detail(soap, n) soap_instantiate_SOAP_ENV__Detail(soap, n, NULL, NULL, NULL)


#define soap_delete_SOAP_ENV__Detail(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct SOAP_ENV__Detail * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Detail(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Detail(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Code
#define SOAP_TYPE_SOAP_ENV__Code (432)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Code(struct soap*, const struct SOAP_ENV__Code *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Code(struct soap*, const char*, int, const struct SOAP_ENV__Code *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Code * SOAP_FMAC4 soap_in_SOAP_ENV__Code(struct soap*, const char*, struct SOAP_ENV__Code *, const char*);

#ifndef soap_write_SOAP_ENV__Code
#define soap_write_SOAP_ENV__Code(soap, data) ( soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Code(soap, data), 0) || soap_put_SOAP_ENV__Code(soap, data, "SOAP-ENV:Code", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Code(struct soap*, const struct SOAP_ENV__Code *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Code
#define soap_read_SOAP_ENV__Code(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Code(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct SOAP_ENV__Code * SOAP_FMAC4 soap_get_SOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *, const char*, const char*);

#define soap_new_SOAP_ENV__Code(soap, n) soap_instantiate_SOAP_ENV__Code(soap, n, NULL, NULL, NULL)


#define soap_delete_SOAP_ENV__Code(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct SOAP_ENV__Code * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Code(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Code(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Header
#define SOAP_TYPE_SOAP_ENV__Header (431)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Header(struct soap*, struct SOAP_ENV__Header *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Header(struct soap*, const struct SOAP_ENV__Header *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Header(struct soap*, const char*, int, const struct SOAP_ENV__Header *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Header * SOAP_FMAC4 soap_in_SOAP_ENV__Header(struct soap*, const char*, struct SOAP_ENV__Header *, const char*);

#ifndef soap_write_SOAP_ENV__Header
#define soap_write_SOAP_ENV__Header(soap, data) ( soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Header(soap, data), 0) || soap_put_SOAP_ENV__Header(soap, data, "SOAP-ENV:Header", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Header(struct soap*, const struct SOAP_ENV__Header *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Header
#define soap_read_SOAP_ENV__Header(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Header(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct SOAP_ENV__Header * SOAP_FMAC4 soap_get_SOAP_ENV__Header(struct soap*, struct SOAP_ENV__Header *, const char*, const char*);

#define soap_new_SOAP_ENV__Header(soap, n) soap_instantiate_SOAP_ENV__Header(soap, n, NULL, NULL, NULL)


#define soap_delete_SOAP_ENV__Header(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct SOAP_ENV__Header * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Header(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Header(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef SOAP_TYPE_xs__union_content
#define SOAP_TYPE_xs__union_content (82)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_xs__union_content(struct soap*, int, const union xs__union_content *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_xs__union_content(struct soap*, int, const union xs__union_content *);
SOAP_FMAC3 union xs__union_content * SOAP_FMAC4 soap_in_xs__union_content(struct soap*, int*, union xs__union_content *);

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Reason
#define SOAP_TYPE_PointerToSOAP_ENV__Reason (438)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Reason(struct soap*, const char *, int, struct SOAP_ENV__Reason *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Reason ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Reason(struct soap*, const char*, struct SOAP_ENV__Reason **, const char*);

#ifndef soap_write_PointerToSOAP_ENV__Reason
#define soap_write_PointerToSOAP_ENV__Reason(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerToSOAP_ENV__Reason(soap, data), 0) || soap_put_PointerToSOAP_ENV__Reason(soap, data, "SOAP-ENV:Reason", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *const*, const char*, const char*);

#ifndef soap_read_PointerToSOAP_ENV__Reason
#define soap_read_PointerToSOAP_ENV__Reason(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToSOAP_ENV__Reason(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct SOAP_ENV__Reason ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason **, const char*, const char*);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Detail
#define SOAP_TYPE_PointerToSOAP_ENV__Detail (437)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Detail(struct soap*, const char *, int, struct SOAP_ENV__Detail *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Detail ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Detail(struct soap*, const char*, struct SOAP_ENV__Detail **, const char*);

#ifndef soap_write_PointerToSOAP_ENV__Detail
#define soap_write_PointerToSOAP_ENV__Detail(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerToSOAP_ENV__Detail(soap, data), 0) || soap_put_PointerToSOAP_ENV__Detail(soap, data, "SOAP-ENV:Detail", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *const*, const char*, const char*);

#ifndef soap_read_PointerToSOAP_ENV__Detail
#define soap_read_PointerToSOAP_ENV__Detail(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToSOAP_ENV__Detail(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct SOAP_ENV__Detail ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail **, const char*, const char*);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Code
#define SOAP_TYPE_PointerToSOAP_ENV__Code (433)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Code(struct soap*, const char *, int, struct SOAP_ENV__Code *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Code ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Code(struct soap*, const char*, struct SOAP_ENV__Code **, const char*);

#ifndef soap_write_PointerToSOAP_ENV__Code
#define soap_write_PointerToSOAP_ENV__Code(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerToSOAP_ENV__Code(soap, data), 0) || soap_put_PointerToSOAP_ENV__Code(soap, data, "SOAP-ENV:Code", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *const*, const char*, const char*);

#ifndef soap_read_PointerToSOAP_ENV__Code
#define soap_read_PointerToSOAP_ENV__Code(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToSOAP_ENV__Code(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct SOAP_ENV__Code ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code **, const char*, const char*);

#endif

#ifndef SOAP_TYPE_PointerTowsdl__types
#define SOAP_TYPE_PointerTowsdl__types (398)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowsdl__types(struct soap*, wsdl__types *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowsdl__types(struct soap*, const char *, int, wsdl__types *const*, const char *);
SOAP_FMAC3 wsdl__types ** SOAP_FMAC4 soap_in_PointerTowsdl__types(struct soap*, const char*, wsdl__types **, const char*);

#ifndef soap_write_PointerTowsdl__types
#define soap_write_PointerTowsdl__types(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTowsdl__types(soap, data), 0) || soap_put_PointerTowsdl__types(soap, data, "wsdl:types", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowsdl__types(struct soap*, wsdl__types *const*, const char*, const char*);

#ifndef soap_read_PointerTowsdl__types
#define soap_read_PointerTowsdl__types(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTowsdl__types(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 wsdl__types ** SOAP_FMAC4 soap_get_PointerTowsdl__types(struct soap*, wsdl__types **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTowsdl__binding
#define SOAP_TYPE_PointerTowsdl__binding (388)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowsdl__binding(struct soap*, wsdl__binding *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowsdl__binding(struct soap*, const char *, int, wsdl__binding *const*, const char *);
SOAP_FMAC3 wsdl__binding ** SOAP_FMAC4 soap_in_PointerTowsdl__binding(struct soap*, const char*, wsdl__binding **, const char*);

#ifndef soap_write_PointerTowsdl__binding
#define soap_write_PointerTowsdl__binding(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTowsdl__binding(soap, data), 0) || soap_put_PointerTowsdl__binding(soap, data, "wsdl:binding", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowsdl__binding(struct soap*, wsdl__binding *const*, const char*, const char*);

#ifndef soap_read_PointerTowsdl__binding
#define soap_read_PointerTowsdl__binding(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTowsdl__binding(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 wsdl__binding ** SOAP_FMAC4 soap_get_PointerTowsdl__binding(struct soap*, wsdl__binding **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTohttp__address
#define SOAP_TYPE_PointerTohttp__address (387)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTohttp__address(struct soap*, http__address *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTohttp__address(struct soap*, const char *, int, http__address *const*, const char *);
SOAP_FMAC3 http__address ** SOAP_FMAC4 soap_in_PointerTohttp__address(struct soap*, const char*, http__address **, const char*);

#ifndef soap_write_PointerTohttp__address
#define soap_write_PointerTohttp__address(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTohttp__address(soap, data), 0) || soap_put_PointerTohttp__address(soap, data, "http:address", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTohttp__address(struct soap*, http__address *const*, const char*, const char*);

#ifndef soap_read_PointerTohttp__address
#define soap_read_PointerTohttp__address(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTohttp__address(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 http__address ** SOAP_FMAC4 soap_get_PointerTohttp__address(struct soap*, http__address **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTosoap__address
#define SOAP_TYPE_PointerTosoap__address (386)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTosoap__address(struct soap*, soap__address *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTosoap__address(struct soap*, const char *, int, soap__address *const*, const char *);
SOAP_FMAC3 soap__address ** SOAP_FMAC4 soap_in_PointerTosoap__address(struct soap*, const char*, soap__address **, const char*);

#ifndef soap_write_PointerTosoap__address
#define soap_write_PointerTosoap__address(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTosoap__address(soap, data), 0) || soap_put_PointerTosoap__address(soap, data, "soap:address", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTosoap__address(struct soap*, soap__address *const*, const char*, const char*);

#ifndef soap_read_PointerTosoap__address
#define soap_read_PointerTosoap__address(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTosoap__address(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 soap__address ** SOAP_FMAC4 soap_get_PointerTosoap__address(struct soap*, soap__address **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTowsdl__portType
#define SOAP_TYPE_PointerTowsdl__portType (380)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowsdl__portType(struct soap*, wsdl__portType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowsdl__portType(struct soap*, const char *, int, wsdl__portType *const*, const char *);
SOAP_FMAC3 wsdl__portType ** SOAP_FMAC4 soap_in_PointerTowsdl__portType(struct soap*, const char*, wsdl__portType **, const char*);

#ifndef soap_write_PointerTowsdl__portType
#define soap_write_PointerTowsdl__portType(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTowsdl__portType(soap, data), 0) || soap_put_PointerTowsdl__portType(soap, data, "wsdl:portType", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowsdl__portType(struct soap*, wsdl__portType *const*, const char*, const char*);

#ifndef soap_read_PointerTowsdl__portType
#define soap_read_PointerTowsdl__portType(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTowsdl__portType(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 wsdl__portType ** SOAP_FMAC4 soap_get_PointerTowsdl__portType(struct soap*, wsdl__portType **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTohttp__binding
#define SOAP_TYPE_PointerTohttp__binding (378)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTohttp__binding(struct soap*, http__binding *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTohttp__binding(struct soap*, const char *, int, http__binding *const*, const char *);
SOAP_FMAC3 http__binding ** SOAP_FMAC4 soap_in_PointerTohttp__binding(struct soap*, const char*, http__binding **, const char*);

#ifndef soap_write_PointerTohttp__binding
#define soap_write_PointerTohttp__binding(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTohttp__binding(soap, data), 0) || soap_put_PointerTohttp__binding(soap, data, "http:binding", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTohttp__binding(struct soap*, http__binding *const*, const char*, const char*);

#ifndef soap_read_PointerTohttp__binding
#define soap_read_PointerTohttp__binding(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTohttp__binding(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 http__binding ** SOAP_FMAC4 soap_get_PointerTohttp__binding(struct soap*, http__binding **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTosoap__binding
#define SOAP_TYPE_PointerTosoap__binding (377)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTosoap__binding(struct soap*, soap__binding *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTosoap__binding(struct soap*, const char *, int, soap__binding *const*, const char *);
SOAP_FMAC3 soap__binding ** SOAP_FMAC4 soap_in_PointerTosoap__binding(struct soap*, const char*, soap__binding **, const char*);

#ifndef soap_write_PointerTosoap__binding
#define soap_write_PointerTosoap__binding(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTosoap__binding(soap, data), 0) || soap_put_PointerTosoap__binding(soap, data, "soap:binding", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTosoap__binding(struct soap*, soap__binding *const*, const char*, const char*);

#ifndef soap_read_PointerTosoap__binding
#define soap_read_PointerTosoap__binding(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTosoap__binding(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 soap__binding ** SOAP_FMAC4 soap_get_PointerTosoap__binding(struct soap*, soap__binding **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTowsdl__ext_output
#define SOAP_TYPE_PointerTowsdl__ext_output (368)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowsdl__ext_output(struct soap*, wsdl__ext_output *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowsdl__ext_output(struct soap*, const char *, int, wsdl__ext_output *const*, const char *);
SOAP_FMAC3 wsdl__ext_output ** SOAP_FMAC4 soap_in_PointerTowsdl__ext_output(struct soap*, const char*, wsdl__ext_output **, const char*);

#ifndef soap_write_PointerTowsdl__ext_output
#define soap_write_PointerTowsdl__ext_output(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTowsdl__ext_output(soap, data), 0) || soap_put_PointerTowsdl__ext_output(soap, data, "wsdl:ext-output", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowsdl__ext_output(struct soap*, wsdl__ext_output *const*, const char*, const char*);

#ifndef soap_read_PointerTowsdl__ext_output
#define soap_read_PointerTowsdl__ext_output(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTowsdl__ext_output(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 wsdl__ext_output ** SOAP_FMAC4 soap_get_PointerTowsdl__ext_output(struct soap*, wsdl__ext_output **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTowsdl__ext_input
#define SOAP_TYPE_PointerTowsdl__ext_input (367)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowsdl__ext_input(struct soap*, wsdl__ext_input *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowsdl__ext_input(struct soap*, const char *, int, wsdl__ext_input *const*, const char *);
SOAP_FMAC3 wsdl__ext_input ** SOAP_FMAC4 soap_in_PointerTowsdl__ext_input(struct soap*, const char*, wsdl__ext_input **, const char*);

#ifndef soap_write_PointerTowsdl__ext_input
#define soap_write_PointerTowsdl__ext_input(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTowsdl__ext_input(soap, data), 0) || soap_put_PointerTowsdl__ext_input(soap, data, "wsdl:ext-input", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowsdl__ext_input(struct soap*, wsdl__ext_input *const*, const char*, const char*);

#ifndef soap_read_PointerTowsdl__ext_input
#define soap_read_PointerTowsdl__ext_input(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTowsdl__ext_input(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 wsdl__ext_input ** SOAP_FMAC4 soap_get_PointerTowsdl__ext_input(struct soap*, wsdl__ext_input **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTohttp__operation
#define SOAP_TYPE_PointerTohttp__operation (366)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTohttp__operation(struct soap*, http__operation *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTohttp__operation(struct soap*, const char *, int, http__operation *const*, const char *);
SOAP_FMAC3 http__operation ** SOAP_FMAC4 soap_in_PointerTohttp__operation(struct soap*, const char*, http__operation **, const char*);

#ifndef soap_write_PointerTohttp__operation
#define soap_write_PointerTohttp__operation(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTohttp__operation(soap, data), 0) || soap_put_PointerTohttp__operation(soap, data, "http:operation", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTohttp__operation(struct soap*, http__operation *const*, const char*, const char*);

#ifndef soap_read_PointerTohttp__operation
#define soap_read_PointerTohttp__operation(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTohttp__operation(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 http__operation ** SOAP_FMAC4 soap_get_PointerTohttp__operation(struct soap*, http__operation **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTosoap__operation
#define SOAP_TYPE_PointerTosoap__operation (365)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTosoap__operation(struct soap*, soap__operation *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTosoap__operation(struct soap*, const char *, int, soap__operation *const*, const char *);
SOAP_FMAC3 soap__operation ** SOAP_FMAC4 soap_in_PointerTosoap__operation(struct soap*, const char*, soap__operation **, const char*);

#ifndef soap_write_PointerTosoap__operation
#define soap_write_PointerTosoap__operation(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTosoap__operation(soap, data), 0) || soap_put_PointerTosoap__operation(soap, data, "soap:operation", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTosoap__operation(struct soap*, soap__operation *const*, const char*, const char*);

#ifndef soap_read_PointerTosoap__operation
#define soap_read_PointerTosoap__operation(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTosoap__operation(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 soap__operation ** SOAP_FMAC4 soap_get_PointerTosoap__operation(struct soap*, soap__operation **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTosoap__fault
#define SOAP_TYPE_PointerTosoap__fault (359)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTosoap__fault(struct soap*, soap__fault *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTosoap__fault(struct soap*, const char *, int, soap__fault *const*, const char *);
SOAP_FMAC3 soap__fault ** SOAP_FMAC4 soap_in_PointerTosoap__fault(struct soap*, const char*, soap__fault **, const char*);

#ifndef soap_write_PointerTosoap__fault
#define soap_write_PointerTosoap__fault(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTosoap__fault(soap, data), 0) || soap_put_PointerTosoap__fault(soap, data, "soap:fault", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTosoap__fault(struct soap*, soap__fault *const*, const char*, const char*);

#ifndef soap_read_PointerTosoap__fault
#define soap_read_PointerTosoap__fault(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTosoap__fault(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 soap__fault ** SOAP_FMAC4 soap_get_PointerTosoap__fault(struct soap*, soap__fault **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTomime__mimeXml
#define SOAP_TYPE_PointerTomime__mimeXml (354)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTomime__mimeXml(struct soap*, mime__mimeXml *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTomime__mimeXml(struct soap*, const char *, int, mime__mimeXml *const*, const char *);
SOAP_FMAC3 mime__mimeXml ** SOAP_FMAC4 soap_in_PointerTomime__mimeXml(struct soap*, const char*, mime__mimeXml **, const char*);

#ifndef soap_write_PointerTomime__mimeXml
#define soap_write_PointerTomime__mimeXml(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTomime__mimeXml(soap, data), 0) || soap_put_PointerTomime__mimeXml(soap, data, "mime:mimeXml", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTomime__mimeXml(struct soap*, mime__mimeXml *const*, const char*, const char*);

#ifndef soap_read_PointerTomime__mimeXml
#define soap_read_PointerTomime__mimeXml(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTomime__mimeXml(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 mime__mimeXml ** SOAP_FMAC4 soap_get_PointerTomime__mimeXml(struct soap*, mime__mimeXml **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTomime__content
#define SOAP_TYPE_PointerTomime__content (353)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTomime__content(struct soap*, mime__content *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTomime__content(struct soap*, const char *, int, mime__content *const*, const char *);
SOAP_FMAC3 mime__content ** SOAP_FMAC4 soap_in_PointerTomime__content(struct soap*, const char*, mime__content **, const char*);

#ifndef soap_write_PointerTomime__content
#define soap_write_PointerTomime__content(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTomime__content(soap, data), 0) || soap_put_PointerTomime__content(soap, data, "mime:content", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTomime__content(struct soap*, mime__content *const*, const char*, const char*);

#ifndef soap_read_PointerTomime__content
#define soap_read_PointerTomime__content(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTomime__content(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 mime__content ** SOAP_FMAC4 soap_get_PointerTomime__content(struct soap*, mime__content **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTomime__multipartRelated
#define SOAP_TYPE_PointerTomime__multipartRelated (352)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTomime__multipartRelated(struct soap*, mime__multipartRelated *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTomime__multipartRelated(struct soap*, const char *, int, mime__multipartRelated *const*, const char *);
SOAP_FMAC3 mime__multipartRelated ** SOAP_FMAC4 soap_in_PointerTomime__multipartRelated(struct soap*, const char*, mime__multipartRelated **, const char*);

#ifndef soap_write_PointerTomime__multipartRelated
#define soap_write_PointerTomime__multipartRelated(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTomime__multipartRelated(soap, data), 0) || soap_put_PointerTomime__multipartRelated(soap, data, "mime:multipartRelated", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTomime__multipartRelated(struct soap*, mime__multipartRelated *const*, const char*, const char*);

#ifndef soap_read_PointerTomime__multipartRelated
#define soap_read_PointerTomime__multipartRelated(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTomime__multipartRelated(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 mime__multipartRelated ** SOAP_FMAC4 soap_get_PointerTomime__multipartRelated(struct soap*, mime__multipartRelated **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTodime__message
#define SOAP_TYPE_PointerTodime__message (351)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTodime__message(struct soap*, dime__message *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTodime__message(struct soap*, const char *, int, dime__message *const*, const char *);
SOAP_FMAC3 dime__message ** SOAP_FMAC4 soap_in_PointerTodime__message(struct soap*, const char*, dime__message **, const char*);

#ifndef soap_write_PointerTodime__message
#define soap_write_PointerTodime__message(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTodime__message(soap, data), 0) || soap_put_PointerTodime__message(soap, data, "dime:message", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTodime__message(struct soap*, dime__message *const*, const char*, const char*);

#ifndef soap_read_PointerTodime__message
#define soap_read_PointerTodime__message(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTodime__message(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 dime__message ** SOAP_FMAC4 soap_get_PointerTodime__message(struct soap*, dime__message **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTowsdl__output
#define SOAP_TYPE_PointerTowsdl__output (344)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowsdl__output(struct soap*, wsdl__output *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowsdl__output(struct soap*, const char *, int, wsdl__output *const*, const char *);
SOAP_FMAC3 wsdl__output ** SOAP_FMAC4 soap_in_PointerTowsdl__output(struct soap*, const char*, wsdl__output **, const char*);

#ifndef soap_write_PointerTowsdl__output
#define soap_write_PointerTowsdl__output(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTowsdl__output(soap, data), 0) || soap_put_PointerTowsdl__output(soap, data, "wsdl:output", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowsdl__output(struct soap*, wsdl__output *const*, const char*, const char*);

#ifndef soap_read_PointerTowsdl__output
#define soap_read_PointerTowsdl__output(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTowsdl__output(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 wsdl__output ** SOAP_FMAC4 soap_get_PointerTowsdl__output(struct soap*, wsdl__output **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTowsdl__input
#define SOAP_TYPE_PointerTowsdl__input (343)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowsdl__input(struct soap*, wsdl__input *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowsdl__input(struct soap*, const char *, int, wsdl__input *const*, const char *);
SOAP_FMAC3 wsdl__input ** SOAP_FMAC4 soap_in_PointerTowsdl__input(struct soap*, const char*, wsdl__input **, const char*);

#ifndef soap_write_PointerTowsdl__input
#define soap_write_PointerTowsdl__input(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTowsdl__input(soap, data), 0) || soap_put_PointerTowsdl__input(soap, data, "wsdl:input", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowsdl__input(struct soap*, wsdl__input *const*, const char*, const char*);

#ifndef soap_read_PointerTowsdl__input
#define soap_read_PointerTowsdl__input(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTowsdl__input(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 wsdl__input ** SOAP_FMAC4 soap_get_PointerTowsdl__input(struct soap*, wsdl__input **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTowsdl__definitions
#define SOAP_TYPE_PointerTowsdl__definitions (305)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowsdl__definitions(struct soap*, wsdl__definitions *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowsdl__definitions(struct soap*, const char *, int, wsdl__definitions *const*, const char *);
SOAP_FMAC3 wsdl__definitions ** SOAP_FMAC4 soap_in_PointerTowsdl__definitions(struct soap*, const char*, wsdl__definitions **, const char*);

#ifndef soap_write_PointerTowsdl__definitions
#define soap_write_PointerTowsdl__definitions(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTowsdl__definitions(soap, data), 0) || soap_put_PointerTowsdl__definitions(soap, data, "wsdl:definitions", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowsdl__definitions(struct soap*, wsdl__definitions *const*, const char*, const char*);

#ifndef soap_read_PointerTowsdl__definitions
#define soap_read_PointerTowsdl__definitions(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTowsdl__definitions(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 wsdl__definitions ** SOAP_FMAC4 soap_get_PointerTowsdl__definitions(struct soap*, wsdl__definitions **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTowsp__AppliesTo
#define SOAP_TYPE_PointerTowsp__AppliesTo (302)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowsp__AppliesTo(struct soap*, wsp__AppliesTo *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowsp__AppliesTo(struct soap*, const char *, int, wsp__AppliesTo *const*, const char *);
SOAP_FMAC3 wsp__AppliesTo ** SOAP_FMAC4 soap_in_PointerTowsp__AppliesTo(struct soap*, const char*, wsp__AppliesTo **, const char*);

#ifndef soap_write_PointerTowsp__AppliesTo
#define soap_write_PointerTowsp__AppliesTo(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTowsp__AppliesTo(soap, data), 0) || soap_put_PointerTowsp__AppliesTo(soap, data, "wsp:AppliesTo", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowsp__AppliesTo(struct soap*, wsp__AppliesTo *const*, const char*, const char*);

#ifndef soap_read_PointerTowsp__AppliesTo
#define soap_read_PointerTowsp__AppliesTo(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTowsp__AppliesTo(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 wsp__AppliesTo ** SOAP_FMAC4 soap_get_PointerTowsp__AppliesTo(struct soap*, wsp__AppliesTo **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTowsrmp__RMAssertion
#define SOAP_TYPE_PointerTowsrmp__RMAssertion (294)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowsrmp__RMAssertion(struct soap*, wsrmp__RMAssertion *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowsrmp__RMAssertion(struct soap*, const char *, int, wsrmp__RMAssertion *const*, const char *);
SOAP_FMAC3 wsrmp__RMAssertion ** SOAP_FMAC4 soap_in_PointerTowsrmp__RMAssertion(struct soap*, const char*, wsrmp__RMAssertion **, const char*);

#ifndef soap_write_PointerTowsrmp__RMAssertion
#define soap_write_PointerTowsrmp__RMAssertion(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTowsrmp__RMAssertion(soap, data), 0) || soap_put_PointerTowsrmp__RMAssertion(soap, data, "wsrmp:RMAssertion", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowsrmp__RMAssertion(struct soap*, wsrmp__RMAssertion *const*, const char*, const char*);

#ifndef soap_read_PointerTowsrmp__RMAssertion
#define soap_read_PointerTowsrmp__RMAssertion(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTowsrmp__RMAssertion(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 wsrmp__RMAssertion ** SOAP_FMAC4 soap_get_PointerTowsrmp__RMAssertion(struct soap*, wsrmp__RMAssertion **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTowsp__Assertion
#define SOAP_TYPE_PointerTowsp__Assertion (293)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowsp__Assertion(struct soap*, wsp__Assertion *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowsp__Assertion(struct soap*, const char *, int, wsp__Assertion *const*, const char *);
SOAP_FMAC3 wsp__Assertion ** SOAP_FMAC4 soap_in_PointerTowsp__Assertion(struct soap*, const char*, wsp__Assertion **, const char*);

#ifndef soap_write_PointerTowsp__Assertion
#define soap_write_PointerTowsp__Assertion(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTowsp__Assertion(soap, data), 0) || soap_put_PointerTowsp__Assertion(soap, data, "wsp:Assertion", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowsp__Assertion(struct soap*, wsp__Assertion *const*, const char*, const char*);

#ifndef soap_read_PointerTowsp__Assertion
#define soap_read_PointerTowsp__Assertion(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTowsp__Assertion(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 wsp__Assertion ** SOAP_FMAC4 soap_get_PointerTowsp__Assertion(struct soap*, wsp__Assertion **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTosp__Token
#define SOAP_TYPE_PointerTosp__Token (292)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTosp__Token(struct soap*, sp__Token *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTosp__Token(struct soap*, const char *, int, sp__Token *const*, const char *);
SOAP_FMAC3 sp__Token ** SOAP_FMAC4 soap_in_PointerTosp__Token(struct soap*, const char*, sp__Token **, const char*);

#ifndef soap_write_PointerTosp__Token
#define soap_write_PointerTosp__Token(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTosp__Token(soap, data), 0) || soap_put_PointerTosp__Token(soap, data, "sp:Token", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTosp__Token(struct soap*, sp__Token *const*, const char*, const char*);

#ifndef soap_read_PointerTosp__Token
#define soap_read_PointerTosp__Token(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTosp__Token(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 sp__Token ** SOAP_FMAC4 soap_get_PointerTosp__Token(struct soap*, sp__Token **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTosp__Elements
#define SOAP_TYPE_PointerTosp__Elements (291)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTosp__Elements(struct soap*, sp__Elements *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTosp__Elements(struct soap*, const char *, int, sp__Elements *const*, const char *);
SOAP_FMAC3 sp__Elements ** SOAP_FMAC4 soap_in_PointerTosp__Elements(struct soap*, const char*, sp__Elements **, const char*);

#ifndef soap_write_PointerTosp__Elements
#define soap_write_PointerTosp__Elements(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTosp__Elements(soap, data), 0) || soap_put_PointerTosp__Elements(soap, data, "sp:Elements", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTosp__Elements(struct soap*, sp__Elements *const*, const char*, const char*);

#ifndef soap_read_PointerTosp__Elements
#define soap_read_PointerTosp__Elements(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTosp__Elements(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 sp__Elements ** SOAP_FMAC4 soap_get_PointerTosp__Elements(struct soap*, sp__Elements **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTowsp__PolicyReference
#define SOAP_TYPE_PointerTowsp__PolicyReference (288)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowsp__PolicyReference(struct soap*, wsp__PolicyReference *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowsp__PolicyReference(struct soap*, const char *, int, wsp__PolicyReference *const*, const char *);
SOAP_FMAC3 wsp__PolicyReference ** SOAP_FMAC4 soap_in_PointerTowsp__PolicyReference(struct soap*, const char*, wsp__PolicyReference **, const char*);

#ifndef soap_write_PointerTowsp__PolicyReference
#define soap_write_PointerTowsp__PolicyReference(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTowsp__PolicyReference(soap, data), 0) || soap_put_PointerTowsp__PolicyReference(soap, data, "wsp:PolicyReference", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowsp__PolicyReference(struct soap*, wsp__PolicyReference *const*, const char*, const char*);

#ifndef soap_read_PointerTowsp__PolicyReference
#define soap_read_PointerTowsp__PolicyReference(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTowsp__PolicyReference(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 wsp__PolicyReference ** SOAP_FMAC4 soap_get_PointerTowsp__PolicyReference(struct soap*, wsp__PolicyReference **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTowst__Claims
#define SOAP_TYPE_PointerTowst__Claims (286)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowst__Claims(struct soap*, wst__Claims *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowst__Claims(struct soap*, const char *, int, wst__Claims *const*, const char *);
SOAP_FMAC3 wst__Claims ** SOAP_FMAC4 soap_in_PointerTowst__Claims(struct soap*, const char*, wst__Claims **, const char*);

#ifndef soap_write_PointerTowst__Claims
#define soap_write_PointerTowst__Claims(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTowst__Claims(soap, data), 0) || soap_put_PointerTowst__Claims(soap, data, "wst:Claims", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowst__Claims(struct soap*, wst__Claims *const*, const char*, const char*);

#ifndef soap_read_PointerTowst__Claims
#define soap_read_PointerTowst__Claims(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTowst__Claims(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 wst__Claims ** SOAP_FMAC4 soap_get_PointerTowst__Claims(struct soap*, wst__Claims **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTowsa__EndpointReferenceType
#define SOAP_TYPE_PointerTowsa__EndpointReferenceType (285)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowsa__EndpointReferenceType(struct soap*, wsa__EndpointReferenceType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowsa__EndpointReferenceType(struct soap*, const char *, int, wsa__EndpointReferenceType *const*, const char *);
SOAP_FMAC3 wsa__EndpointReferenceType ** SOAP_FMAC4 soap_in_PointerTowsa__EndpointReferenceType(struct soap*, const char*, wsa__EndpointReferenceType **, const char*);

#ifndef soap_write_PointerTowsa__EndpointReferenceType
#define soap_write_PointerTowsa__EndpointReferenceType(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTowsa__EndpointReferenceType(soap, data), 0) || soap_put_PointerTowsa__EndpointReferenceType(soap, data, "wsa:EndpointReferenceType", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowsa__EndpointReferenceType(struct soap*, wsa__EndpointReferenceType *const*, const char*, const char*);

#ifndef soap_read_PointerTowsa__EndpointReferenceType
#define soap_read_PointerTowsa__EndpointReferenceType(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTowsa__EndpointReferenceType(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 wsa__EndpointReferenceType ** SOAP_FMAC4 soap_get_PointerTowsa__EndpointReferenceType(struct soap*, wsa__EndpointReferenceType **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTowsp__Content
#define SOAP_TYPE_PointerTowsp__Content (277)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowsp__Content(struct soap*, wsp__Content *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowsp__Content(struct soap*, const char *, int, wsp__Content *const*, const char *);
SOAP_FMAC3 wsp__Content ** SOAP_FMAC4 soap_in_PointerTowsp__Content(struct soap*, const char*, wsp__Content **, const char*);

#ifndef soap_write_PointerTowsp__Content
#define soap_write_PointerTowsp__Content(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTowsp__Content(soap, data), 0) || soap_put_PointerTowsp__Content(soap, data, "wsp:Content", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowsp__Content(struct soap*, wsp__Content *const*, const char*, const char*);

#ifndef soap_read_PointerTowsp__Content
#define soap_read_PointerTowsp__Content(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTowsp__Content(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 wsp__Content ** SOAP_FMAC4 soap_get_PointerTowsp__Content(struct soap*, wsp__Content **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTowsp__Policy
#define SOAP_TYPE_PointerTowsp__Policy (271)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowsp__Policy(struct soap*, wsp__Policy *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowsp__Policy(struct soap*, const char *, int, wsp__Policy *const*, const char *);
SOAP_FMAC3 wsp__Policy ** SOAP_FMAC4 soap_in_PointerTowsp__Policy(struct soap*, const char*, wsp__Policy **, const char*);

#ifndef soap_write_PointerTowsp__Policy
#define soap_write_PointerTowsp__Policy(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTowsp__Policy(soap, data), 0) || soap_put_PointerTowsp__Policy(soap, data, "wsp:Policy", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowsp__Policy(struct soap*, wsp__Policy *const*, const char*, const char*);

#ifndef soap_read_PointerTowsp__Policy
#define soap_read_PointerTowsp__Policy(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTowsp__Policy(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 wsp__Policy ** SOAP_FMAC4 soap_get_PointerTowsp__Policy(struct soap*, wsp__Policy **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTosd__staticServiceDataValues
#define SOAP_TYPE_PointerTosd__staticServiceDataValues (265)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTosd__staticServiceDataValues(struct soap*, sd__staticServiceDataValues *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTosd__staticServiceDataValues(struct soap*, const char *, int, sd__staticServiceDataValues *const*, const char *);
SOAP_FMAC3 sd__staticServiceDataValues ** SOAP_FMAC4 soap_in_PointerTosd__staticServiceDataValues(struct soap*, const char*, sd__staticServiceDataValues **, const char*);

#ifndef soap_write_PointerTosd__staticServiceDataValues
#define soap_write_PointerTosd__staticServiceDataValues(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTosd__staticServiceDataValues(soap, data), 0) || soap_put_PointerTosd__staticServiceDataValues(soap, data, "sd:staticServiceDataValues", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTosd__staticServiceDataValues(struct soap*, sd__staticServiceDataValues *const*, const char*, const char*);

#ifndef soap_read_PointerTosd__staticServiceDataValues
#define soap_read_PointerTosd__staticServiceDataValues(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTosd__staticServiceDataValues(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 sd__staticServiceDataValues ** SOAP_FMAC4 soap_get_PointerTosd__staticServiceDataValues(struct soap*, sd__staticServiceDataValues **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTowsdl__operation
#define SOAP_TYPE_PointerTowsdl__operation (262)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowsdl__operation(struct soap*, wsdl__operation *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowsdl__operation(struct soap*, const char *, int, wsdl__operation *const*, const char *);
SOAP_FMAC3 wsdl__operation ** SOAP_FMAC4 soap_in_PointerTowsdl__operation(struct soap*, const char*, wsdl__operation **, const char*);

#ifndef soap_write_PointerTowsdl__operation
#define soap_write_PointerTowsdl__operation(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTowsdl__operation(soap, data), 0) || soap_put_PointerTowsdl__operation(soap, data, "wsdl:operation", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowsdl__operation(struct soap*, wsdl__operation *const*, const char*, const char*);

#ifndef soap_read_PointerTowsdl__operation
#define soap_read_PointerTowsdl__operation(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTowsdl__operation(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 wsdl__operation ** SOAP_FMAC4 soap_get_PointerTowsdl__operation(struct soap*, wsdl__operation **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTosoap__body
#define SOAP_TYPE_PointerTosoap__body (244)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTosoap__body(struct soap*, soap__body *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTosoap__body(struct soap*, const char *, int, soap__body *const*, const char *);
SOAP_FMAC3 soap__body ** SOAP_FMAC4 soap_in_PointerTosoap__body(struct soap*, const char*, soap__body **, const char*);

#ifndef soap_write_PointerTosoap__body
#define soap_write_PointerTosoap__body(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTosoap__body(soap, data), 0) || soap_put_PointerTosoap__body(soap, data, "soap:body", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTosoap__body(struct soap*, soap__body *const*, const char*, const char*);

#ifndef soap_read_PointerTosoap__body
#define soap_read_PointerTosoap__body(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTosoap__body(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 soap__body ** SOAP_FMAC4 soap_get_PointerTosoap__body(struct soap*, soap__body **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTowsdl__part
#define SOAP_TYPE_PointerTowsdl__part (225)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowsdl__part(struct soap*, wsdl__part *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowsdl__part(struct soap*, const char *, int, wsdl__part *const*, const char *);
SOAP_FMAC3 wsdl__part ** SOAP_FMAC4 soap_in_PointerTowsdl__part(struct soap*, const char*, wsdl__part **, const char*);

#ifndef soap_write_PointerTowsdl__part
#define soap_write_PointerTowsdl__part(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTowsdl__part(soap, data), 0) || soap_put_PointerTowsdl__part(soap, data, "wsdl:part", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowsdl__part(struct soap*, wsdl__part *const*, const char*, const char*);

#ifndef soap_read_PointerTowsdl__part
#define soap_read_PointerTowsdl__part(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTowsdl__part(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 wsdl__part ** SOAP_FMAC4 soap_get_PointerTowsdl__part(struct soap*, wsdl__part **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTowsdl__message
#define SOAP_TYPE_PointerTowsdl__message (224)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTowsdl__message(struct soap*, wsdl__message *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTowsdl__message(struct soap*, const char *, int, wsdl__message *const*, const char *);
SOAP_FMAC3 wsdl__message ** SOAP_FMAC4 soap_in_PointerTowsdl__message(struct soap*, const char*, wsdl__message **, const char*);

#ifndef soap_write_PointerTowsdl__message
#define soap_write_PointerTowsdl__message(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTowsdl__message(soap, data), 0) || soap_put_PointerTowsdl__message(soap, data, "wsdl:message", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTowsdl__message(struct soap*, wsdl__message *const*, const char*, const char*);

#ifndef soap_read_PointerTowsdl__message
#define soap_read_PointerTowsdl__message(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTowsdl__message(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 wsdl__message ** SOAP_FMAC4 soap_get_PointerTowsdl__message(struct soap*, wsdl__message **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTosoap__styleChoice
#define SOAP_TYPE_PointerTosoap__styleChoice (218)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTosoap__styleChoice(struct soap*, enum soap__styleChoice *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTosoap__styleChoice(struct soap*, const char *, int, enum soap__styleChoice *const*, const char *);
SOAP_FMAC3 enum soap__styleChoice ** SOAP_FMAC4 soap_in_PointerTosoap__styleChoice(struct soap*, const char*, enum soap__styleChoice **, const char*);

#ifndef soap_write_PointerTosoap__styleChoice
#define soap_write_PointerTosoap__styleChoice(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTosoap__styleChoice(soap, data), 0) || soap_put_PointerTosoap__styleChoice(soap, data, "soap:styleChoice", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTosoap__styleChoice(struct soap*, enum soap__styleChoice *const*, const char*, const char*);

#ifndef soap_read_PointerTosoap__styleChoice
#define soap_read_PointerTosoap__styleChoice(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTosoap__styleChoice(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 enum soap__styleChoice ** SOAP_FMAC4 soap_get_PointerTosoap__styleChoice(struct soap*, enum soap__styleChoice **, const char*, const char*);

#ifndef SOAP_TYPE_PointerToxs__complexContent
#define SOAP_TYPE_PointerToxs__complexContent (152)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToxs__complexContent(struct soap*, xs__complexContent *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToxs__complexContent(struct soap*, const char *, int, xs__complexContent *const*, const char *);
SOAP_FMAC3 xs__complexContent ** SOAP_FMAC4 soap_in_PointerToxs__complexContent(struct soap*, const char*, xs__complexContent **, const char*);

#ifndef soap_write_PointerToxs__complexContent
#define soap_write_PointerToxs__complexContent(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerToxs__complexContent(soap, data), 0) || soap_put_PointerToxs__complexContent(soap, data, "xs:complexContent", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToxs__complexContent(struct soap*, xs__complexContent *const*, const char*, const char*);

#ifndef soap_read_PointerToxs__complexContent
#define soap_read_PointerToxs__complexContent(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToxs__complexContent(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 xs__complexContent ** SOAP_FMAC4 soap_get_PointerToxs__complexContent(struct soap*, xs__complexContent **, const char*, const char*);

#ifndef SOAP_TYPE_PointerToxs__simpleContent
#define SOAP_TYPE_PointerToxs__simpleContent (151)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToxs__simpleContent(struct soap*, xs__simpleContent *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToxs__simpleContent(struct soap*, const char *, int, xs__simpleContent *const*, const char *);
SOAP_FMAC3 xs__simpleContent ** SOAP_FMAC4 soap_in_PointerToxs__simpleContent(struct soap*, const char*, xs__simpleContent **, const char*);

#ifndef soap_write_PointerToxs__simpleContent
#define soap_write_PointerToxs__simpleContent(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerToxs__simpleContent(soap, data), 0) || soap_put_PointerToxs__simpleContent(soap, data, "xs:simpleContent", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToxs__simpleContent(struct soap*, xs__simpleContent *const*, const char*, const char*);

#ifndef soap_read_PointerToxs__simpleContent
#define soap_read_PointerToxs__simpleContent(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToxs__simpleContent(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 xs__simpleContent ** SOAP_FMAC4 soap_get_PointerToxs__simpleContent(struct soap*, xs__simpleContent **, const char*, const char*);

#ifndef SOAP_TYPE_PointerToxs__length
#define SOAP_TYPE_PointerToxs__length (136)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToxs__length(struct soap*, xs__length *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToxs__length(struct soap*, const char *, int, xs__length *const*, const char *);
SOAP_FMAC3 xs__length ** SOAP_FMAC4 soap_in_PointerToxs__length(struct soap*, const char*, xs__length **, const char*);

#ifndef soap_write_PointerToxs__length
#define soap_write_PointerToxs__length(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerToxs__length(soap, data), 0) || soap_put_PointerToxs__length(soap, data, "xs:length", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToxs__length(struct soap*, xs__length *const*, const char*, const char*);

#ifndef soap_read_PointerToxs__length
#define soap_read_PointerToxs__length(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToxs__length(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 xs__length ** SOAP_FMAC4 soap_get_PointerToxs__length(struct soap*, xs__length **, const char*, const char*);

#ifndef SOAP_TYPE_PointerToxs__whiteSpace
#define SOAP_TYPE_PointerToxs__whiteSpace (135)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToxs__whiteSpace(struct soap*, xs__whiteSpace *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToxs__whiteSpace(struct soap*, const char *, int, xs__whiteSpace *const*, const char *);
SOAP_FMAC3 xs__whiteSpace ** SOAP_FMAC4 soap_in_PointerToxs__whiteSpace(struct soap*, const char*, xs__whiteSpace **, const char*);

#ifndef soap_write_PointerToxs__whiteSpace
#define soap_write_PointerToxs__whiteSpace(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerToxs__whiteSpace(soap, data), 0) || soap_put_PointerToxs__whiteSpace(soap, data, "xs:whiteSpace", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToxs__whiteSpace(struct soap*, xs__whiteSpace *const*, const char*, const char*);

#ifndef soap_read_PointerToxs__whiteSpace
#define soap_read_PointerToxs__whiteSpace(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToxs__whiteSpace(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 xs__whiteSpace ** SOAP_FMAC4 soap_get_PointerToxs__whiteSpace(struct soap*, xs__whiteSpace **, const char*, const char*);

#ifndef SOAP_TYPE_PointerToxs__union
#define SOAP_TYPE_PointerToxs__union (119)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToxs__union(struct soap*, xs__union *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToxs__union(struct soap*, const char *, int, xs__union *const*, const char *);
SOAP_FMAC3 xs__union ** SOAP_FMAC4 soap_in_PointerToxs__union(struct soap*, const char*, xs__union **, const char*);

#ifndef soap_write_PointerToxs__union
#define soap_write_PointerToxs__union(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerToxs__union(soap, data), 0) || soap_put_PointerToxs__union(soap, data, "xs:union", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToxs__union(struct soap*, xs__union *const*, const char*, const char*);

#ifndef soap_read_PointerToxs__union
#define soap_read_PointerToxs__union(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToxs__union(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 xs__union ** SOAP_FMAC4 soap_get_PointerToxs__union(struct soap*, xs__union **, const char*, const char*);

#ifndef SOAP_TYPE_PointerToxs__list
#define SOAP_TYPE_PointerToxs__list (118)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToxs__list(struct soap*, xs__list *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToxs__list(struct soap*, const char *, int, xs__list *const*, const char *);
SOAP_FMAC3 xs__list ** SOAP_FMAC4 soap_in_PointerToxs__list(struct soap*, const char*, xs__list **, const char*);

#ifndef soap_write_PointerToxs__list
#define soap_write_PointerToxs__list(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerToxs__list(soap, data), 0) || soap_put_PointerToxs__list(soap, data, "xs:list", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToxs__list(struct soap*, xs__list *const*, const char*, const char*);

#ifndef soap_read_PointerToxs__list
#define soap_read_PointerToxs__list(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToxs__list(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 xs__list ** SOAP_FMAC4 soap_get_PointerToxs__list(struct soap*, xs__list **, const char*, const char*);

#ifndef SOAP_TYPE_PointerToxs__restriction
#define SOAP_TYPE_PointerToxs__restriction (116)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToxs__restriction(struct soap*, xs__restriction *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToxs__restriction(struct soap*, const char *, int, xs__restriction *const*, const char *);
SOAP_FMAC3 xs__restriction ** SOAP_FMAC4 soap_in_PointerToxs__restriction(struct soap*, const char*, xs__restriction **, const char*);

#ifndef soap_write_PointerToxs__restriction
#define soap_write_PointerToxs__restriction(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerToxs__restriction(soap, data), 0) || soap_put_PointerToxs__restriction(soap, data, "xs:restriction", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToxs__restriction(struct soap*, xs__restriction *const*, const char*, const char*);

#ifndef soap_read_PointerToxs__restriction
#define soap_read_PointerToxs__restriction(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToxs__restriction(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 xs__restriction ** SOAP_FMAC4 soap_get_PointerToxs__restriction(struct soap*, xs__restriction **, const char*, const char*);

#ifndef SOAP_TYPE_PointerToxs__extension
#define SOAP_TYPE_PointerToxs__extension (115)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToxs__extension(struct soap*, xs__extension *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToxs__extension(struct soap*, const char *, int, xs__extension *const*, const char *);
SOAP_FMAC3 xs__extension ** SOAP_FMAC4 soap_in_PointerToxs__extension(struct soap*, const char*, xs__extension **, const char*);

#ifndef soap_write_PointerToxs__extension
#define soap_write_PointerToxs__extension(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerToxs__extension(soap, data), 0) || soap_put_PointerToxs__extension(soap, data, "xs:extension", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToxs__extension(struct soap*, xs__extension *const*, const char*, const char*);

#ifndef soap_read_PointerToxs__extension
#define soap_read_PointerToxs__extension(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToxs__extension(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 xs__extension ** SOAP_FMAC4 soap_get_PointerToxs__extension(struct soap*, xs__extension **, const char*, const char*);

#ifndef SOAP_TYPE_PointerToxs__attributeGroup
#define SOAP_TYPE_PointerToxs__attributeGroup (102)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToxs__attributeGroup(struct soap*, xs__attributeGroup *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToxs__attributeGroup(struct soap*, const char *, int, xs__attributeGroup *const*, const char *);
SOAP_FMAC3 xs__attributeGroup ** SOAP_FMAC4 soap_in_PointerToxs__attributeGroup(struct soap*, const char*, xs__attributeGroup **, const char*);

#ifndef soap_write_PointerToxs__attributeGroup
#define soap_write_PointerToxs__attributeGroup(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerToxs__attributeGroup(soap, data), 0) || soap_put_PointerToxs__attributeGroup(soap, data, "xs:attributeGroup", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToxs__attributeGroup(struct soap*, xs__attributeGroup *const*, const char*, const char*);

#ifndef soap_read_PointerToxs__attributeGroup
#define soap_read_PointerToxs__attributeGroup(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToxs__attributeGroup(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 xs__attributeGroup ** SOAP_FMAC4 soap_get_PointerToxs__attributeGroup(struct soap*, xs__attributeGroup **, const char*, const char*);

#ifndef SOAP_TYPE_PointerToxs__anyAttribute
#define SOAP_TYPE_PointerToxs__anyAttribute (101)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToxs__anyAttribute(struct soap*, xs__anyAttribute *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToxs__anyAttribute(struct soap*, const char *, int, xs__anyAttribute *const*, const char *);
SOAP_FMAC3 xs__anyAttribute ** SOAP_FMAC4 soap_in_PointerToxs__anyAttribute(struct soap*, const char*, xs__anyAttribute **, const char*);

#ifndef soap_write_PointerToxs__anyAttribute
#define soap_write_PointerToxs__anyAttribute(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerToxs__anyAttribute(soap, data), 0) || soap_put_PointerToxs__anyAttribute(soap, data, "xs:anyAttribute", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToxs__anyAttribute(struct soap*, xs__anyAttribute *const*, const char*, const char*);

#ifndef soap_read_PointerToxs__anyAttribute
#define soap_read_PointerToxs__anyAttribute(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToxs__anyAttribute(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 xs__anyAttribute ** SOAP_FMAC4 soap_get_PointerToxs__anyAttribute(struct soap*, xs__anyAttribute **, const char*, const char*);

#ifndef SOAP_TYPE_PointerToxs__all
#define SOAP_TYPE_PointerToxs__all (89)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToxs__all(struct soap*, xs__all *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToxs__all(struct soap*, const char *, int, xs__all *const*, const char *);
SOAP_FMAC3 xs__all ** SOAP_FMAC4 soap_in_PointerToxs__all(struct soap*, const char*, xs__all **, const char*);

#ifndef soap_write_PointerToxs__all
#define soap_write_PointerToxs__all(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerToxs__all(soap, data), 0) || soap_put_PointerToxs__all(soap, data, "xs:all", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToxs__all(struct soap*, xs__all *const*, const char*, const char*);

#ifndef soap_read_PointerToxs__all
#define soap_read_PointerToxs__all(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToxs__all(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 xs__all ** SOAP_FMAC4 soap_get_PointerToxs__all(struct soap*, xs__all **, const char*, const char*);

#ifndef SOAP_TYPE_PointerToxs__any
#define SOAP_TYPE_PointerToxs__any (81)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToxs__any(struct soap*, xs__any *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToxs__any(struct soap*, const char *, int, xs__any *const*, const char *);
SOAP_FMAC3 xs__any ** SOAP_FMAC4 soap_in_PointerToxs__any(struct soap*, const char*, xs__any **, const char*);

#ifndef soap_write_PointerToxs__any
#define soap_write_PointerToxs__any(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerToxs__any(soap, data), 0) || soap_put_PointerToxs__any(soap, data, "xs:any", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToxs__any(struct soap*, xs__any *const*, const char*, const char*);

#ifndef soap_read_PointerToxs__any
#define soap_read_PointerToxs__any(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToxs__any(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 xs__any ** SOAP_FMAC4 soap_get_PointerToxs__any(struct soap*, xs__any **, const char*, const char*);

#ifndef SOAP_TYPE_PointerToxs__seqchoice
#define SOAP_TYPE_PointerToxs__seqchoice (80)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToxs__seqchoice(struct soap*, xs__seqchoice *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToxs__seqchoice(struct soap*, const char *, int, xs__seqchoice *const*, const char *);
SOAP_FMAC3 xs__seqchoice ** SOAP_FMAC4 soap_in_PointerToxs__seqchoice(struct soap*, const char*, xs__seqchoice **, const char*);

#ifndef soap_write_PointerToxs__seqchoice
#define soap_write_PointerToxs__seqchoice(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerToxs__seqchoice(soap, data), 0) || soap_put_PointerToxs__seqchoice(soap, data, "xs:seqchoice", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToxs__seqchoice(struct soap*, xs__seqchoice *const*, const char*, const char*);

#ifndef soap_read_PointerToxs__seqchoice
#define soap_read_PointerToxs__seqchoice(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToxs__seqchoice(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 xs__seqchoice ** SOAP_FMAC4 soap_get_PointerToxs__seqchoice(struct soap*, xs__seqchoice **, const char*, const char*);

#ifndef SOAP_TYPE_PointerToxs__group
#define SOAP_TYPE_PointerToxs__group (79)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToxs__group(struct soap*, xs__group *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToxs__group(struct soap*, const char *, int, xs__group *const*, const char *);
SOAP_FMAC3 xs__group ** SOAP_FMAC4 soap_in_PointerToxs__group(struct soap*, const char*, xs__group **, const char*);

#ifndef soap_write_PointerToxs__group
#define soap_write_PointerToxs__group(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerToxs__group(soap, data), 0) || soap_put_PointerToxs__group(soap, data, "xs:group", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToxs__group(struct soap*, xs__group *const*, const char*, const char*);

#ifndef soap_read_PointerToxs__group
#define soap_read_PointerToxs__group(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToxs__group(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 xs__group ** SOAP_FMAC4 soap_get_PointerToxs__group(struct soap*, xs__group **, const char*, const char*);

#ifndef SOAP_TYPE_xs__namespaceList
#define SOAP_TYPE_xs__namespaceList (75)
#endif

#define soap_default_xs__namespaceList(soap, a) soap_default_string(soap, a)


#define soap_serialize_xs__namespaceList(soap, a) soap_serialize_string(soap, a)

SOAP_FMAC3 int SOAP_FMAC4 soap_out_xs__namespaceList(struct soap*, const char*, int, char*const*, const char*);
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in_xs__namespaceList(struct soap*, const char*, char **, const char*);

#ifndef soap_write_xs__namespaceList
#define soap_write_xs__namespaceList(soap, data) ( soap_begin_send(soap) || (soap_serialize_xs__namespaceList(soap, data), 0) || soap_put_xs__namespaceList(soap, data, "byte", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_xs__namespaceList(struct soap*, char *const*, const char*, const char*);

#ifndef soap_read_xs__namespaceList
#define soap_read_xs__namespaceList(soap, data) ( soap_begin_recv(soap) || !soap_get_xs__namespaceList(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get_xs__namespaceList(struct soap*, char **, const char*, const char*);

#ifndef SOAP_TYPE_PointerToxs__attribute
#define SOAP_TYPE_PointerToxs__attribute (61)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToxs__attribute(struct soap*, xs__attribute *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToxs__attribute(struct soap*, const char *, int, xs__attribute *const*, const char *);
SOAP_FMAC3 xs__attribute ** SOAP_FMAC4 soap_in_PointerToxs__attribute(struct soap*, const char*, xs__attribute **, const char*);

#ifndef soap_write_PointerToxs__attribute
#define soap_write_PointerToxs__attribute(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerToxs__attribute(soap, data), 0) || soap_put_PointerToxs__attribute(soap, data, "xs:attribute", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToxs__attribute(struct soap*, xs__attribute *const*, const char*, const char*);

#ifndef soap_read_PointerToxs__attribute
#define soap_read_PointerToxs__attribute(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToxs__attribute(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 xs__attribute ** SOAP_FMAC4 soap_get_PointerToxs__attribute(struct soap*, xs__attribute **, const char*, const char*);

#ifndef SOAP_TYPE_PointerTostd__vectorTemplateOfPointerToxs__element
#define SOAP_TYPE_PointerTostd__vectorTemplateOfPointerToxs__element (57)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTostd__vectorTemplateOfPointerToxs__element(struct soap*, std::vector<xs__element * >*const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTostd__vectorTemplateOfPointerToxs__element(struct soap*, const char *, int, std::vector<xs__element * >*const*, const char *);
SOAP_FMAC3 std::vector<xs__element * >** SOAP_FMAC4 soap_in_PointerTostd__vectorTemplateOfPointerToxs__element(struct soap*, const char*, std::vector<xs__element * >**, const char*);

#ifndef soap_write_PointerTostd__vectorTemplateOfPointerToxs__element
#define soap_write_PointerTostd__vectorTemplateOfPointerToxs__element(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerTostd__vectorTemplateOfPointerToxs__element(soap, data), 0) || soap_put_PointerTostd__vectorTemplateOfPointerToxs__element(soap, data, "", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTostd__vectorTemplateOfPointerToxs__element(struct soap*, std::vector<xs__element * >*const*, const char*, const char*);

#ifndef soap_read_PointerTostd__vectorTemplateOfPointerToxs__element
#define soap_read_PointerTostd__vectorTemplateOfPointerToxs__element(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTostd__vectorTemplateOfPointerToxs__element(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 std::vector<xs__element * >** SOAP_FMAC4 soap_get_PointerTostd__vectorTemplateOfPointerToxs__element(struct soap*, std::vector<xs__element * >**, const char*, const char*);

#ifndef SOAP_TYPE_PointerToxs__element
#define SOAP_TYPE_PointerToxs__element (38)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToxs__element(struct soap*, xs__element *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToxs__element(struct soap*, const char *, int, xs__element *const*, const char *);
SOAP_FMAC3 xs__element ** SOAP_FMAC4 soap_in_PointerToxs__element(struct soap*, const char*, xs__element **, const char*);

#ifndef soap_write_PointerToxs__element
#define soap_write_PointerToxs__element(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerToxs__element(soap, data), 0) || soap_put_PointerToxs__element(soap, data, "xs:element", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToxs__element(struct soap*, xs__element *const*, const char*, const char*);

#ifndef soap_read_PointerToxs__element
#define soap_read_PointerToxs__element(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToxs__element(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 xs__element ** SOAP_FMAC4 soap_get_PointerToxs__element(struct soap*, xs__element **, const char*, const char*);

#ifndef SOAP_TYPE_PointerToxs__schema
#define SOAP_TYPE_PointerToxs__schema (37)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToxs__schema(struct soap*, xs__schema *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToxs__schema(struct soap*, const char *, int, xs__schema *const*, const char *);
SOAP_FMAC3 xs__schema ** SOAP_FMAC4 soap_in_PointerToxs__schema(struct soap*, const char*, xs__schema **, const char*);

#ifndef soap_write_PointerToxs__schema
#define soap_write_PointerToxs__schema(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerToxs__schema(soap, data), 0) || soap_put_PointerToxs__schema(soap, data, "xs:schema", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToxs__schema(struct soap*, xs__schema *const*, const char*, const char*);

#ifndef soap_read_PointerToxs__schema
#define soap_read_PointerToxs__schema(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToxs__schema(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 xs__schema ** SOAP_FMAC4 soap_get_PointerToxs__schema(struct soap*, xs__schema **, const char*, const char*);

#ifndef SOAP_TYPE_PointerToxs__complexType
#define SOAP_TYPE_PointerToxs__complexType (36)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToxs__complexType(struct soap*, xs__complexType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToxs__complexType(struct soap*, const char *, int, xs__complexType *const*, const char *);
SOAP_FMAC3 xs__complexType ** SOAP_FMAC4 soap_in_PointerToxs__complexType(struct soap*, const char*, xs__complexType **, const char*);

#ifndef soap_write_PointerToxs__complexType
#define soap_write_PointerToxs__complexType(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerToxs__complexType(soap, data), 0) || soap_put_PointerToxs__complexType(soap, data, "xs:complexType", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToxs__complexType(struct soap*, xs__complexType *const*, const char*, const char*);

#ifndef soap_read_PointerToxs__complexType
#define soap_read_PointerToxs__complexType(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToxs__complexType(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 xs__complexType ** SOAP_FMAC4 soap_get_PointerToxs__complexType(struct soap*, xs__complexType **, const char*, const char*);

#ifndef SOAP_TYPE_PointerToxs__simpleType
#define SOAP_TYPE_PointerToxs__simpleType (35)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToxs__simpleType(struct soap*, xs__simpleType *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToxs__simpleType(struct soap*, const char *, int, xs__simpleType *const*, const char *);
SOAP_FMAC3 xs__simpleType ** SOAP_FMAC4 soap_in_PointerToxs__simpleType(struct soap*, const char*, xs__simpleType **, const char*);

#ifndef soap_write_PointerToxs__simpleType
#define soap_write_PointerToxs__simpleType(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerToxs__simpleType(soap, data), 0) || soap_put_PointerToxs__simpleType(soap, data, "xs:simpleType", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToxs__simpleType(struct soap*, xs__simpleType *const*, const char*, const char*);

#ifndef soap_read_PointerToxs__simpleType
#define soap_read_PointerToxs__simpleType(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToxs__simpleType(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 xs__simpleType ** SOAP_FMAC4 soap_get_PointerToxs__simpleType(struct soap*, xs__simpleType **, const char*, const char*);

#ifndef SOAP_TYPE_PointerToxs__annotation
#define SOAP_TYPE_PointerToxs__annotation (34)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToxs__annotation(struct soap*, xs__annotation *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToxs__annotation(struct soap*, const char *, int, xs__annotation *const*, const char *);
SOAP_FMAC3 xs__annotation ** SOAP_FMAC4 soap_in_PointerToxs__annotation(struct soap*, const char*, xs__annotation **, const char*);

#ifndef soap_write_PointerToxs__annotation
#define soap_write_PointerToxs__annotation(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerToxs__annotation(soap, data), 0) || soap_put_PointerToxs__annotation(soap, data, "xs:annotation", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToxs__annotation(struct soap*, xs__annotation *const*, const char*, const char*);

#ifndef soap_read_PointerToxs__annotation
#define soap_read_PointerToxs__annotation(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToxs__annotation(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 xs__annotation ** SOAP_FMAC4 soap_get_PointerToxs__annotation(struct soap*, xs__annotation **, const char*, const char*);

#ifndef SOAP_TYPE_PointerToxs__formChoice
#define SOAP_TYPE_PointerToxs__formChoice (33)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToxs__formChoice(struct soap*, enum xs__formChoice *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToxs__formChoice(struct soap*, const char *, int, enum xs__formChoice *const*, const char *);
SOAP_FMAC3 enum xs__formChoice ** SOAP_FMAC4 soap_in_PointerToxs__formChoice(struct soap*, const char*, enum xs__formChoice **, const char*);

#ifndef soap_write_PointerToxs__formChoice
#define soap_write_PointerToxs__formChoice(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerToxs__formChoice(soap, data), 0) || soap_put_PointerToxs__formChoice(soap, data, "xs:formChoice", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToxs__formChoice(struct soap*, enum xs__formChoice *const*, const char*, const char*);

#ifndef soap_read_PointerToxs__formChoice
#define soap_read_PointerToxs__formChoice(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToxs__formChoice(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 enum xs__formChoice ** SOAP_FMAC4 soap_get_PointerToxs__formChoice(struct soap*, enum xs__formChoice **, const char*, const char*);

#ifndef SOAP_TYPE_xsd__string
#define SOAP_TYPE_xsd__string (14)
#endif

#define soap_default_xsd__string(soap, a) soap_default_string(soap, a)


#define soap_serialize_xsd__string(soap, a) soap_serialize_string(soap, a)

SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__string(struct soap*, const char*, int, char*const*, const char*);
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in_xsd__string(struct soap*, const char*, char **, const char*);

#ifndef soap_write_xsd__string
#define soap_write_xsd__string(soap, data) ( soap_begin_send(soap) || (soap_serialize_xsd__string(soap, data), 0) || soap_put_xsd__string(soap, data, "byte", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_xsd__string(struct soap*, char *const*, const char*, const char*);

#ifndef soap_read_xsd__string
#define soap_read_xsd__string(soap, data) ( soap_begin_recv(soap) || !soap_get_xsd__string(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get_xsd__string(struct soap*, char **, const char*, const char*);

#ifndef SOAP_TYPE_xsd__QName
#define SOAP_TYPE_xsd__QName (13)
#endif

#define soap_default_xsd__QName(soap, a) soap_default_string(soap, a)


#define soap_serialize_xsd__QName(soap, a) soap_serialize_string(soap, a)

SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__QName(struct soap*, const char*, int, char*const*, const char*);
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in_xsd__QName(struct soap*, const char*, char **, const char*);

#ifndef soap_write_xsd__QName
#define soap_write_xsd__QName(soap, data) ( soap_begin_send(soap) || (soap_serialize_xsd__QName(soap, data), 0) || soap_put_xsd__QName(soap, data, "byte", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_xsd__QName(struct soap*, char *const*, const char*, const char*);

#ifndef soap_read_xsd__QName
#define soap_read_xsd__QName(soap, data) ( soap_begin_recv(soap) || !soap_get_xsd__QName(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get_xsd__QName(struct soap*, char **, const char*, const char*);

#ifndef SOAP_TYPE_xsd__NMTOKENS
#define SOAP_TYPE_xsd__NMTOKENS (12)
#endif

#define soap_default_xsd__NMTOKENS(soap, a) soap_default_string(soap, a)


#define soap_serialize_xsd__NMTOKENS(soap, a) soap_serialize_string(soap, a)

SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__NMTOKENS(struct soap*, const char*, int, char*const*, const char*);
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in_xsd__NMTOKENS(struct soap*, const char*, char **, const char*);

#ifndef soap_write_xsd__NMTOKENS
#define soap_write_xsd__NMTOKENS(soap, data) ( soap_begin_send(soap) || (soap_serialize_xsd__NMTOKENS(soap, data), 0) || soap_put_xsd__NMTOKENS(soap, data, "byte", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_xsd__NMTOKENS(struct soap*, char *const*, const char*, const char*);

#ifndef soap_read_xsd__NMTOKENS
#define soap_read_xsd__NMTOKENS(soap, data) ( soap_begin_recv(soap) || !soap_get_xsd__NMTOKENS(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get_xsd__NMTOKENS(struct soap*, char **, const char*, const char*);

#ifndef SOAP_TYPE_xsd__NMTOKEN
#define SOAP_TYPE_xsd__NMTOKEN (11)
#endif

#define soap_default_xsd__NMTOKEN(soap, a) soap_default_string(soap, a)


#define soap_serialize_xsd__NMTOKEN(soap, a) soap_serialize_string(soap, a)

SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__NMTOKEN(struct soap*, const char*, int, char*const*, const char*);
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in_xsd__NMTOKEN(struct soap*, const char*, char **, const char*);

#ifndef soap_write_xsd__NMTOKEN
#define soap_write_xsd__NMTOKEN(soap, data) ( soap_begin_send(soap) || (soap_serialize_xsd__NMTOKEN(soap, data), 0) || soap_put_xsd__NMTOKEN(soap, data, "byte", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_xsd__NMTOKEN(struct soap*, char *const*, const char*, const char*);

#ifndef soap_read_xsd__NMTOKEN
#define soap_read_xsd__NMTOKEN(soap, data) ( soap_begin_recv(soap) || !soap_get_xsd__NMTOKEN(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get_xsd__NMTOKEN(struct soap*, char **, const char*, const char*);

#ifndef SOAP_TYPE_xsd__NCName
#define SOAP_TYPE_xsd__NCName (10)
#endif

#define soap_default_xsd__NCName(soap, a) soap_default_string(soap, a)


#define soap_serialize_xsd__NCName(soap, a) soap_serialize_string(soap, a)

SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__NCName(struct soap*, const char*, int, char*const*, const char*);
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in_xsd__NCName(struct soap*, const char*, char **, const char*);

#ifndef soap_write_xsd__NCName
#define soap_write_xsd__NCName(soap, data) ( soap_begin_send(soap) || (soap_serialize_xsd__NCName(soap, data), 0) || soap_put_xsd__NCName(soap, data, "byte", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_xsd__NCName(struct soap*, char *const*, const char*, const char*);

#ifndef soap_read_xsd__NCName
#define soap_read_xsd__NCName(soap, data) ( soap_begin_recv(soap) || !soap_get_xsd__NCName(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get_xsd__NCName(struct soap*, char **, const char*, const char*);

#ifndef SOAP_TYPE_xsd__ID
#define SOAP_TYPE_xsd__ID (9)
#endif

#define soap_default_xsd__ID(soap, a) soap_default_string(soap, a)


#define soap_serialize_xsd__ID(soap, a) soap_serialize_string(soap, a)

SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__ID(struct soap*, const char*, int, char*const*, const char*);
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in_xsd__ID(struct soap*, const char*, char **, const char*);

#ifndef soap_write_xsd__ID
#define soap_write_xsd__ID(soap, data) ( soap_begin_send(soap) || (soap_serialize_xsd__ID(soap, data), 0) || soap_put_xsd__ID(soap, data, "byte", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_xsd__ID(struct soap*, char *const*, const char*, const char*);

#ifndef soap_read_xsd__ID
#define soap_read_xsd__ID(soap, data) ( soap_begin_recv(soap) || !soap_get_xsd__ID(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get_xsd__ID(struct soap*, char **, const char*, const char*);

#ifndef SOAP_TYPE_xsd__anyURI
#define SOAP_TYPE_xsd__anyURI (8)
#endif

#define soap_default_xsd__anyURI(soap, a) soap_default_string(soap, a)


#define soap_serialize_xsd__anyURI(soap, a) soap_serialize_string(soap, a)

SOAP_FMAC3 int SOAP_FMAC4 soap_out_xsd__anyURI(struct soap*, const char*, int, char*const*, const char*);
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in_xsd__anyURI(struct soap*, const char*, char **, const char*);

#ifndef soap_write_xsd__anyURI
#define soap_write_xsd__anyURI(soap, data) ( soap_begin_send(soap) || (soap_serialize_xsd__anyURI(soap, data), 0) || soap_put_xsd__anyURI(soap, data, "byte", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_xsd__anyURI(struct soap*, char *const*, const char*, const char*);

#ifndef soap_read_xsd__anyURI
#define soap_read_xsd__anyURI(soap, data) ( soap_begin_recv(soap) || !soap_get_xsd__anyURI(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get_xsd__anyURI(struct soap*, char **, const char*, const char*);

#ifndef SOAP_TYPE__QName
#define SOAP_TYPE__QName (5)
#endif

#define soap_default__QName(soap, a) soap_default_string(soap, a)


#define soap_serialize__QName(soap, a) soap_serialize_string(soap, a)

SOAP_FMAC3 int SOAP_FMAC4 soap_out__QName(struct soap*, const char*, int, char*const*, const char*);
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in__QName(struct soap*, const char*, char **, const char*);

#ifndef soap_write__QName
#define soap_write__QName(soap, data) ( soap_begin_send(soap) || (soap_serialize__QName(soap, data), 0) || soap_put__QName(soap, data, "byte", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put__QName(struct soap*, char *const*, const char*, const char*);

#ifndef soap_read__QName
#define soap_read__QName(soap, data) ( soap_begin_recv(soap) || !soap_get__QName(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get__QName(struct soap*, char **, const char*, const char*);

#ifndef SOAP_TYPE_string
#define SOAP_TYPE_string (4)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_string(struct soap*, char **);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_string(struct soap*, char *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_string(struct soap*, const char*, int, char*const*, const char*);
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in_string(struct soap*, const char*, char **, const char*);

#ifndef soap_write_string
#define soap_write_string(soap, data) ( soap_begin_send(soap) || (soap_serialize_string(soap, data), 0) || soap_put_string(soap, data, "byte", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_string(struct soap*, char *const*, const char*, const char*);

#ifndef soap_read_string
#define soap_read_string(soap, data) ( soap_begin_recv(soap) || !soap_get_string(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get_string(struct soap*, char **, const char*, const char*);

#ifndef SOAP_TYPE_std__vectorTemplateOfgwsdl__portType
#define SOAP_TYPE_std__vectorTemplateOfgwsdl__portType (403)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfgwsdl__portType(struct soap*, std::vector<gwsdl__portType >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfgwsdl__portType(struct soap*, const std::vector<gwsdl__portType >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfgwsdl__portType(struct soap*, const char*, int, const std::vector<gwsdl__portType >*, const char*);
SOAP_FMAC3 std::vector<gwsdl__portType >* SOAP_FMAC4 soap_in_std__vectorTemplateOfgwsdl__portType(struct soap*, const char*, std::vector<gwsdl__portType >*, const char*);

#define soap_new_std__vectorTemplateOfgwsdl__portType(soap, n) soap_instantiate_std__vectorTemplateOfgwsdl__portType(soap, n, NULL, NULL, NULL)


#define soap_delete_std__vectorTemplateOfgwsdl__portType(soap, p) soap_delete(soap, p)

SOAP_FMAC1 std::vector<gwsdl__portType > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfgwsdl__portType(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOfgwsdl__portType(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_std__vectorTemplateOfwsdl__service
#define SOAP_TYPE_std__vectorTemplateOfwsdl__service (402)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfwsdl__service(struct soap*, std::vector<wsdl__service >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfwsdl__service(struct soap*, const std::vector<wsdl__service >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfwsdl__service(struct soap*, const char*, int, const std::vector<wsdl__service >*, const char*);
SOAP_FMAC3 std::vector<wsdl__service >* SOAP_FMAC4 soap_in_std__vectorTemplateOfwsdl__service(struct soap*, const char*, std::vector<wsdl__service >*, const char*);

#define soap_new_std__vectorTemplateOfwsdl__service(soap, n) soap_instantiate_std__vectorTemplateOfwsdl__service(soap, n, NULL, NULL, NULL)


#define soap_delete_std__vectorTemplateOfwsdl__service(soap, p) soap_delete(soap, p)

SOAP_FMAC1 std::vector<wsdl__service > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfwsdl__service(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOfwsdl__service(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_std__vectorTemplateOfwsdl__binding
#define SOAP_TYPE_std__vectorTemplateOfwsdl__binding (401)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfwsdl__binding(struct soap*, std::vector<wsdl__binding >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfwsdl__binding(struct soap*, const std::vector<wsdl__binding >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfwsdl__binding(struct soap*, const char*, int, const std::vector<wsdl__binding >*, const char*);
SOAP_FMAC3 std::vector<wsdl__binding >* SOAP_FMAC4 soap_in_std__vectorTemplateOfwsdl__binding(struct soap*, const char*, std::vector<wsdl__binding >*, const char*);

#define soap_new_std__vectorTemplateOfwsdl__binding(soap, n) soap_instantiate_std__vectorTemplateOfwsdl__binding(soap, n, NULL, NULL, NULL)


#define soap_delete_std__vectorTemplateOfwsdl__binding(soap, p) soap_delete(soap, p)

SOAP_FMAC1 std::vector<wsdl__binding > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfwsdl__binding(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOfwsdl__binding(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_std__vectorTemplateOfwsdl__portType
#define SOAP_TYPE_std__vectorTemplateOfwsdl__portType (400)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfwsdl__portType(struct soap*, std::vector<wsdl__portType >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfwsdl__portType(struct soap*, const std::vector<wsdl__portType >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfwsdl__portType(struct soap*, const char*, int, const std::vector<wsdl__portType >*, const char*);
SOAP_FMAC3 std::vector<wsdl__portType >* SOAP_FMAC4 soap_in_std__vectorTemplateOfwsdl__portType(struct soap*, const char*, std::vector<wsdl__portType >*, const char*);

#define soap_new_std__vectorTemplateOfwsdl__portType(soap, n) soap_instantiate_std__vectorTemplateOfwsdl__portType(soap, n, NULL, NULL, NULL)


#define soap_delete_std__vectorTemplateOfwsdl__portType(soap, p) soap_delete(soap, p)

SOAP_FMAC1 std::vector<wsdl__portType > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfwsdl__portType(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOfwsdl__portType(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_std__vectorTemplateOfwsdl__message
#define SOAP_TYPE_std__vectorTemplateOfwsdl__message (399)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfwsdl__message(struct soap*, std::vector<wsdl__message >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfwsdl__message(struct soap*, const std::vector<wsdl__message >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfwsdl__message(struct soap*, const char*, int, const std::vector<wsdl__message >*, const char*);
SOAP_FMAC3 std::vector<wsdl__message >* SOAP_FMAC4 soap_in_std__vectorTemplateOfwsdl__message(struct soap*, const char*, std::vector<wsdl__message >*, const char*);

#define soap_new_std__vectorTemplateOfwsdl__message(soap, n) soap_instantiate_std__vectorTemplateOfwsdl__message(soap, n, NULL, NULL, NULL)


#define soap_delete_std__vectorTemplateOfwsdl__message(soap, p) soap_delete(soap, p)

SOAP_FMAC1 std::vector<wsdl__message > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfwsdl__message(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOfwsdl__message(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_std__vectorTemplateOfwsdl__import
#define SOAP_TYPE_std__vectorTemplateOfwsdl__import (397)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfwsdl__import(struct soap*, std::vector<wsdl__import >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfwsdl__import(struct soap*, const std::vector<wsdl__import >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfwsdl__import(struct soap*, const char*, int, const std::vector<wsdl__import >*, const char*);
SOAP_FMAC3 std::vector<wsdl__import >* SOAP_FMAC4 soap_in_std__vectorTemplateOfwsdl__import(struct soap*, const char*, std::vector<wsdl__import >*, const char*);

#define soap_new_std__vectorTemplateOfwsdl__import(soap, n) soap_instantiate_std__vectorTemplateOfwsdl__import(soap, n, NULL, NULL, NULL)


#define soap_delete_std__vectorTemplateOfwsdl__import(soap, p) soap_delete(soap, p)

SOAP_FMAC1 std::vector<wsdl__import > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfwsdl__import(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOfwsdl__import(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_std__vectorTemplateOfwsdl__port
#define SOAP_TYPE_std__vectorTemplateOfwsdl__port (395)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfwsdl__port(struct soap*, std::vector<wsdl__port >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfwsdl__port(struct soap*, const std::vector<wsdl__port >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfwsdl__port(struct soap*, const char*, int, const std::vector<wsdl__port >*, const char*);
SOAP_FMAC3 std::vector<wsdl__port >* SOAP_FMAC4 soap_in_std__vectorTemplateOfwsdl__port(struct soap*, const char*, std::vector<wsdl__port >*, const char*);

#define soap_new_std__vectorTemplateOfwsdl__port(soap, n) soap_instantiate_std__vectorTemplateOfwsdl__port(soap, n, NULL, NULL, NULL)


#define soap_delete_std__vectorTemplateOfwsdl__port(soap, p) soap_delete(soap, p)

SOAP_FMAC1 std::vector<wsdl__port > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfwsdl__port(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOfwsdl__port(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_std__vectorTemplateOfwsdl__binding_operation
#define SOAP_TYPE_std__vectorTemplateOfwsdl__binding_operation (379)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfwsdl__binding_operation(struct soap*, std::vector<wsdl__binding_operation >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfwsdl__binding_operation(struct soap*, const std::vector<wsdl__binding_operation >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfwsdl__binding_operation(struct soap*, const char*, int, const std::vector<wsdl__binding_operation >*, const char*);
SOAP_FMAC3 std::vector<wsdl__binding_operation >* SOAP_FMAC4 soap_in_std__vectorTemplateOfwsdl__binding_operation(struct soap*, const char*, std::vector<wsdl__binding_operation >*, const char*);

#define soap_new_std__vectorTemplateOfwsdl__binding_operation(soap, n) soap_instantiate_std__vectorTemplateOfwsdl__binding_operation(soap, n, NULL, NULL, NULL)


#define soap_delete_std__vectorTemplateOfwsdl__binding_operation(soap, p) soap_delete(soap, p)

SOAP_FMAC1 std::vector<wsdl__binding_operation > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfwsdl__binding_operation(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOfwsdl__binding_operation(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_std__vectorTemplateOfwsdl__ext_fault
#define SOAP_TYPE_std__vectorTemplateOfwsdl__ext_fault (369)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfwsdl__ext_fault(struct soap*, std::vector<wsdl__ext_fault >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfwsdl__ext_fault(struct soap*, const std::vector<wsdl__ext_fault >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfwsdl__ext_fault(struct soap*, const char*, int, const std::vector<wsdl__ext_fault >*, const char*);
SOAP_FMAC3 std::vector<wsdl__ext_fault >* SOAP_FMAC4 soap_in_std__vectorTemplateOfwsdl__ext_fault(struct soap*, const char*, std::vector<wsdl__ext_fault >*, const char*);

#define soap_new_std__vectorTemplateOfwsdl__ext_fault(soap, n) soap_instantiate_std__vectorTemplateOfwsdl__ext_fault(soap, n, NULL, NULL, NULL)


#define soap_delete_std__vectorTemplateOfwsdl__ext_fault(soap, p) soap_delete(soap, p)

SOAP_FMAC1 std::vector<wsdl__ext_fault > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfwsdl__ext_fault(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOfwsdl__ext_fault(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_std__vectorTemplateOfwsdl__operation
#define SOAP_TYPE_std__vectorTemplateOfwsdl__operation (348)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfwsdl__operation(struct soap*, std::vector<wsdl__operation >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfwsdl__operation(struct soap*, const std::vector<wsdl__operation >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfwsdl__operation(struct soap*, const char*, int, const std::vector<wsdl__operation >*, const char*);
SOAP_FMAC3 std::vector<wsdl__operation >* SOAP_FMAC4 soap_in_std__vectorTemplateOfwsdl__operation(struct soap*, const char*, std::vector<wsdl__operation >*, const char*);

#define soap_new_std__vectorTemplateOfwsdl__operation(soap, n) soap_instantiate_std__vectorTemplateOfwsdl__operation(soap, n, NULL, NULL, NULL)


#define soap_delete_std__vectorTemplateOfwsdl__operation(soap, p) soap_delete(soap, p)

SOAP_FMAC1 std::vector<wsdl__operation > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfwsdl__operation(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOfwsdl__operation(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_std__vectorTemplateOfwsdl__fault
#define SOAP_TYPE_std__vectorTemplateOfwsdl__fault (345)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfwsdl__fault(struct soap*, std::vector<wsdl__fault >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfwsdl__fault(struct soap*, const std::vector<wsdl__fault >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfwsdl__fault(struct soap*, const char*, int, const std::vector<wsdl__fault >*, const char*);
SOAP_FMAC3 std::vector<wsdl__fault >* SOAP_FMAC4 soap_in_std__vectorTemplateOfwsdl__fault(struct soap*, const char*, std::vector<wsdl__fault >*, const char*);

#define soap_new_std__vectorTemplateOfwsdl__fault(soap, n) soap_instantiate_std__vectorTemplateOfwsdl__fault(soap, n, NULL, NULL, NULL)


#define soap_delete_std__vectorTemplateOfwsdl__fault(soap, p) soap_delete(soap, p)

SOAP_FMAC1 std::vector<wsdl__fault > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfwsdl__fault(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOfwsdl__fault(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_std__vectorTemplateOfwsdl__part
#define SOAP_TYPE_std__vectorTemplateOfwsdl__part (326)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfwsdl__part(struct soap*, std::vector<wsdl__part >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfwsdl__part(struct soap*, const std::vector<wsdl__part >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfwsdl__part(struct soap*, const char*, int, const std::vector<wsdl__part >*, const char*);
SOAP_FMAC3 std::vector<wsdl__part >* SOAP_FMAC4 soap_in_std__vectorTemplateOfwsdl__part(struct soap*, const char*, std::vector<wsdl__part >*, const char*);

#define soap_new_std__vectorTemplateOfwsdl__part(soap, n) soap_instantiate_std__vectorTemplateOfwsdl__part(soap, n, NULL, NULL, NULL)


#define soap_delete_std__vectorTemplateOfwsdl__part(soap, p) soap_delete(soap, p)

SOAP_FMAC1 std::vector<wsdl__part > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfwsdl__part(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOfwsdl__part(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_std__vectorTemplateOfwsp__PolicyReference
#define SOAP_TYPE_std__vectorTemplateOfwsp__PolicyReference (325)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfwsp__PolicyReference(struct soap*, std::vector<wsp__PolicyReference >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfwsp__PolicyReference(struct soap*, const std::vector<wsp__PolicyReference >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfwsp__PolicyReference(struct soap*, const char*, int, const std::vector<wsp__PolicyReference >*, const char*);
SOAP_FMAC3 std::vector<wsp__PolicyReference >* SOAP_FMAC4 soap_in_std__vectorTemplateOfwsp__PolicyReference(struct soap*, const char*, std::vector<wsp__PolicyReference >*, const char*);

#define soap_new_std__vectorTemplateOfwsp__PolicyReference(soap, n) soap_instantiate_std__vectorTemplateOfwsp__PolicyReference(soap, n, NULL, NULL, NULL)


#define soap_delete_std__vectorTemplateOfwsp__PolicyReference(soap, p) soap_delete(soap, p)

SOAP_FMAC1 std::vector<wsp__PolicyReference > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfwsp__PolicyReference(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOfwsp__PolicyReference(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_std__vectorTemplateOfwsp__Policy
#define SOAP_TYPE_std__vectorTemplateOfwsp__Policy (324)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfwsp__Policy(struct soap*, std::vector<wsp__Policy >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfwsp__Policy(struct soap*, const std::vector<wsp__Policy >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfwsp__Policy(struct soap*, const char*, int, const std::vector<wsp__Policy >*, const char*);
SOAP_FMAC3 std::vector<wsp__Policy >* SOAP_FMAC4 soap_in_std__vectorTemplateOfwsp__Policy(struct soap*, const char*, std::vector<wsp__Policy >*, const char*);

#define soap_new_std__vectorTemplateOfwsp__Policy(soap, n) soap_instantiate_std__vectorTemplateOfwsp__Policy(soap, n, NULL, NULL, NULL)


#define soap_delete_std__vectorTemplateOfwsp__Policy(soap, p) soap_delete(soap, p)

SOAP_FMAC1 std::vector<wsp__Policy > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfwsp__Policy(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOfwsp__Policy(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_std__vectorTemplateOfPointerToxs__schema
#define SOAP_TYPE_std__vectorTemplateOfPointerToxs__schema (313)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerToxs__schema(struct soap*, std::vector<xs__schema * >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerToxs__schema(struct soap*, const std::vector<xs__schema * >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerToxs__schema(struct soap*, const char*, int, const std::vector<xs__schema * >*, const char*);
SOAP_FMAC3 std::vector<xs__schema * >* SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerToxs__schema(struct soap*, const char*, std::vector<xs__schema * >*, const char*);

#define soap_new_std__vectorTemplateOfPointerToxs__schema(soap, n) soap_instantiate_std__vectorTemplateOfPointerToxs__schema(soap, n, NULL, NULL, NULL)


#define soap_delete_std__vectorTemplateOfPointerToxs__schema(soap, p) soap_delete(soap, p)

SOAP_FMAC1 std::vector<xs__schema * > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerToxs__schema(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOfPointerToxs__schema(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_std__vectorTemplateOfwsp__Attachment
#define SOAP_TYPE_std__vectorTemplateOfwsp__Attachment (303)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfwsp__Attachment(struct soap*, std::vector<wsp__Attachment >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfwsp__Attachment(struct soap*, const std::vector<wsp__Attachment >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfwsp__Attachment(struct soap*, const char*, int, const std::vector<wsp__Attachment >*, const char*);
SOAP_FMAC3 std::vector<wsp__Attachment >* SOAP_FMAC4 soap_in_std__vectorTemplateOfwsp__Attachment(struct soap*, const char*, std::vector<wsp__Attachment >*, const char*);

#define soap_new_std__vectorTemplateOfwsp__Attachment(soap, n) soap_instantiate_std__vectorTemplateOfwsp__Attachment(soap, n, NULL, NULL, NULL)


#define soap_delete_std__vectorTemplateOfwsp__Attachment(soap, p) soap_delete(soap, p)

SOAP_FMAC1 std::vector<wsp__Attachment > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfwsp__Attachment(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOfwsp__Attachment(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_std__vectorTemplateOf_XML
#define SOAP_TYPE_std__vectorTemplateOf_XML (295)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOf_XML(struct soap*, std::vector<char * >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOf_XML(struct soap*, const std::vector<char * >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOf_XML(struct soap*, const char*, int, const std::vector<char * >*, const char*);
SOAP_FMAC3 std::vector<char * >* SOAP_FMAC4 soap_in_std__vectorTemplateOf_XML(struct soap*, const char*, std::vector<char * >*, const char*);

#define soap_new_std__vectorTemplateOf_XML(soap, n) soap_instantiate_std__vectorTemplateOf_XML(soap, n, NULL, NULL, NULL)


#define soap_delete_std__vectorTemplateOf_XML(soap, p) soap_delete(soap, p)

SOAP_FMAC1 std::vector<char * > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOf_XML(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOf_XML(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_std__vectorTemplateOfsp__Parts
#define SOAP_TYPE_std__vectorTemplateOfsp__Parts (290)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfsp__Parts(struct soap*, std::vector<sp__Parts >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfsp__Parts(struct soap*, const std::vector<sp__Parts >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfsp__Parts(struct soap*, const char*, int, const std::vector<sp__Parts >*, const char*);
SOAP_FMAC3 std::vector<sp__Parts >* SOAP_FMAC4 soap_in_std__vectorTemplateOfsp__Parts(struct soap*, const char*, std::vector<sp__Parts >*, const char*);

#define soap_new_std__vectorTemplateOfsp__Parts(soap, n) soap_instantiate_std__vectorTemplateOfsp__Parts(soap, n, NULL, NULL, NULL)


#define soap_delete_std__vectorTemplateOfsp__Parts(soap, p) soap_delete(soap, p)

SOAP_FMAC1 std::vector<sp__Parts > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfsp__Parts(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOfsp__Parts(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_std__vectorTemplateOfPointerTowsp__Content
#define SOAP_TYPE_std__vectorTemplateOfPointerTowsp__Content (289)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTowsp__Content(struct soap*, std::vector<wsp__Content * >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTowsp__Content(struct soap*, const std::vector<wsp__Content * >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTowsp__Content(struct soap*, const char*, int, const std::vector<wsp__Content * >*, const char*);
SOAP_FMAC3 std::vector<wsp__Content * >* SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTowsp__Content(struct soap*, const char*, std::vector<wsp__Content * >*, const char*);

#define soap_new_std__vectorTemplateOfPointerTowsp__Content(soap, n) soap_instantiate_std__vectorTemplateOfPointerTowsp__Content(soap, n, NULL, NULL, NULL)


#define soap_delete_std__vectorTemplateOfPointerTowsp__Content(soap, p) soap_delete(soap, p)

SOAP_FMAC1 std::vector<wsp__Content * > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTowsp__Content(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOfPointerTowsp__Content(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_std__vectorTemplateOfxsd__string
#define SOAP_TYPE_std__vectorTemplateOfxsd__string (283)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfxsd__string(struct soap*, std::vector<char * >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfxsd__string(struct soap*, const std::vector<char * >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfxsd__string(struct soap*, const char*, int, const std::vector<char * >*, const char*);
SOAP_FMAC3 std::vector<char * >* SOAP_FMAC4 soap_in_std__vectorTemplateOfxsd__string(struct soap*, const char*, std::vector<char * >*, const char*);

#define soap_new_std__vectorTemplateOfxsd__string(soap, n) soap_instantiate_std__vectorTemplateOfxsd__string(soap, n, NULL, NULL, NULL)


#define soap_delete_std__vectorTemplateOfxsd__string(soap, p) soap_delete(soap, p)

SOAP_FMAC1 std::vector<char * > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfxsd__string(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOfxsd__string(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_std__vectorTemplateOfsp__Header
#define SOAP_TYPE_std__vectorTemplateOfsp__Header (281)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfsp__Header(struct soap*, std::vector<sp__Header >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfsp__Header(struct soap*, const std::vector<sp__Header >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfsp__Header(struct soap*, const char*, int, const std::vector<sp__Header >*, const char*);
SOAP_FMAC3 std::vector<sp__Header >* SOAP_FMAC4 soap_in_std__vectorTemplateOfsp__Header(struct soap*, const char*, std::vector<sp__Header >*, const char*);

#define soap_new_std__vectorTemplateOfsp__Header(soap, n) soap_instantiate_std__vectorTemplateOfsp__Header(soap, n, NULL, NULL, NULL)


#define soap_delete_std__vectorTemplateOfsp__Header(soap, p) soap_delete(soap, p)

SOAP_FMAC1 std::vector<sp__Header > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfsp__Header(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOfsp__Header(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_std__vectorTemplateOfsd__serviceData
#define SOAP_TYPE_std__vectorTemplateOfsd__serviceData (264)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfsd__serviceData(struct soap*, std::vector<sd__serviceData >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfsd__serviceData(struct soap*, const std::vector<sd__serviceData >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfsd__serviceData(struct soap*, const char*, int, const std::vector<sd__serviceData >*, const char*);
SOAP_FMAC3 std::vector<sd__serviceData >* SOAP_FMAC4 soap_in_std__vectorTemplateOfsd__serviceData(struct soap*, const char*, std::vector<sd__serviceData >*, const char*);

#define soap_new_std__vectorTemplateOfsd__serviceData(soap, n) soap_instantiate_std__vectorTemplateOfsd__serviceData(soap, n, NULL, NULL, NULL)


#define soap_delete_std__vectorTemplateOfsd__serviceData(soap, p) soap_delete(soap, p)

SOAP_FMAC1 std::vector<sd__serviceData > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfsd__serviceData(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOfsd__serviceData(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_std__vectorTemplateOfPointerTowsdl__operation
#define SOAP_TYPE_std__vectorTemplateOfPointerTowsdl__operation (263)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTowsdl__operation(struct soap*, std::vector<wsdl__operation * >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTowsdl__operation(struct soap*, const std::vector<wsdl__operation * >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTowsdl__operation(struct soap*, const char*, int, const std::vector<wsdl__operation * >*, const char*);
SOAP_FMAC3 std::vector<wsdl__operation * >* SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTowsdl__operation(struct soap*, const char*, std::vector<wsdl__operation * >*, const char*);

#define soap_new_std__vectorTemplateOfPointerTowsdl__operation(soap, n) soap_instantiate_std__vectorTemplateOfPointerTowsdl__operation(soap, n, NULL, NULL, NULL)


#define soap_delete_std__vectorTemplateOfPointerTowsdl__operation(soap, p) soap_delete(soap, p)

SOAP_FMAC1 std::vector<wsdl__operation * > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTowsdl__operation(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOfPointerTowsdl__operation(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_std__vectorTemplateOfmime__part
#define SOAP_TYPE_std__vectorTemplateOfmime__part (249)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfmime__part(struct soap*, std::vector<mime__part >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfmime__part(struct soap*, const std::vector<mime__part >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfmime__part(struct soap*, const char*, int, const std::vector<mime__part >*, const char*);
SOAP_FMAC3 std::vector<mime__part >* SOAP_FMAC4 soap_in_std__vectorTemplateOfmime__part(struct soap*, const char*, std::vector<mime__part >*, const char*);

#define soap_new_std__vectorTemplateOfmime__part(soap, n) soap_instantiate_std__vectorTemplateOfmime__part(soap, n, NULL, NULL, NULL)


#define soap_delete_std__vectorTemplateOfmime__part(soap, p) soap_delete(soap, p)

SOAP_FMAC1 std::vector<mime__part > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfmime__part(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOfmime__part(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_std__vectorTemplateOfmime__content
#define SOAP_TYPE_std__vectorTemplateOfmime__content (246)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfmime__content(struct soap*, std::vector<mime__content >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfmime__content(struct soap*, const std::vector<mime__content >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfmime__content(struct soap*, const char*, int, const std::vector<mime__content >*, const char*);
SOAP_FMAC3 std::vector<mime__content >* SOAP_FMAC4 soap_in_std__vectorTemplateOfmime__content(struct soap*, const char*, std::vector<mime__content >*, const char*);

#define soap_new_std__vectorTemplateOfmime__content(soap, n) soap_instantiate_std__vectorTemplateOfmime__content(soap, n, NULL, NULL, NULL)


#define soap_delete_std__vectorTemplateOfmime__content(soap, p) soap_delete(soap, p)

SOAP_FMAC1 std::vector<mime__content > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfmime__content(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOfmime__content(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_std__vectorTemplateOfsoap__header
#define SOAP_TYPE_std__vectorTemplateOfsoap__header (245)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfsoap__header(struct soap*, std::vector<soap__header >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfsoap__header(struct soap*, const std::vector<soap__header >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfsoap__header(struct soap*, const char*, int, const std::vector<soap__header >*, const char*);
SOAP_FMAC3 std::vector<soap__header >* SOAP_FMAC4 soap_in_std__vectorTemplateOfsoap__header(struct soap*, const char*, std::vector<soap__header >*, const char*);

#define soap_new_std__vectorTemplateOfsoap__header(soap, n) soap_instantiate_std__vectorTemplateOfsoap__header(soap, n, NULL, NULL, NULL)


#define soap_delete_std__vectorTemplateOfsoap__header(soap, p) soap_delete(soap, p)

SOAP_FMAC1 std::vector<soap__header > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfsoap__header(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOfsoap__header(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_std__vectorTemplateOfsoap__headerfault
#define SOAP_TYPE_std__vectorTemplateOfsoap__headerfault (235)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfsoap__headerfault(struct soap*, std::vector<soap__headerfault >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfsoap__headerfault(struct soap*, const std::vector<soap__headerfault >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfsoap__headerfault(struct soap*, const char*, int, const std::vector<soap__headerfault >*, const char*);
SOAP_FMAC3 std::vector<soap__headerfault >* SOAP_FMAC4 soap_in_std__vectorTemplateOfsoap__headerfault(struct soap*, const char*, std::vector<soap__headerfault >*, const char*);

#define soap_new_std__vectorTemplateOfsoap__headerfault(soap, n) soap_instantiate_std__vectorTemplateOfsoap__headerfault(soap, n, NULL, NULL, NULL)


#define soap_delete_std__vectorTemplateOfsoap__headerfault(soap, p) soap_delete(soap, p)

SOAP_FMAC1 std::vector<soap__headerfault > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfsoap__headerfault(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOfsoap__headerfault(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_std__vectorTemplateOfxs__import
#define SOAP_TYPE_std__vectorTemplateOfxs__import (179)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfxs__import(struct soap*, std::vector<xs__import >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfxs__import(struct soap*, const std::vector<xs__import >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfxs__import(struct soap*, const char*, int, const std::vector<xs__import >*, const char*);
SOAP_FMAC3 std::vector<xs__import >* SOAP_FMAC4 soap_in_std__vectorTemplateOfxs__import(struct soap*, const char*, std::vector<xs__import >*, const char*);

#define soap_new_std__vectorTemplateOfxs__import(soap, n) soap_instantiate_std__vectorTemplateOfxs__import(soap, n, NULL, NULL, NULL)


#define soap_delete_std__vectorTemplateOfxs__import(soap, p) soap_delete(soap, p)

SOAP_FMAC1 std::vector<xs__import > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfxs__import(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOfxs__import(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_std__vectorTemplateOfxs__redefine
#define SOAP_TYPE_std__vectorTemplateOfxs__redefine (178)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfxs__redefine(struct soap*, std::vector<xs__redefine >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfxs__redefine(struct soap*, const std::vector<xs__redefine >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfxs__redefine(struct soap*, const char*, int, const std::vector<xs__redefine >*, const char*);
SOAP_FMAC3 std::vector<xs__redefine >* SOAP_FMAC4 soap_in_std__vectorTemplateOfxs__redefine(struct soap*, const char*, std::vector<xs__redefine >*, const char*);

#define soap_new_std__vectorTemplateOfxs__redefine(soap, n) soap_instantiate_std__vectorTemplateOfxs__redefine(soap, n, NULL, NULL, NULL)


#define soap_delete_std__vectorTemplateOfxs__redefine(soap, p) soap_delete(soap, p)

SOAP_FMAC1 std::vector<xs__redefine > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfxs__redefine(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOfxs__redefine(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_std__vectorTemplateOfxs__include
#define SOAP_TYPE_std__vectorTemplateOfxs__include (177)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfxs__include(struct soap*, std::vector<xs__include >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfxs__include(struct soap*, const std::vector<xs__include >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfxs__include(struct soap*, const char*, int, const std::vector<xs__include >*, const char*);
SOAP_FMAC3 std::vector<xs__include >* SOAP_FMAC4 soap_in_std__vectorTemplateOfxs__include(struct soap*, const char*, std::vector<xs__include >*, const char*);

#define soap_new_std__vectorTemplateOfxs__include(soap, n) soap_instantiate_std__vectorTemplateOfxs__include(soap, n, NULL, NULL, NULL)


#define soap_delete_std__vectorTemplateOfxs__include(soap, p) soap_delete(soap, p)

SOAP_FMAC1 std::vector<xs__include > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfxs__include(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOfxs__include(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_std__vectorTemplateOfxs__complexType
#define SOAP_TYPE_std__vectorTemplateOfxs__complexType (171)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfxs__complexType(struct soap*, std::vector<xs__complexType >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfxs__complexType(struct soap*, const std::vector<xs__complexType >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfxs__complexType(struct soap*, const char*, int, const std::vector<xs__complexType >*, const char*);
SOAP_FMAC3 std::vector<xs__complexType >* SOAP_FMAC4 soap_in_std__vectorTemplateOfxs__complexType(struct soap*, const char*, std::vector<xs__complexType >*, const char*);

#define soap_new_std__vectorTemplateOfxs__complexType(soap, n) soap_instantiate_std__vectorTemplateOfxs__complexType(soap, n, NULL, NULL, NULL)


#define soap_delete_std__vectorTemplateOfxs__complexType(soap, p) soap_delete(soap, p)

SOAP_FMAC1 std::vector<xs__complexType > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfxs__complexType(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOfxs__complexType(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_std__vectorTemplateOfxs__group
#define SOAP_TYPE_std__vectorTemplateOfxs__group (170)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfxs__group(struct soap*, std::vector<xs__group >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfxs__group(struct soap*, const std::vector<xs__group >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfxs__group(struct soap*, const char*, int, const std::vector<xs__group >*, const char*);
SOAP_FMAC3 std::vector<xs__group >* SOAP_FMAC4 soap_in_std__vectorTemplateOfxs__group(struct soap*, const char*, std::vector<xs__group >*, const char*);

#define soap_new_std__vectorTemplateOfxs__group(soap, n) soap_instantiate_std__vectorTemplateOfxs__group(soap, n, NULL, NULL, NULL)


#define soap_delete_std__vectorTemplateOfxs__group(soap, p) soap_delete(soap, p)

SOAP_FMAC1 std::vector<xs__group > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfxs__group(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOfxs__group(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_std__vectorTemplateOfxs__simpleType
#define SOAP_TYPE_std__vectorTemplateOfxs__simpleType (143)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfxs__simpleType(struct soap*, std::vector<xs__simpleType >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfxs__simpleType(struct soap*, const std::vector<xs__simpleType >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfxs__simpleType(struct soap*, const char*, int, const std::vector<xs__simpleType >*, const char*);
SOAP_FMAC3 std::vector<xs__simpleType >* SOAP_FMAC4 soap_in_std__vectorTemplateOfxs__simpleType(struct soap*, const char*, std::vector<xs__simpleType >*, const char*);

#define soap_new_std__vectorTemplateOfxs__simpleType(soap, n) soap_instantiate_std__vectorTemplateOfxs__simpleType(soap, n, NULL, NULL, NULL)


#define soap_delete_std__vectorTemplateOfxs__simpleType(soap, p) soap_delete(soap, p)

SOAP_FMAC1 std::vector<xs__simpleType > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfxs__simpleType(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOfxs__simpleType(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_std__vectorTemplateOfxs__pattern
#define SOAP_TYPE_std__vectorTemplateOfxs__pattern (134)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfxs__pattern(struct soap*, std::vector<xs__pattern >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfxs__pattern(struct soap*, const std::vector<xs__pattern >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfxs__pattern(struct soap*, const char*, int, const std::vector<xs__pattern >*, const char*);
SOAP_FMAC3 std::vector<xs__pattern >* SOAP_FMAC4 soap_in_std__vectorTemplateOfxs__pattern(struct soap*, const char*, std::vector<xs__pattern >*, const char*);

#define soap_new_std__vectorTemplateOfxs__pattern(soap, n) soap_instantiate_std__vectorTemplateOfxs__pattern(soap, n, NULL, NULL, NULL)


#define soap_delete_std__vectorTemplateOfxs__pattern(soap, p) soap_delete(soap, p)

SOAP_FMAC1 std::vector<xs__pattern > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfxs__pattern(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOfxs__pattern(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_std__vectorTemplateOfxs__enumeration
#define SOAP_TYPE_std__vectorTemplateOfxs__enumeration (133)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfxs__enumeration(struct soap*, std::vector<xs__enumeration >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfxs__enumeration(struct soap*, const std::vector<xs__enumeration >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfxs__enumeration(struct soap*, const char*, int, const std::vector<xs__enumeration >*, const char*);
SOAP_FMAC3 std::vector<xs__enumeration >* SOAP_FMAC4 soap_in_std__vectorTemplateOfxs__enumeration(struct soap*, const char*, std::vector<xs__enumeration >*, const char*);

#define soap_new_std__vectorTemplateOfxs__enumeration(soap, n) soap_instantiate_std__vectorTemplateOfxs__enumeration(soap, n, NULL, NULL, NULL)


#define soap_delete_std__vectorTemplateOfxs__enumeration(soap, p) soap_delete(soap, p)

SOAP_FMAC1 std::vector<xs__enumeration > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfxs__enumeration(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOfxs__enumeration(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_std__vectorTemplateOfxs__attributeGroup
#define SOAP_TYPE_std__vectorTemplateOfxs__attributeGroup (100)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfxs__attributeGroup(struct soap*, std::vector<xs__attributeGroup >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfxs__attributeGroup(struct soap*, const std::vector<xs__attributeGroup >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfxs__attributeGroup(struct soap*, const char*, int, const std::vector<xs__attributeGroup >*, const char*);
SOAP_FMAC3 std::vector<xs__attributeGroup >* SOAP_FMAC4 soap_in_std__vectorTemplateOfxs__attributeGroup(struct soap*, const char*, std::vector<xs__attributeGroup >*, const char*);

#define soap_new_std__vectorTemplateOfxs__attributeGroup(soap, n) soap_instantiate_std__vectorTemplateOfxs__attributeGroup(soap, n, NULL, NULL, NULL)


#define soap_delete_std__vectorTemplateOfxs__attributeGroup(soap, p) soap_delete(soap, p)

SOAP_FMAC1 std::vector<xs__attributeGroup > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfxs__attributeGroup(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOfxs__attributeGroup(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_std__vectorTemplateOfxs__attribute
#define SOAP_TYPE_std__vectorTemplateOfxs__attribute (99)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfxs__attribute(struct soap*, std::vector<xs__attribute >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfxs__attribute(struct soap*, const std::vector<xs__attribute >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfxs__attribute(struct soap*, const char*, int, const std::vector<xs__attribute >*, const char*);
SOAP_FMAC3 std::vector<xs__attribute >* SOAP_FMAC4 soap_in_std__vectorTemplateOfxs__attribute(struct soap*, const char*, std::vector<xs__attribute >*, const char*);

#define soap_new_std__vectorTemplateOfxs__attribute(soap, n) soap_instantiate_std__vectorTemplateOfxs__attribute(soap, n, NULL, NULL, NULL)


#define soap_delete_std__vectorTemplateOfxs__attribute(soap, p) soap_delete(soap, p)

SOAP_FMAC1 std::vector<xs__attribute > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfxs__attribute(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOfxs__attribute(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_std__vectorTemplateOfxs__contents
#define SOAP_TYPE_std__vectorTemplateOfxs__contents (84)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfxs__contents(struct soap*, std::vector<xs__contents >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfxs__contents(struct soap*, const std::vector<xs__contents >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfxs__contents(struct soap*, const char*, int, const std::vector<xs__contents >*, const char*);
SOAP_FMAC3 std::vector<xs__contents >* SOAP_FMAC4 soap_in_std__vectorTemplateOfxs__contents(struct soap*, const char*, std::vector<xs__contents >*, const char*);

#define soap_new_std__vectorTemplateOfxs__contents(soap, n) soap_instantiate_std__vectorTemplateOfxs__contents(soap, n, NULL, NULL, NULL)


#define soap_delete_std__vectorTemplateOfxs__contents(soap, p) soap_delete(soap, p)

SOAP_FMAC1 std::vector<xs__contents > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfxs__contents(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOfxs__contents(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_std__vectorTemplateOfxs__element
#define SOAP_TYPE_std__vectorTemplateOfxs__element (72)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfxs__element(struct soap*, std::vector<xs__element >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfxs__element(struct soap*, const std::vector<xs__element >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfxs__element(struct soap*, const char*, int, const std::vector<xs__element >*, const char*);
SOAP_FMAC3 std::vector<xs__element >* SOAP_FMAC4 soap_in_std__vectorTemplateOfxs__element(struct soap*, const char*, std::vector<xs__element >*, const char*);

#define soap_new_std__vectorTemplateOfxs__element(soap, n) soap_instantiate_std__vectorTemplateOfxs__element(soap, n, NULL, NULL, NULL)


#define soap_delete_std__vectorTemplateOfxs__element(soap, p) soap_delete(soap, p)

SOAP_FMAC1 std::vector<xs__element > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfxs__element(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOfxs__element(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_std__vectorTemplateOfPointerToxs__element
#define SOAP_TYPE_std__vectorTemplateOfPointerToxs__element (39)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerToxs__element(struct soap*, std::vector<xs__element * >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerToxs__element(struct soap*, const std::vector<xs__element * >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerToxs__element(struct soap*, const char*, int, const std::vector<xs__element * >*, const char*);
SOAP_FMAC3 std::vector<xs__element * >* SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerToxs__element(struct soap*, const char*, std::vector<xs__element * >*, const char*);

#define soap_new_std__vectorTemplateOfPointerToxs__element(soap, n) soap_instantiate_std__vectorTemplateOfPointerToxs__element(soap, n, NULL, NULL, NULL)


#define soap_delete_std__vectorTemplateOfPointerToxs__element(soap, p) soap_delete(soap, p)

SOAP_FMAC1 std::vector<xs__element * > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerToxs__element(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOfPointerToxs__element(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

/* End of wsdlH.h */
